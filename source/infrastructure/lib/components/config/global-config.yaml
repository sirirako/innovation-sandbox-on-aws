# Flag to enable maintenance mode
maintenanceMode: true

# Terms of Service that will be displayed to users when requesting a lease.
termsOfService: |
  Users, who use a leased AWS account for their sandbox experiments, should NOT,

  * Attempt to access data that they are not authorized to use or access.
  * Use content for a sandbox use case that has not been approved by an admin.
  * Perform any unauthorized changes or store unapproved company data within the leased AWS account.
  * Provide static passwords, such as default or actual passwords.
  * Change or modify quotas/limits out of band for accounts.
  * Transfer data or software to any person or organization not authorized to use the leased AWS account.
  * Use any material or information from the leased AWS accounts, including images, logos, or photographs in any manner that violates copyright, trademark, or intellectual property laws.

# global controls on leases
#   requireMaxBudget   - Flag that determines whether or not LeaseTemplates must be created with a maximum budget
#   maxBudget          - The maximum value (in dollars) that can be set for a LeaseTemplate budget, if requireMaxBudget is false this configuration is ignored
#   requireMaxDuration - Flag that determines whether or not LeaseTemplates must be created with a maximum duration
#   maxDurationHours   - The maximum duration (in hours) that can be set for a LeaseTemplate duration, if requireMaxDuration is false this configuration is ignored
#   maxLeasesPerUser   - The maximum number of concurrent active leases/lease requests that a single user can have
#   ttl                - The number of days an expired lease record will remain in the database before it is permanently deleted (records may take up to 48 hours to be deleted)
leases:
  requireMaxBudget: true
  maxBudget: 50 # in dollars
  requireMaxDuration: true
  maxDurationHours: 168 # 7 days
  maxLeasesPerUser: 3
  ttl: 30 # in days

# Account Cleanup controls
#   numberOfFailedAttemptsToCancelCleanup     - The number of total failed AWS Nuke attempts required before an account fails cleanup and is sent to quarantine
#   waitBeforeRetryFailedAttemptSeconds       - The delay between failed attempts of failed AWS Nuke executions
#   numberOfSuccessfulAttemptsToFinishCleanup - The number of total successful AWS Nuke attempts required before an account succeeds cleanup and is sent to available
#   waitBeforeRerunSuccessfulAttemptSeconds   - The delay between successful attempts of AWS Nuke executions
cleanup:
  numberOfFailedAttemptsToCancelCleanup: 3
  waitBeforeRetryFailedAttemptSeconds: 5
  numberOfSuccessfulAttemptsToFinishCleanup: 2
  waitBeforeRerunSuccessfulAttemptSeconds: 30

# Authentication Configuration
# idpSignInUrl              - The value of "IAM Identity Center sign-in URL"
# idpSignOutUrl             - The value of "IAM Identity Center sign-out URL"
# idpAudience               - The audience identifier set in the creation of the IAM Identity Center custom application
# webAppUrl                 - The cloud front distribution URL or the URL of your custom domain
# awsAccessPortalUrl        - The value of "AWS access portal URL".
# sessionDurationInMinutes  - The length of time (in minutes) that a user's session should remain valid before requiring re-authentication
auth:
  idpSignInUrl: ""
  idpSignOutUrl: ""
  idpAudience: ""
  webAppUrl: ""
  awsAccessPortalUrl: ""
  sessionDurationInMinutes: 60

# Email Notification controls
#   emailFrom - The email address to use in the "from" field of all email notifications
notification:
  emailFrom: ""
