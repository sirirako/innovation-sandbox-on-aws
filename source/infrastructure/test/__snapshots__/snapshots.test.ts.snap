// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`IdcStack Snapshot > matches the snapshot 1`] = `
{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-east-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs20.x",
      },
      "cn-northwest-1": {
        "value": "nodejs20.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs20.x",
      },
      "us-gov-west-1": {
        "value": "nodejs20.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-isob-west-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
    "Mapping": {
      "context": {
        "apiThrottlingBurstLimit": 200,
        "apiThrottlingRateLimit": 100,
        "cloudWatchLogRetentionInDays": 90,
        "deploymentMode": "prod",
        "logLevel": "INFO",
        "publicEcrRegistry": "public.ecr.aws/aws-solutions",
        "publicEcrTag": "v1.0.0",
        "s3LogsArchiveRetentionInDays": 365,
        "s3LogsGlacierRetentionInDays": 2555,
        "sendAnonymizedUsageMetrics": "true",
        "solutionId": "SO0284",
        "solutionName": "innovation-sandbox-on-aws",
        "version": "v1.0.0",
      },
    },
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "IDC Stack Configuration",
          },
          "Parameters": [
            "Namespace",
            "HubAccountId",
            "IdentityStoreId",
            "SsoInstanceArn",
          ],
        },
      ],
      "ParameterLabels": {
        "HubAccountId": {
          "default": "Hub Account Id",
        },
        "IdentityStoreId": {
          "default": "Identity Store Id",
        },
        "Namespace": {
          "default": "Namespace",
        },
        "SsoInstanceArn": {
          "default": "SSO Instance ARN",
        },
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "HubAccountId": {
      "AllowedPattern": "^[0-9]{12}$",
      "Description": "The AWS Account Id where the Innovation Sandbox hub application is (to be) deployed",
      "Type": "String",
    },
    "IdentityStoreId": {
      "AllowedPattern": "^d-[0-9a-f]{10}|[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
      "Description": "The Identity Store Id of the Identity Source in IAM Identity Center (d-xxxxxxxxxx)",
      "Type": "String",
    },
    "Namespace": {
      "AllowedPattern": "^[0-9a-zA-Z]{3,8}$",
      "Default": "myisb",
      "Description": "The namespace for this deployment of Innovation Sandbox (must be the same for all member stacks). Alphanumeric characters of length between 3 and 8",
      "Type": "String",
    },
    "SsoInstanceArn": {
      "AllowedPattern": "^arn:aws:sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}$",
      "Description": "The ARN of the SSO instance in IAM Identity Center (arn:aws:sso:::instance/ssoins-xxxxxxxxxxxxxxxx)",
      "Type": "String",
    },
  },
  "Resources": {
    "ISBLogGroupCustomResources63629E09": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbIdcStack98941104",
            "Arn",
          ],
        },
        "RetentionInDays": {
          "Fn::FindInMap": [
            "Mapping",
            "context",
            "cloudWatchLogRetentionInDays",
            {
              "DefaultValue": "",
            },
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "IdcConfigParameterShare": {
      "Properties": {
        "AllowExternalPrincipals": false,
        "Name": {
          "Fn::Join": [
            "",
            [
              "Isb-",
              {
                "Ref": "Namespace",
              },
              "-IdcConfigShare",
            ],
          ],
        },
        "PermissionArns": [
          "arn:aws:ram::aws:permission/AWSRAMDefaultPermissionSSMParameterReadOnly",
        ],
        "Principals": [
          {
            "Ref": "HubAccountId",
          },
        ],
        "ResourceArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":ssm:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":parameter/",
                {
                  "Ref": "IdcConfiguration94B4F37E",
                },
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::RAM::ResourceShare",
    },
    "IdcConfiguration94B4F37E": {
      "Properties": {
        "Description": "The IDC configuration for Innovation Sandbox",
        "Name": {
          "Fn::Join": [
            "",
            [
              "InnovationSandbox_",
              {
                "Ref": "Namespace",
              },
              "_Idc_Configuration",
            ],
          ],
        },
        "Tags": {
          "aws-solutions:isb-id": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "Namespace",
                },
                "_isb",
              ],
            ],
          },
        },
        "Tier": "Advanced",
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              "{"identityStoreId":"",
              {
                "Ref": "IdentityStoreId",
              },
              "","ssoInstanceArn":"",
              {
                "Ref": "SsoInstanceArn",
              },
              "","solutionVersion":"",
              {
                "Fn::FindInMap": [
                  "Mapping",
                  "context",
                  "version",
                  {
                    "DefaultValue": "",
                  },
                ],
              },
              "","supportedSchemas":"[\\"1\\"]"}",
            ],
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "IdcConfigurerISBLambdaLayerIsbIdcStackCommonLayerVersion93CBD7A5": {
      "Properties": {
        "CompatibleArchitectures": [
          "arm64",
        ],
        "CompatibleRuntimes": [
          "nodejs22.x",
        ],
        "Content": "Omitted to remove snapshot dependency on hash",
        "Description": "Common lib for Innovation Sandbox on AWS",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "IdcConfigurerISBLambdaLayerIsbIdcStackDependenciesLayerVersion638C638F": {
      "Properties": {
        "CompatibleArchitectures": [
          "arm64",
        ],
        "CompatibleRuntimes": [
          "nodejs22.x",
        ],
        "Content": "Omitted to remove snapshot dependency on hash",
        "Description": "Third party runtime dependencies for Innovation Sandbox on AWS",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "IdcConfigurerIdcConfigurerLambdaFunctionA54B49F3": {
      "DependsOn": [
        "IdcConfigurerIdcConfigurerLambdaFunctionFunctionRoleDefaultPolicyC0DF290A",
        "IdcConfigurerIdcConfigurerLambdaFunctionFunctionRole63CCE63C",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "Custom resource lambda that configures the IDC instance",
        "Environment": {
          "Variables": {
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "IDENTITY_STORE_ID": {
              "Ref": "IdentityStoreId",
            },
            "ISB_NAMESPACE": {
              "Ref": "Namespace",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "IdcConfigurer",
            "SSO_INSTANCE_ARN": {
              "Ref": "SsoInstanceArn",
            },
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-IdcConfigurerLambdaFunction-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IdcConfigurerISBLambdaLayerIsbIdcStackDependenciesLayerVersion638C638F",
          },
          {
            "Ref": "IdcConfigurerISBLambdaLayerIsbIdcStackCommonLayerVersion93CBD7A5",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupCustomResources63629E09",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IdcConfigurerIdcConfigurerLambdaFunctionFunctionRole63CCE63C",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "IdcConfigurerIdcConfigurerLambdaFunctionFunctionRole63CCE63C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IdcConfigurerIdcConfigurerLambdaFunctionFunctionRoleDefaultPolicyC0DF290A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupCustomResources63629E09",
                  "Arn",
                ],
              },
            },
            {
              "Action": "identitystore:CreateGroup",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":identitystore::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":identitystore/",
                    {
                      "Ref": "IdentityStoreId",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "identitystore:ListGroups",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":identitystore::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":identitystore/",
                      {
                        "Ref": "IdentityStoreId",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":identitystore:::group/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "sso:ListPermissionSets",
                "sso:DescribePermissionSet",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Ref": "SsoInstanceArn",
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sso:::permissionSet/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "/",
                              {
                                "Ref": "SsoInstanceArn",
                              },
                            ],
                          },
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "sso:CreatePermissionSet",
                "sso:AttachManagedPolicyToPermissionSet",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Ref": "SsoInstanceArn",
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sso:::permissionSet/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "/",
                              {
                                "Ref": "SsoInstanceArn",
                              },
                            ],
                          },
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IdcConfigurerIdcConfigurerLambdaFunctionFunctionRoleDefaultPolicyC0DF290A",
        "Roles": [
          {
            "Ref": "IdcConfigurerIdcConfigurerLambdaFunctionFunctionRole63CCE63C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IdcConfigurerIdcConfigurerLambdaFunctionIsbCustomResourceECB8735C": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "IdcConfigurerIdcConfigurerLambdaFunctionIsbProviderframeworkonEvent40CCC6DC",
            "Arn",
          ],
        },
      },
      "Type": "Custom::IdcConfigurer",
      "UpdateReplacePolicy": "Delete",
    },
    "IdcConfigurerIdcConfigurerLambdaFunctionIsbProviderframeworkonEvent40CCC6DC": {
      "DependsOn": [
        "IdcConfigurerIdcConfigurerLambdaFunctionIsbProviderframeworkonEventServiceRoleDefaultPolicyC0DE13CC",
        "IdcConfigurerIdcConfigurerLambdaFunctionIsbProviderframeworkonEventServiceRole37F107B0",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "AWS CDK resource provider framework - onEvent (IsbIdcStack/IdcConfigurer/IdcConfigurerLambdaFunction/IsbProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "IdcConfigurerIdcConfigurerLambdaFunctionA54B49F3",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "ISBLogGroupCustomResources63629E09",
          },
        },
        "Role": {
          "Fn::GetAtt": [
            "IdcConfigurerIdcConfigurerLambdaFunctionIsbProviderframeworkonEventServiceRole37F107B0",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "IdcConfigurerIdcConfigurerLambdaFunctionIsbProviderframeworkonEventServiceRole37F107B0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IdcConfigurerIdcConfigurerLambdaFunctionIsbProviderframeworkonEventServiceRoleDefaultPolicyC0DE13CC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "IdcConfigurerIdcConfigurerLambdaFunctionA54B49F3",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "IdcConfigurerIdcConfigurerLambdaFunctionA54B49F3",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IdcConfigurerIdcConfigurerLambdaFunctionA54B49F3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IdcConfigurerIdcConfigurerLambdaFunctionIsbProviderframeworkonEventServiceRoleDefaultPolicyC0DE13CC",
        "Roles": [
          {
            "Ref": "IdcConfigurerIdcConfigurerLambdaFunctionIsbProviderframeworkonEventServiceRole37F107B0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IdcRoleF5AE7C04": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CFN_NO_EXPLICIT_RESOURCE_NAMES",
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ArnEquals": {
                  "aws:PrincipalArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "HubAccountId",
                        },
                        ":role/InnovationSandbox-",
                        {
                          "Ref": "Namespace",
                        },
                        "-IntermediateRole",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "HubAccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role to be assumed for IDC operations",
        "RoleName": {
          "Fn::Join": [
            "",
            [
              "InnovationSandbox-",
              {
                "Ref": "Namespace",
              },
              "-IdcRole",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IdcRolePolicy71BEA32D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "identitystore:GetUserId",
                "identitystore:DescribeUser",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":identitystore::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":identitystore/",
                      {
                        "Ref": "IdentityStoreId",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":identitystore:::user/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "identitystore:ListGroups",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":identitystore::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":identitystore/",
                      {
                        "Ref": "IdentityStoreId",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":identitystore:::group/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "identitystore:ListGroupMembershipsForMember",
                "identitystore:ListGroupMemberships",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":identitystore::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":identitystore/",
                      {
                        "Ref": "IdentityStoreId",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":identitystore:::group/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":identitystore:::membership/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":identitystore:::user/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "sso:ListPermissionSets",
                "sso:DescribePermissionSet",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Ref": "SsoInstanceArn",
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sso:::permissionSet/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "/",
                              {
                                "Ref": "SsoInstanceArn",
                              },
                            ],
                          },
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "sso:CreateAccountAssignment",
                "sso:DeleteAccountAssignment",
                "sso:ListAccountAssignments",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Ref": "SsoInstanceArn",
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sso:::account/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":sso:::permissionSet/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "/",
                              {
                                "Ref": "SsoInstanceArn",
                              },
                            ],
                          },
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IdcRolePolicy71BEA32D",
        "Roles": [
          {
            "Ref": "IdcRoleF5AE7C04",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IsbKmsKeyIsbIdcStack98941104": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "Encryption Key for Innovation Sandbox: IsbIdcStack",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "logs.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "IsbKmsKeyIsbIdcStackAlias3636A1A0": {
      "Properties": {
        "AliasName": {
          "Fn::Join": [
            "",
            [
              "alias/AwsSolutions/InnovationSandbox/",
              {
                "Ref": "Namespace",
              },
              "/IsbIdcStack",
            ],
          ],
        },
        "TargetKeyId": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbIdcStack98941104",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
  "Transform": [
    "AWS::LanguageExtensions",
  ],
}
`;

exports[`IsbAccountPoolStack Snapshot > matches the snapshot 1`] = `
{
  "Conditions": {
    "SendAnonymizedMetricsCondition": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "Mapping",
            "context",
            "sendAnonymizedUsageMetrics",
            {
              "DefaultValue": "",
            },
          ],
        },
        "true",
      ],
    },
  },
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-east-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs20.x",
      },
      "cn-northwest-1": {
        "value": "nodejs20.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs20.x",
      },
      "us-gov-west-1": {
        "value": "nodejs20.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-isob-west-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
    "Mapping": {
      "context": {
        "apiThrottlingBurstLimit": 200,
        "apiThrottlingRateLimit": 100,
        "cloudWatchLogRetentionInDays": 90,
        "deploymentMode": "prod",
        "logLevel": "INFO",
        "publicEcrRegistry": "public.ecr.aws/aws-solutions",
        "publicEcrTag": "v1.0.0",
        "s3LogsArchiveRetentionInDays": 365,
        "s3LogsGlacierRetentionInDays": 2555,
        "sendAnonymizedUsageMetrics": "true",
        "solutionId": "SO0284",
        "solutionName": "innovation-sandbox-on-aws",
        "version": "v1.0.0",
      },
    },
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "AccountPool Stack Configuration",
          },
          "Parameters": [
            "Namespace",
            "HubAccountId",
            "ParentOuId",
            "IsbManagedRegions",
          ],
        },
      ],
      "ParameterLabels": {
        "HubAccountId": {
          "default": "Hub Account Id",
        },
        "IsbManagedRegions": {
          "default": "ISB Managed Regions",
        },
        "Namespace": {
          "default": "Namespace",
        },
        "ParentOuId": {
          "default": "Parent OU Id",
        },
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "HubAccountId": {
      "AllowedPattern": "^[0-9]{12}$",
      "Description": "The AWS Account Id where the Innovation Sandbox hub application is (to be) deployed",
      "Type": "String",
    },
    "IsbManagedRegions": {
      "AllowedPattern": "^[a-z]{2}(-[a-z]+-\\d{1})(,[ ]*[a-z]{2}(-[a-z]+-\\d{1}))*$",
      "ConstraintDescription": "Must be a comma-separated list of valid AWS Region codes, e.g., us-east-1,eu-west-1",
      "Description": "Provide list of AWS Regions to limit the use to specific regions.",
      "Type": "CommaDelimitedList",
    },
    "Namespace": {
      "AllowedPattern": "^[0-9a-zA-Z]{3,8}$",
      "Default": "myisb",
      "Description": "The namespace for this deployment of Innovation Sandbox (must be the same for all member stacks). Alphanumeric characters of length between 3 and 8",
      "Type": "String",
    },
    "ParentOuId": {
      "AllowedPattern": "^(r-[0-9a-z]{4,32})|(ou-[0-9a-z]{4,32}-[a-z0-9]{8,32})$",
      "Description": "Provide Root id or organization unit id where Innovation Sandbox OUs will be created",
      "Type": "String",
    },
  },
  "Resources": {
    "AccountPoolConfigParameterShare": {
      "Properties": {
        "AllowExternalPrincipals": false,
        "Name": {
          "Fn::Join": [
            "",
            [
              "Isb-",
              {
                "Ref": "Namespace",
              },
              "-AccountPoolConfigShare",
            ],
          ],
        },
        "PermissionArns": [
          "arn:aws:ram::aws:permission/AWSRAMDefaultPermissionSSMParameterReadOnly",
        ],
        "Principals": [
          {
            "Ref": "HubAccountId",
          },
        ],
        "ResourceArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":ssm:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":parameter/",
                {
                  "Ref": "AccountPoolConfigurationCF37E5E0",
                },
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::RAM::ResourceShare",
    },
    "AccountPoolConfigurationCF37E5E0": {
      "Properties": {
        "Description": "The Account pool configuration for Innovation Sandbox",
        "Name": {
          "Fn::Join": [
            "",
            [
              "InnovationSandbox_",
              {
                "Ref": "Namespace",
              },
              "_AccountPool_Configuration",
            ],
          ],
        },
        "Tags": {
          "aws-solutions:isb-id": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "Namespace",
                },
                "_isb",
              ],
            ],
          },
        },
        "Tier": "Advanced",
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              "{"sandboxOuId":"",
              {
                "Fn::GetAtt": [
                  "InnovationSandboxAccountPoolOu",
                  "Id",
                ],
              },
              "","solutionVersion":"",
              {
                "Fn::FindInMap": [
                  "Mapping",
                  "context",
                  "version",
                  {
                    "DefaultValue": "",
                  },
                ],
              },
              "","supportedSchemas":"[\\"1\\"]","isbManagedRegions":"",
              {
                "Fn::Join": [
                  ",",
                  {
                    "Ref": "IsbManagedRegions",
                  },
                ],
              },
              ""}",
            ],
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "ActiveOu": {
      "Properties": {
        "Name": "Active",
        "ParentId": {
          "Fn::GetAtt": [
            "InnovationSandboxAccountPoolOu",
            "Id",
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Organizations::OrganizationalUnit",
    },
    "AvailableOu": {
      "Properties": {
        "Name": "Available",
        "ParentId": {
          "Fn::GetAtt": [
            "InnovationSandboxAccountPoolOu",
            "Id",
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Organizations::OrganizationalUnit",
    },
    "CleanUpOu": {
      "Properties": {
        "Name": "CleanUp",
        "ParentId": {
          "Fn::GetAtt": [
            "InnovationSandboxAccountPoolOu",
            "Id",
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Organizations::OrganizationalUnit",
    },
    "CostAllocationTagActivatorFunctionBF9E923D": {
      "Condition": "SendAnonymizedMetricsCondition",
      "DependsOn": [
        "CostAllocationTagActivatorFunctionRoleDefaultPolicy6801705B",
        "CostAllocationTagActivatorFunctionRole1DE7A39F",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "Custom resource lambda that activates the cost allocation tag",
        "Environment": {
          "Variables": {
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "ISB_TAG_NAME": "aws-solutions:isb-id",
            "NODE_OPTIONS": "--enable-source-maps",
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-CostAllocationTagActivator-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "CostAllocationTagActivatorISBLambdaLayerIsbAccountPoolStackDependenciesLayerVersionF502F75A",
          },
          {
            "Ref": "CostAllocationTagActivatorISBLambdaLayerIsbAccountPoolStackCommonLayerVersion1A37DE45",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupCustomResources63629E09",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "CostAllocationTagActivatorFunctionRole1DE7A39F",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "CostAllocationTagActivatorFunctionRole1DE7A39F": {
      "Condition": "SendAnonymizedMetricsCondition",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CostAllocationTagActivatorFunctionRoleDefaultPolicy6801705B": {
      "Condition": "SendAnonymizedMetricsCondition",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupCustomResources63629E09",
                  "Arn",
                ],
              },
            },
            {
              "Action": "ce:UpdateCostAllocationTagsStatus",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CostAllocationTagActivatorFunctionRoleDefaultPolicy6801705B",
        "Roles": [
          {
            "Ref": "CostAllocationTagActivatorFunctionRole1DE7A39F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CostAllocationTagActivatorISBLambdaLayerIsbAccountPoolStackCommonLayerVersion1A37DE45": {
      "Condition": "SendAnonymizedMetricsCondition",
      "Properties": {
        "CompatibleArchitectures": [
          "arm64",
        ],
        "CompatibleRuntimes": [
          "nodejs22.x",
        ],
        "Content": "Omitted to remove snapshot dependency on hash",
        "Description": "Common lib for Innovation Sandbox on AWS",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "CostAllocationTagActivatorISBLambdaLayerIsbAccountPoolStackDependenciesLayerVersionF502F75A": {
      "Condition": "SendAnonymizedMetricsCondition",
      "Properties": {
        "CompatibleArchitectures": [
          "arm64",
        ],
        "CompatibleRuntimes": [
          "nodejs22.x",
        ],
        "Content": "Omitted to remove snapshot dependency on hash",
        "Description": "Third party runtime dependencies for Innovation Sandbox on AWS",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "CostAllocationTagActivatorIsbCustomResourceDADB260C": {
      "Condition": "SendAnonymizedMetricsCondition",
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CostAllocationTagActivatorIsbProviderframeworkonEvent12245C05",
            "Arn",
          ],
        },
      },
      "Type": "Custom::CostAllocationTag",
      "UpdateReplacePolicy": "Delete",
    },
    "CostAllocationTagActivatorIsbProviderframeworkonEvent12245C05": {
      "Condition": "SendAnonymizedMetricsCondition",
      "DependsOn": [
        "CostAllocationTagActivatorIsbProviderframeworkonEventServiceRoleDefaultPolicyF20A12B0",
        "CostAllocationTagActivatorIsbProviderframeworkonEventServiceRoleBB4B75CD",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "AWS CDK resource provider framework - onEvent (IsbAccountPoolStack/CostAllocationTagActivator/CostAllocationTagActivator/IsbProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "CostAllocationTagActivatorFunctionBF9E923D",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "ISBLogGroupCustomResources63629E09",
          },
        },
        "Role": {
          "Fn::GetAtt": [
            "CostAllocationTagActivatorIsbProviderframeworkonEventServiceRoleBB4B75CD",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CostAllocationTagActivatorIsbProviderframeworkonEventServiceRoleBB4B75CD": {
      "Condition": "SendAnonymizedMetricsCondition",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CostAllocationTagActivatorIsbProviderframeworkonEventServiceRoleDefaultPolicyF20A12B0": {
      "Condition": "SendAnonymizedMetricsCondition",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CostAllocationTagActivatorFunctionBF9E923D",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CostAllocationTagActivatorFunctionBF9E923D",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CostAllocationTagActivatorFunctionBF9E923D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CostAllocationTagActivatorIsbProviderframeworkonEventServiceRoleDefaultPolicyF20A12B0",
        "Roles": [
          {
            "Ref": "CostAllocationTagActivatorIsbProviderframeworkonEventServiceRoleBB4B75CD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CostExplorerPolicy2242901C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ce:GetCostAndUsage",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CostExplorerPolicy2242901C",
        "Roles": [
          {
            "Ref": "OrgMgtRoleADB4C27C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EntryOu": {
      "Properties": {
        "Name": "Entry",
        "ParentId": {
          "Fn::GetAtt": [
            "InnovationSandboxAccountPoolOu",
            "Id",
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Organizations::OrganizationalUnit",
    },
    "ExitOu": {
      "Properties": {
        "Name": "Exit",
        "ParentId": {
          "Fn::GetAtt": [
            "InnovationSandboxAccountPoolOu",
            "Id",
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Organizations::OrganizationalUnit",
    },
    "FrozenOu": {
      "Properties": {
        "Name": "Frozen",
        "ParentId": {
          "Fn::GetAtt": [
            "InnovationSandboxAccountPoolOu",
            "Id",
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Organizations::OrganizationalUnit",
    },
    "ISBLogGroupCustomResources63629E09": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbAccountPoolStack2E89BFA0",
            "Arn",
          ],
        },
        "RetentionInDays": {
          "Fn::FindInMap": [
            "Mapping",
            "context",
            "cloudWatchLogRetentionInDays",
            {
              "DefaultValue": "",
            },
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "InnovationSandboxAccountPoolOu": {
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "Namespace",
              },
              "_InnovationSandboxAccountPool",
            ],
          ],
        },
        "ParentId": {
          "Ref": "ParentOuId",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Organizations::OrganizationalUnit",
    },
    "InnovationSandboxAwsNukeSupportedServicesScp": {
      "Properties": {
        "Content": {
          "Statement": [
            {
              "Condition": {
                "ArnNotLike": {
                  "aws:PrincipalARN": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::*:role/InnovationSandbox-",
                          {
                            "Ref": "Namespace",
                          },
                          "*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*AWSReservedSSO_",
                          {
                            "Ref": "Namespace",
                          },
                          "_IsbAdmins*",
                        ],
                      ],
                    },
                    "arn:aws:iam::*:role/stacksets-exec-*",
                    "arn:aws:iam::*:role/AWSControlTowerExecution",
                  ],
                },
              },
              "Effect": "Deny",
              "NotAction": [
                "access-analyzer:*",
                "acm:*",
                "acm-pca:*",
                "amplify:*",
                "aoss:*",
                "apigateway:*",
                "appconfig:*",
                "application-autoscaling:*",
                "applicationinsights:*",
                "appmesh:*",
                "apprunner:*",
                "appstream:*",
                "appsync:*",
                "athena:*",
                "autoscaling:*",
                "backup:*",
                "batch:*",
                "bedrock:*",
                "budgets:*",
                "cloud9:*",
                "clouddirectory:*",
                "cloudformation:*",
                "cloudfront:*",
                "cloudhsm:*",
                "cloudsearch:*",
                "cloudshell:*",
                "cloudtrail:*",
                "cloudwatch:*",
                "codebuild:*",
                "codecommit:*",
                "codedeploy:*",
                "codeguru-profiler:*",
                "codeguru-reviewer:*",
                "codepipeline:*",
                "codestar:*",
                "cognito-identity:*",
                "cognito-idp:*",
                "comprehend:*",
                "config:*",
                "dms:*",
                "datapipeline:*",
                "dax:*",
                "devicefarm:*",
                "ds:*",
                "dynamodb:*",
                "ec2:*",
                "ec2messages:*",
                "ecr:*",
                "ecs:*",
                "elasticfilesystem:*",
                "eks:*",
                "elasticache:*",
                "elasticbeanstalk:*",
                "es:*",
                "elastictranscoder:*",
                "elasticloadbalancing:*",
                "elasticmapreduce:*",
                "events:*",
                "firehose:*",
                "fms:*",
                "fsx:*",
                "gamelift:*",
                "globalaccelerator:*",
                "glue:*",
                "guardduty:*",
                "iam:*",
                "imagebuilder:*",
                "inspector:*",
                "iot:*",
                "iotsitewise:*",
                "iottwinmaker:*",
                "kendra:*",
                "kinesis:*",
                "kinesisanalytics:*",
                "kinesisvideo:*",
                "kms:*",
                "lambda:*",
                "lex:*",
                "lightsail:*",
                "logs:*",
                "machinelearning:*",
                "macie2:*",
                "mediaconvert:*",
                "medialive:*",
                "mediapackage:*",
                "mediastore:*",
                "mediatailor:*",
                "memorydb:*",
                "mgn:*",
                "mq:*",
                "kafka:*",
                "neptune-db:*",
                "networkmanager:*",
                "opensearch:*",
                "opsworks:*",
                "opsworks-cm:*",
                "sms-voice:*",
                "q:*",
                "pipes:*",
                "polly:*",
                "qldb:*",
                "quicksight:*",
                "rds:*",
                "redshift:*",
                "redshift-serverless:*",
                "rekognition:*",
                "resource-explorer-2:*",
                "resource-groups:*",
                "robomaker:*",
                "route53:*",
                "route53resolver:*",
                "s3:*",
                "sagemaker:*",
                "scheduler:*",
                "secretsmanager:*",
                "securityhub:*",
                "servicecatalog:*",
                "servicediscovery:*",
                "ses:*",
                "states:*",
                "signer:*",
                "sdb:*",
                "sns:*",
                "sqs:*",
                "ssm:*",
                "ssmmessages:*",
                "storagegateway:*",
                "transcribe:*",
                "transfer:*",
                "waf:*",
                "wafv2:*",
                "workspaces:*",
                "xray:*",
              ],
              "Resource": "*",
              "Sid": "DenyAllExceptAwsNukeSupportedServices",
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Service Control Policy (SCP) to allow only services supported by AWS Nuke clean workflow. ",
        "Name": "InnovationSandboxAwsNukeSupportedServicesScp",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "TargetIds": [
          {
            "Fn::GetAtt": [
              "InnovationSandboxAccountPoolOu",
              "Id",
            ],
          },
        ],
        "Type": "SERVICE_CONTROL_POLICY",
      },
      "Type": "AWS::Organizations::Policy",
    },
    "InnovationSandboxLimitRegionsScp": {
      "Properties": {
        "Content": {
          "Statement": [
            {
              "Action": "*",
              "Condition": {
                "ArnNotLike": {
                  "aws:PrincipalARN": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::*:role/InnovationSandbox-",
                          {
                            "Ref": "Namespace",
                          },
                          "*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*AWSReservedSSO_",
                          {
                            "Ref": "Namespace",
                          },
                          "_IsbAdmins*",
                        ],
                      ],
                    },
                    "arn:aws:iam::*:role/stacksets-exec-*",
                    "arn:aws:iam::*:role/AWSControlTowerExecution",
                  ],
                },
                "StringNotEquals": {
                  "aws:RequestedRegion": {
                    "Ref": "IsbManagedRegions",
                  },
                },
              },
              "Effect": "Deny",
              "Resource": "*",
              "Sid": "DenyRegionAccess",
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Service Control Policy (SCP) for Innovation Sandbox to limit use of AWS Regions.",
        "Name": "InnovationSandboxLimitRegionsScp",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "TargetIds": [
          {
            "Fn::GetAtt": [
              "InnovationSandboxAccountPoolOu",
              "Id",
            ],
          },
        ],
        "Type": "SERVICE_CONTROL_POLICY",
      },
      "Type": "AWS::Organizations::Policy",
    },
    "InnovationSandboxProtectISBScp": {
      "Properties": {
        "Content": {
          "Statement": [
            {
              "Action": "*",
              "Condition": {
                "ArnNotLike": {
                  "aws:PrincipalARN": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::*:role/InnovationSandbox-",
                          {
                            "Ref": "Namespace",
                          },
                          "*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*AWSReservedSSO_",
                          {
                            "Ref": "Namespace",
                          },
                          "_IsbAdmins*",
                        ],
                      ],
                    },
                    "arn:aws:iam::*:role/stacksets-exec-*",
                    "arn:aws:iam::*:role/AWSControlTowerExecution",
                  ],
                },
              },
              "Effect": "Deny",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:iam::*:role/InnovationSandbox-",
                      {
                        "Ref": "Namespace",
                      },
                      "*",
                    ],
                  ],
                },
                "arn:aws:iam::*:role/AWSReservedSSO*",
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:*:*:*:*Isb-",
                      {
                        "Ref": "Namespace",
                      },
                      "*",
                    ],
                  ],
                },
                "arn:aws:iam::*:role/stacksets-exec-*",
                "arn:aws:iam::*:saml-provider/*AWSSSO*",
              ],
              "Sid": "ProtectIsbControlPlaneResources",
            },
            {
              "Action": "*",
              "Condition": {
                "ArnNotLike": {
                  "aws:PrincipalARN": [
                    "arn:aws:iam::*:role/AWSControlTowerExecution",
                    "arn:aws:iam::*:role/stacksets-exec-*",
                  ],
                },
              },
              "Effect": "Deny",
              "Resource": [
                "arn:aws:cloudtrail:*:*:trail/aws-controltower-*",
                "arn:aws:events:*:*:rule/aws-controltower-*",
                "arn:aws:events:*:*:rule/*AWSControlTower*",
                "arn:aws:lambda:*:*:function:aws-controltower-*",
                "arn:aws:logs:*:*:log-group:*aws-controltower*",
                "arn:aws:sns:*:*:aws-controltower-*",
                "arn:aws:iam::*:role/aws-controltower-*",
                "arn:aws:iam::*:role/*AWSControlTower*",
              ],
              "Sid": "ProtectControlTowerResources",
            },
            {
              "Action": [
                "config:DeleteConfigurationRecorder",
                "config:DeleteDeliveryChannel",
                "config:DeleteRetentionConfiguration",
                "config:PutConfigurationRecorder",
                "config:PutDeliveryChannel",
                "config:PutRetentionConfiguration",
                "config:StopConfigurationRecorder",
              ],
              "Condition": {
                "ArnNotLike": {
                  "aws:PrincipalARN": "arn:aws:iam::*:role/AWSControlTowerExecution",
                },
              },
              "Effect": "Deny",
              "Resource": "*",
              "Sid": "DenyConfigActions",
            },
            {
              "Action": "config:*",
              "Condition": {
                "ArnNotLike": {
                  "aws:PrincipalARN": "arn:aws:iam::*:role/AWSControlTowerExecution",
                },
                "StringEquals": {
                  "aws:ResourceTag/aws-control-tower": "managed-by-control-tower",
                },
              },
              "Effect": "Deny",
              "Resource": "*",
              "Sid": "ProtectControlTowerTaggedConfigResources",
            },
            {
              "Action": [
                "config:TagResource",
                "config:UntagResource",
              ],
              "Condition": {
                "ArnNotLike": {
                  "aws:PrincipalARN": "arn:aws:iam::*:role/AWSControlTowerExecution",
                },
                "ForAnyValue:StringEquals": {
                  "aws:TagKeys": "aws-control-tower",
                },
              },
              "Effect": "Deny",
              "Resource": "*",
              "Sid": "DenyControlTowerConfigTagActions",
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Service Control Policy (SCP) for Innovation Sandbox to protect ISB control plane resources.",
        "Name": "InnovationSandboxProtectISBResourcesScp",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "TargetIds": [
          {
            "Fn::GetAtt": [
              "InnovationSandboxAccountPoolOu",
              "Id",
            ],
          },
        ],
        "Type": "SERVICE_CONTROL_POLICY",
      },
      "Type": "AWS::Organizations::Policy",
    },
    "InnovationSandboxRestrictionsScp": {
      "Properties": {
        "Content": {
          "Statement": [
            {
              "Action": [
                "aws-portal:ModifyAccount",
                "aws-portal:ViewAccount",
                "cloudtrail:CreateServiceLinkedChannel",
                "cloudtrail:UpdateServiceLinkedChannel",
                "iam:CreateUser",
                "networkmanager:AssociateTransitGatewayConnectPeer",
                "networkmanager:DisassociateTransitGatewayConnectPeer",
                "networkmanager:StartOrganizationServiceAccessUpdate",
                "ram:CreateResourceShare",
                "ram:EnableSharingWithAwsOrganization",
                "ssm:ModifyDocumentPermission",
                "wafv2:DisassociateFirewallManager",
                "wafv2:PutFirewallManagerRuleGroups",
                "cloudtrail:LookupEvents",
              ],
              "Condition": {
                "ArnNotLike": {
                  "aws:PrincipalARN": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::*:role/InnovationSandbox-",
                          {
                            "Ref": "Namespace",
                          },
                          "*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*AWSReservedSSO_",
                          {
                            "Ref": "Namespace",
                          },
                          "_IsbAdmins*",
                        ],
                      ],
                    },
                    "arn:aws:iam::*:role/stacksets-exec-*",
                    "arn:aws:iam::*:role/AWSControlTowerExecution",
                  ],
                },
              },
              "Effect": "Deny",
              "Resource": "*",
              "Sid": "SecurityAndIsolationRestrictions",
            },
            {
              "Action": [
                "aws-portal:ModifyBilling",
                "aws-portal:ModifyPaymentMethods",
                "ce:CreateAnomalyMonitor",
                "ce:CreateAnomalySubscription",
                "ce:CreateCostCategoryDefinition",
                "ce:CreateNotificationSubscription",
                "ce:CreateReport",
                "ce:UpdatePreferences",
                "devicefarm:Purchase*",
                "devicefarm:RenewOffering",
                "dynamodb:Purchase*",
                "ec2:AcceptReservedInstancesExchangeQuote",
                "ec2:EnableIpamOrganizationAdminAccount",
                "ec2:ModifyReservedInstances",
                "ec2:Purchase*",
                "elasticache:Purchase*",
                "es:Purchase*",
                "glacier:Purchase*",
                "mediaconnect:Purchase*",
                "medialive:Purchase*",
                "rds:Purchase*",
                "redshift:Purchase*",
                "shield:AssociateDRTRole",
                "shield:CreateProtection",
                "shield:CreateSubscription",
                "shield:UpdateEmergencyContactSettings",
              ],
              "Condition": {
                "ArnNotLike": {
                  "aws:PrincipalARN": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::*:role/InnovationSandbox-",
                          {
                            "Ref": "Namespace",
                          },
                          "*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*AWSReservedSSO_",
                          {
                            "Ref": "Namespace",
                          },
                          "_IsbAdmins*",
                        ],
                      ],
                    },
                    "arn:aws:iam::*:role/stacksets-exec-*",
                    "arn:aws:iam::*:role/AWSControlTowerExecution",
                  ],
                },
              },
              "Effect": "Deny",
              "Resource": "*",
              "Sid": "CostImplicationRestrictions",
            },
            {
              "Action": [
                "account:EnableRegion",
                "auditmanager:DeregisterOrganizationAdminAccount",
                "auditmanager:RegisterOrganizationAdminAccount",
                "backup:PutBackupVaultLockConfiguration",
                "cassandra:UpdatePartitioner",
                "chime:*",
                "cloudhsm:*",
                "deepcomposer:AssociateCoupon",
                "directconnect:AllocateConnectionOnInterconnect",
                "directconnect:AllocateHostedConnection",
                "directconnect:AssociateHostedConnection",
                "directconnect:CreateInterconnect",
                "drs:CreateExtendedSourceServer",
                "elasticache:PurchaseReservedCacheNodesOffering",
                "events:CreatePartnerEventSource",
                "glacier:AbortVaultLock",
                "glacier:CompleteVaultLock",
                "glacier:InitiateVaultLock",
                "glacier:SetVaultAccessPolicy",
                "iotevents:PutLoggingOptions",
                "iotsitewise:CreateBulkImportJob",
                "lambda:CreateCodeSigningConfig",
                "license-manager:CreateLicenseConversionTaskForResource",
                "macie2:UpdateOrganizationConfiguration",
                "mediaConvert:CreateQueue",
                "medialive:ClaimDevice",
                "mgn:*",
                "robomaker:CreateDeploymentJob",
                "robomaker:CreateFleet",
                "robomaker:CreateRobot",
                "robomaker:DeregisterRobot",
                "robomaker:RegisterRobot",
                "robomaker:SyncDeploymentJob",
                "robomaker:UpdateRobotDeployment",
                "route53domains:*",
                "s3-object-lambda:PutObjectLegalHold",
                "s3-object-lambda:PutObjectRetention",
                "s3:PutObjectLegalHold",
                "ses:PutDeliverabilityDashboardOption",
                "storagegateway:*",
                "wam:*",
                "wellarchitected:UpdateGlobalSettings",
                "workmail:AssumeImpersonationRole",
                "workmail:CreateImpersonationRole",
                "workmail:UpdateImpersonationRole",
                "workspaces:ModifyAccount",
              ],
              "Condition": {
                "ArnNotLike": {
                  "aws:PrincipalARN": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::*:role/InnovationSandbox-",
                          {
                            "Ref": "Namespace",
                          },
                          "*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*AWSReservedSSO_",
                          {
                            "Ref": "Namespace",
                          },
                          "_IsbAdmins*",
                        ],
                      ],
                    },
                    "arn:aws:iam::*:role/stacksets-exec-*",
                    "arn:aws:iam::*:role/AWSControlTowerExecution",
                  ],
                },
              },
              "Effect": "Deny",
              "Resource": "*",
              "Sid": "OperationalRestrictions",
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Service Control Policy (SCP) to add restrictions for security, isolation, cost and operations related resources.",
        "Name": "InnovationSandboxRestrictionsScp",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "TargetIds": [
          {
            "Fn::GetAtt": [
              "InnovationSandboxAccountPoolOu",
              "Id",
            ],
          },
        ],
        "Type": "SERVICE_CONTROL_POLICY",
      },
      "Type": "AWS::Organizations::Policy",
    },
    "InnovationSandboxWriteProtectionScp": {
      "Properties": {
        "Content": {
          "Statement": [
            {
              "Action": "*",
              "Condition": {
                "ArnNotLike": {
                  "aws:PrincipalARN": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::*:role/InnovationSandbox-",
                          {
                            "Ref": "Namespace",
                          },
                          "*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*AWSReservedSSO_",
                          {
                            "Ref": "Namespace",
                          },
                          "_IsbAdmins*",
                        ],
                      ],
                    },
                    "arn:aws:iam::*:role/stacksets-exec-*",
                    "arn:aws:iam::*:role/AWSControlTowerExecution",
                  ],
                },
              },
              "Effect": "Deny",
              "Resource": "*",
              "Sid": "DenyAllExceptIsbRoles",
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Service Control Policy (SCP) for Innovation Sandbox to restrict all resource to create or modify actions.",
        "Name": "InnovationSandboxWriteProtectionScp",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "TargetIds": [
          {
            "Fn::GetAtt": [
              "AvailableOu",
              "Id",
            ],
          },
          {
            "Fn::GetAtt": [
              "CleanUpOu",
              "Id",
            ],
          },
          {
            "Fn::GetAtt": [
              "QuarantineOu",
              "Id",
            ],
          },
          {
            "Fn::GetAtt": [
              "EntryOu",
              "Id",
            ],
          },
          {
            "Fn::GetAtt": [
              "ExitOu",
              "Id",
            ],
          },
        ],
        "Type": "SERVICE_CONTROL_POLICY",
      },
      "Type": "AWS::Organizations::Policy",
    },
    "IsbKmsKeyIsbAccountPoolStack2E89BFA0": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "Encryption Key for Innovation Sandbox: IsbAccountPoolStack",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "logs.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "IsbKmsKeyIsbAccountPoolStackAlias26F82DA1": {
      "Properties": {
        "AliasName": {
          "Fn::Join": [
            "",
            [
              "alias/AwsSolutions/InnovationSandbox/",
              {
                "Ref": "Namespace",
              },
              "/IsbAccountPoolStack",
            ],
          ],
        },
        "TargetKeyId": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbAccountPoolStack2E89BFA0",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "IsbStackSet": {
      "Properties": {
        "AutoDeployment": {
          "Enabled": true,
          "RetainStacksOnAccountRemoval": false,
        },
        "Capabilities": [
          "CAPABILITY_NAMED_IAM",
        ],
        "Description": "StackSet for Innovation Sandbox",
        "ManagedExecution": {
          "Active": true,
        },
        "OperationPreferences": {
          "ConcurrencyMode": "SOFT_FAILURE_TOLERANCE",
          "FailureTolerancePercentage": 100,
          "MaxConcurrentPercentage": 100,
          "RegionConcurrencyType": "PARALLEL",
        },
        "Parameters": [
          {
            "ParameterKey": "Namespace",
            "ParameterValue": {
              "Ref": "Namespace",
            },
          },
          {
            "ParameterKey": "HubAccountId",
            "ParameterValue": {
              "Ref": "HubAccountId",
            },
          },
        ],
        "PermissionModel": "SERVICE_MANAGED",
        "StackInstancesGroup": [
          {
            "DeploymentTargets": {
              "OrganizationalUnitIds": [
                {
                  "Fn::GetAtt": [
                    "InnovationSandboxAccountPoolOu",
                    "Id",
                  ],
                },
              ],
            },
            "Regions": [
              {
                "Ref": "AWS::Region",
              },
            ],
          },
        ],
        "StackSetName": {
          "Fn::Join": [
            "",
            [
              "Isb-",
              {
                "Ref": "Namespace",
              },
              "-SandboxAccountResources",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "TemplateURL": "Omitted to remove snapshot dependency on hash",
      },
      "Type": "AWS::CloudFormation::StackSet",
    },
    "OrgMgtRoleADB4C27C": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CFN_NO_EXPLICIT_RESOURCE_NAMES",
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ArnEquals": {
                  "aws:PrincipalArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "HubAccountId",
                        },
                        ":role/InnovationSandbox-",
                        {
                          "Ref": "Namespace",
                        },
                        "-IntermediateRole",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "HubAccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role to be assumed for operations on the org management account",
        "RoleName": {
          "Fn::Join": [
            "",
            [
              "InnovationSandbox-",
              {
                "Ref": "Namespace",
              },
              "-OrgMgtRole",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "OrganizationsPolicyFD65B3A6": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "organizations:ListOrganizationalUnitsForParent",
                "organizations:ListAccountsForParent",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "InnovationSandboxAccountPoolOu",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "AvailableOu",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "ActiveOu",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "CleanUpOu",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "QuarantineOu",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "EntryOu",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "ExitOu",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "FrozenOu",
                    "Arn",
                  ],
                },
              ],
            },
            {
              "Action": "organizations:MoveAccount",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AvailableOu",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "ActiveOu",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "CleanUpOu",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "QuarantineOu",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "EntryOu",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "ExitOu",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "FrozenOu",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":organizations::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":account/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "/",
                              {
                                "Fn::GetAtt": [
                                  "InnovationSandboxAccountPoolOu",
                                  "Arn",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":organizations::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root/",
                      {
                        "Fn::Select": [
                          1,
                          {
                            "Fn::Split": [
                              "/",
                              {
                                "Fn::GetAtt": [
                                  "InnovationSandboxAccountPoolOu",
                                  "Arn",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "organizations:DescribeAccount",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":organizations::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":account/",
                    {
                      "Fn::Select": [
                        1,
                        {
                          "Fn::Split": [
                            "/",
                            {
                              "Fn::GetAtt": [
                                "InnovationSandboxAccountPoolOu",
                                "Arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "OrganizationsPolicyFD65B3A6",
        "Roles": [
          {
            "Ref": "OrgMgtRoleADB4C27C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "QuarantineOu": {
      "Properties": {
        "Name": "Quarantine",
        "ParentId": {
          "Fn::GetAtt": [
            "InnovationSandboxAccountPoolOu",
            "Id",
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Organizations::OrganizationalUnit",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
  "Transform": [
    "AWS::LanguageExtensions",
  ],
}
`;

exports[`IsbComputeStack Snapshot > matches the snapshot 1`] = `
{
  "Conditions": {
    "AccountCleanerUsePrivateEcrRepo2A0E64EA": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "privateEcrRepo",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "",
          ],
        },
      ],
    },
    "SendAnonymizedMetricsCondition": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "Mapping",
            "context",
            "sendAnonymizedUsageMetrics",
            {
              "DefaultValue": "",
            },
          ],
        },
        "true",
      ],
    },
    "UseStableTaggingCondition": {
      "Fn::Equals": [
        {
          "Ref": "UseStableTagging",
        },
        "Yes",
      ],
    },
  },
  "Mappings": {
    "AppConfigExtensionArnMap": {
      "af-south-1": {
        "arn": "arn:aws:lambda:af-south-1:574348263942:layer:AWS-AppConfig-Extension-Arm64:80",
      },
      "ap-east-1": {
        "arn": "arn:aws:lambda:ap-east-1:630222743974:layer:AWS-AppConfig-Extension-Arm64:70",
      },
      "ap-northeast-1": {
        "arn": "arn:aws:lambda:ap-northeast-1:980059726660:layer:AWS-AppConfig-Extension-Arm64:108",
      },
      "ap-northeast-2": {
        "arn": "arn:aws:lambda:ap-northeast-2:826293736237:layer:AWS-AppConfig-Extension-Arm64:73",
      },
      "ap-northeast-3": {
        "arn": "arn:aws:lambda:ap-northeast-3:706869817123:layer:AWS-AppConfig-Extension-Arm64:74",
      },
      "ap-south-1": {
        "arn": "arn:aws:lambda:ap-south-1:554480029851:layer:AWS-AppConfig-Extension-Arm64:117",
      },
      "ap-south-2": {
        "arn": "arn:aws:lambda:ap-south-2:489524808438:layer:AWS-AppConfig-Extension-Arm64:62",
      },
      "ap-southeast-1": {
        "arn": "arn:aws:lambda:ap-southeast-1:421114256042:layer:AWS-AppConfig-Extension-Arm64:108",
      },
      "ap-southeast-2": {
        "arn": "arn:aws:lambda:ap-southeast-2:080788657173:layer:AWS-AppConfig-Extension-Arm64:142",
      },
      "ap-southeast-3": {
        "arn": "arn:aws:lambda:ap-southeast-3:418787028745:layer:AWS-AppConfig-Extension-Arm64:87",
      },
      "ap-southeast-4": {
        "arn": "arn:aws:lambda:ap-southeast-4:307021474294:layer:AWS-AppConfig-Extension-Arm64:63",
      },
      "ap-southeast-5": {
        "arn": "arn:aws:lambda:ap-southeast-5:631746059939:layer:AWS-AppConfig-Extension-Arm64:30",
      },
      "ca-central-1": {
        "arn": "arn:aws:lambda:ca-central-1:039592058896:layer:AWS-AppConfig-Extension-Arm64:72",
      },
      "ca-west-1": {
        "arn": "arn:aws:lambda:ca-west-1:436199621743:layer:AWS-AppConfig-Extension-Arm64:47",
      },
      "cn-north-1": {
        "arn": "arn:aws-cn:lambda:cn-north-1:615057806174:layer:AWS-AppConfig-Extension-Arm64:55",
      },
      "cn-northwest-1": {
        "arn": "arn:aws-cn:lambda:cn-northwest-1:615084187847:layer:AWS-AppConfig-Extension-Arm64:53",
      },
      "eu-central-1": {
        "arn": "arn:aws:lambda:eu-central-1:066940009817:layer:AWS-AppConfig-Extension-Arm64:132",
      },
      "eu-north-1": {
        "arn": "arn:aws:lambda:eu-north-1:646970417810:layer:AWS-AppConfig-Extension-Arm64:118",
      },
      "eu-south-1": {
        "arn": "arn:aws:lambda:eu-south-1:203683718741:layer:AWS-AppConfig-Extension-Arm64:68",
      },
      "eu-south-2": {
        "arn": "arn:aws:lambda:eu-south-2:586093569114:layer:AWS-AppConfig-Extension-Arm64:63",
      },
      "eu-west-1": {
        "arn": "arn:aws:lambda:eu-west-1:434848589818:layer:AWS-AppConfig-Extension-Arm64:127",
      },
      "eu-west-2": {
        "arn": "arn:aws:lambda:eu-west-2:282860088358:layer:AWS-AppConfig-Extension-Arm64:85",
      },
      "eu-west-3": {
        "arn": "arn:aws:lambda:eu-west-3:493207061005:layer:AWS-AppConfig-Extension-Arm64:81",
      },
      "il-central-1": {
        "arn": "arn:aws:lambda:il-central-1:895787185223:layer:AWS-AppConfig-Extension-Arm64:64",
      },
      "me-central-1": {
        "arn": "arn:aws:lambda:me-central-1:662846165436:layer:AWS-AppConfig-Extension-Arm64:76",
      },
      "me-south-1": {
        "arn": "arn:aws:lambda:me-south-1:559955524753:layer:AWS-AppConfig-Extension-Arm64:82",
      },
      "sa-east-1": {
        "arn": "arn:aws:lambda:sa-east-1:000010852771:layer:AWS-AppConfig-Extension-Arm64:103",
      },
      "us-east-1": {
        "arn": "arn:aws:lambda:us-east-1:027255383542:layer:AWS-AppConfig-Extension-Arm64:140",
      },
      "us-east-2": {
        "arn": "arn:aws:lambda:us-east-2:728743619870:layer:AWS-AppConfig-Extension-Arm64:114",
      },
      "us-gov-east-1": {
        "arn": "arn:aws-us-gov:lambda:us-gov-east-1:946561847325:layer:AWS-AppConfig-Extension-Arm64:56",
      },
      "us-gov-west-1": {
        "arn": "arn:aws-us-gov:lambda:us-gov-west-1:946746059096:layer:AWS-AppConfig-Extension-Arm64:55",
      },
      "us-west-1": {
        "arn": "arn:aws:lambda:us-west-1:958113053741:layer:AWS-AppConfig-Extension-Arm64:135",
      },
      "us-west-2": {
        "arn": "arn:aws:lambda:us-west-2:359756378197:layer:AWS-AppConfig-Extension-Arm64:164",
      },
    },
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-east-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs20.x",
      },
      "cn-northwest-1": {
        "value": "nodejs20.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs20.x",
      },
      "us-gov-west-1": {
        "value": "nodejs20.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-isob-west-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
    "Mapping": {
      "context": {
        "apiThrottlingBurstLimit": 200,
        "apiThrottlingRateLimit": 100,
        "cloudWatchLogRetentionInDays": 90,
        "deploymentMode": "prod",
        "logLevel": "INFO",
        "publicEcrRegistry": "public.ecr.aws/aws-solutions",
        "publicEcrTag": "v1.0.0",
        "s3LogsArchiveRetentionInDays": 365,
        "s3LogsGlacierRetentionInDays": 2555,
        "sendAnonymizedUsageMetrics": "true",
        "solutionId": "SO0284",
        "solutionName": "innovation-sandbox-on-aws",
        "version": "v1.0.0",
      },
    },
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Compute Stack Configuration",
          },
          "Parameters": [
            "Namespace",
            "OrgMgtAccountId",
            "IdcAccountId",
            "AllowListedIPRanges",
            "UseStableTagging",
            "AcceptSolutionTermsOfUse",
          ],
        },
      ],
      "ParameterLabels": {
        "AcceptSolutionTermsOfUse": {
          "default": "Accept Solution Terms of Use",
        },
        "AllowListedIPRanges": {
          "default": "Allow Listed IP Ranges",
        },
        "IdcAccountId": {
          "default": "IDC Account Id",
        },
        "Namespace": {
          "default": "Namespace",
        },
        "OrgMgtAccountId": {
          "default": "Org Management Account Id",
        },
        "UseStableTagging": {
          "default": "Use Stable Tagging",
        },
      },
    },
  },
  "Outputs": {
    "CloudFrontDistributionUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "CloudFrontUiApiIsbCloudFrontDistributionA7327667",
                "DomainName",
              ],
            },
          ],
        ],
      },
    },
    "DeploymentUUIDOutput": {
      "Value": {
        "Fn::GetAtt": [
          "DeploymentUUIDLambdaFunctionIsbCustomResourceE707861E",
          "DeploymentUUID",
        ],
      },
    },
    "IdpCertArn": {
      "Description": "The ARN of the created secret to store the IDP certificate",
      "Value": {
        "Ref": "IdpCertC53FAE82",
      },
    },
    "IsbRestApiEndpoint11756625": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "IsbRestApi377E2CC6",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
            },
            "/",
          ],
        ],
      },
    },
    "JwtSecretArn": {
      "Description": "The ARN of the created secret for JWT",
      "Value": {
        "Ref": "JwtSecretB8834B39",
      },
    },
  },
  "Parameters": {
    "AcceptSolutionTermsOfUse": {
      "AllowedPattern": "^Accept$",
      "ConstraintDescription": "You must enter "Accept" to deploy this template",
      "Description": "The Innovation Sandbox on AWS ("ISB") allows you to experiment with AWS resources in non-production accounts. Customers are responsible for making their own independent assessment of the information in this document. This document: (a) is for informational purposes only, (b) represents AWS current product offerings and practices, which are subject to change without notice, and (c) does not create any commitments or assurances from AWS and its affiliates, suppliers or licensors. AWS products or services including ISB are provided "as is" and AWS does not make any warranties, representations, or conditions of any kind, whether express or implied about ISB. AWS responsibilities and liabilities to its customers are controlled by AWS agreements, and this document is not part of, nor does it modify, any agreement between AWS and its customers.

You assume all responsibility for your use of ISB and making your own independent assessments of ISB, as well as any compliance with any additional terms, licenses, laws, rules, regulations, policies, or standards that apply to you, and, your use of ISB is subject to the AWS Shared Responsibility Model.

These Terms of Use supplement, and do not modify, any other existing agreements between you and AWS.

* Non-Production Environments Only: The ISB solution is for use only for experiments in a non-production environment and may make irreversible changes to your environment, such as terminating AWS resources. It is not for use in production accounts.
* Limitations of Cost Control Mechanisms: AWS makes no guarantees that usage cost will never exceed the budget limit set in ISB, and ISB may not prevent spend from going over the budget in all cases.
* May Not Terminate All AWS Resources: In certain limited situations, ISB may not delete all AWS Resources and AWS will attempt to notify you that manual intervention is necessary for these accounts. These accounts could continue to incur costs until manually resolved by you. AWS makes no guarantees regarding the automatic termination of these resources by ISB and you are responsible for all fees in cases where ISB does not automatically terminate resources.
* No Third-Party Use: ISB allows you to provide your own AWS accounts to internal end-users for learning and experimentation. You may not provide your AWS accounts to third-party users (such as other companies or public users) as this may grant third-party users access to your AWS resources.
* Manually Adding New Users: If you have manually added additional users to an AWS account which has already been granted to a sandbox user by ISB, it is your responsibility to ensure deletion of the user’s access after their sandbox use.
* Fraud and Abuse Detection: You are responsible for monitoring your sandbox account to detect any cases of potential fraud, abuse, or misuse.
",
      "Type": "String",
    },
    "AllowListedIPRanges": {
      "AllowedPattern": "^((\\d{1,3}\\.){3}\\d{1,3}/([0-9]|[1-2][0-9]|3[0-2]))(\\s*,\\s*((\\d{1,3}\\.){3}\\d{1,3}/([0-9]|[1-2][0-9]|3[0-2])))*$",
      "Default": "0.0.0.0/1,128.0.0.0/1",
      "Description": "Comma separated list of CIDR ranges that allow access to the API. To allow all the entire internet, leave the default 0.0.0.0/1,128.0.0.0/1",
      "Type": "CommaDelimitedList",
    },
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "IdcAccountId": {
      "AllowedPattern": "^[0-9]{12}$",
      "Description": "The AWS Account Id where the IAM Identity Center is configured",
      "Type": "String",
    },
    "Namespace": {
      "AllowedPattern": "^[0-9a-zA-Z]{3,8}$",
      "Default": "myisb",
      "Description": "The namespace for this deployment of Innovation Sandbox (must be the same for all member stacks). Alphanumeric characters of length between 3 and 8",
      "Type": "String",
    },
    "OrgMgtAccountId": {
      "AllowedPattern": "^[0-9]{12}$",
      "Description": "The AWS Account Id of the org's management account where the account pool stack is deployed",
      "Type": "String",
    },
    "UseStableTagging": {
      "AllowedValues": [
        "Yes",
        "No",
      ],
      "Default": "Yes",
      "Description": "Automatically use the most up to date and secure account cleaner image up until the next minor release. Selecting 'No' will pull the image as originally released, without any security updates.",
      "Type": "String",
    },
  },
  "Resources": {
    "AccountCleanerCodeBuildCleanupProject76064B7F": {
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbComputeStack45953B87",
            "Arn",
          ],
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [
            {
              "Name": "HUB_ACCOUNT_ID",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "AWS::AccountId",
              },
            },
            {
              "Name": "INTERMEDIATE_ROLE_ARN",
              "Type": "PLAINTEXT",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/InnovationSandbox-",
                    {
                      "Ref": "Namespace",
                    },
                    "-IntermediateRole",
                  ],
                ],
              },
            },
            {
              "Name": "CLEANUP_ROLE_NAME",
              "Type": "PLAINTEXT",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "InnovationSandbox-",
                    {
                      "Ref": "Namespace",
                    },
                    "-SandboxAccountRole",
                  ],
                ],
              },
            },
            {
              "Name": "ACCOUNT_POOL_CONFIG_PARAM_ARN",
              "Type": "PLAINTEXT",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "OrgMgtAccountId",
                    },
                    ":parameter/InnovationSandbox_",
                    {
                      "Ref": "Namespace",
                    },
                    "_AccountPool_Configuration",
                  ],
                ],
              },
            },
          ],
          "Image": {
            "Fn::If": [
              "AccountCleanerUsePrivateEcrRepo2A0E64EA",
              {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ".dkr.ecr.",
                    {
                      "Ref": "AWS::Region",
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix",
                    },
                    "/",
                    {
                      "Fn::FindInMap": [
                        "Mapping",
                        "context",
                        "privateEcrRepo",
                        {
                          "DefaultValue": "",
                        },
                      ],
                    },
                    ":latest",
                  ],
                ],
              },
              {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::FindInMap": [
                        "Mapping",
                        "context",
                        "publicEcrRegistry",
                        {
                          "DefaultValue": "",
                        },
                      ],
                    },
                    "/",
                    {
                      "Fn::FindInMap": [
                        "Mapping",
                        "context",
                        "solutionName",
                        {
                          "DefaultValue": "",
                        },
                      ],
                    },
                    "-account-cleaner:",
                    {
                      "Fn::If": [
                        "UseStableTaggingCondition",
                        {
                          "Fn::Join": [
                            ".",
                            [
                              {
                                "Fn::Select": [
                                  0,
                                  {
                                    "Fn::Split": [
                                      ".",
                                      {
                                        "Fn::FindInMap": [
                                          "Mapping",
                                          "context",
                                          "publicEcrTag",
                                          {
                                            "DefaultValue": "",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                              {
                                "Fn::Select": [
                                  1,
                                  {
                                    "Fn::Split": [
                                      ".",
                                      {
                                        "Fn::FindInMap": [
                                          "Mapping",
                                          "context",
                                          "publicEcrTag",
                                          {
                                            "DefaultValue": "",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          ],
                        },
                        {
                          "Fn::FindInMap": [
                            "Mapping",
                            "context",
                            "publicEcrTag",
                            {
                              "DefaultValue": "",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            ],
          },
          "ImagePullCredentialsType": "SERVICE_ROLE",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "LogsConfig": {
          "CloudWatchLogs": {
            "GroupName": {
              "Ref": "ISBLogGroupCleanup485A102F",
            },
            "Status": "ENABLED",
          },
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "AccountCleanerCodeBuildCleanupProjectRole3FF40319",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "version: 0.2
phases:
  build:
    commands:
      - echo =================================== Cleaning up AWS account $CLEANUP_ACCOUNT_ID ===================================
      - echo StateMachineExecutionId=$STATE_MACHINE_EXECUTION_ID
      - echo ----------------------------- Retrieving nuke config file from AWS AppConfig ------------------------------
      - |
        export APPCONFIG_TOKEN=$(aws appconfigdata start-configuration-session --application-identifier $APPCONFIG_APPLICATION_ID \\
        --environment-identifier $APPCONFIG_ENVIRONMENT_ID \\
        --configuration-profile-identifier $APPCONFIG_NUKE_CONFIG_CONFIGURATION_PROFILE_ID \\
        --query InitialConfigurationToken --output text)
      - aws appconfigdata get-latest-configuration --configuration-token $APPCONFIG_TOKEN nuke-config.yaml
      - echo ------------------------------ Ingesting cleanup config into nuke config file -----------------------------
      - sed -i s/%HUB_ACCOUNT_ID%/\${HUB_ACCOUNT_ID}/g nuke-config.yaml
      - sed -i s/%CLEANUP_ACCOUNT_ID%/\${CLEANUP_ACCOUNT_ID}/g nuke-config.yaml
      - sed -i s/%CLEANUP_ROLE_NAME%/\${CLEANUP_ROLE_NAME}/g nuke-config.yaml
      - REGIONS_STR=$(aws ssm get-parameter --name $ACCOUNT_POOL_CONFIG_PARAM_ARN --query 'Parameter.Value' --output text | jq -r '.isbManagedRegions')
      - REGION_ARRAY=$(echo $REGIONS_STR | tr ',' '\\n')
      - for REGION in $REGION_ARRAY; do sed -i  "s/^regions:\\s*$/regions:\\n  - \${REGION}/" nuke-config.yaml; done
      - cat nuke-config.yaml
      - echo ------------------------ Assuming IAM role $INTERMEDIATE_ROLE_ARN ------------------------
      - export INTERMEDIATE_ROLE_CREDS=$(aws sts assume-role --role-arn $INTERMEDIATE_ROLE_ARN --role-session-name AccountCleanup)
      - aws configure set aws_access_key_id $(echo $INTERMEDIATE_ROLE_CREDS | jq -r .Credentials.AccessKeyId) --profile intermediate-role
      - aws configure set aws_secret_access_key $(echo $INTERMEDIATE_ROLE_CREDS | jq -r .Credentials.SecretAccessKey) --profile intermediate-role
      - aws configure set aws_session_token $(echo $INTERMEDIATE_ROLE_CREDS | jq -r .Credentials.SessionToken) --profile intermediate-role
      - echo ------------------------ Assuming IAM role $CLEANUP_ROLE_NAME in sandbox account ------------------------
      - export SANDBOX_ACCOUNT_ROLE_CREDS=$(aws sts assume-role --profile intermediate-role --role-arn arn:aws:iam::$CLEANUP_ACCOUNT_ID:role/$CLEANUP_ROLE_NAME --role-session-name AccountCleanup)
      - aws configure set aws_access_key_id $(echo $SANDBOX_ACCOUNT_ROLE_CREDS | jq -r .Credentials.AccessKeyId) --profile cleanup
      - aws configure set aws_secret_access_key $(echo $SANDBOX_ACCOUNT_ROLE_CREDS | jq -r .Credentials.SecretAccessKey) --profile cleanup
      - aws configure set aws_session_token $(echo $SANDBOX_ACCOUNT_ROLE_CREDS | jq -r .Credentials.SessionToken) --profile cleanup
      - echo ------------------------ Running AWS Nuke ------------------------
      - aws-nuke nuke -c nuke-config.yaml --no-dry-run --no-alias-check --force --profile cleanup --log-format=json
",
          "Type": "NO_SOURCE",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "TimeoutInMinutes": 60,
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "AccountCleanerCodeBuildCleanupProjectRole3FF40319": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AccountCleanerCodeBuildCleanupProjectRoleDefaultPolicy2BBB17A0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupCleanup485A102F",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "AccountCleanerCodeBuildCleanupProject76064B7F",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "AccountCleanerCodeBuildCleanupProject76064B7F",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "AccountCleanerCodeBuildCleanupProject76064B7F",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IsbKmsKeyIsbComputeStack45953B87",
                  "Arn",
                ],
              },
            },
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "OrgMgtAccountId",
                    },
                    ":parameter/InnovationSandbox_",
                    {
                      "Ref": "Namespace",
                    },
                    "_AccountPool_Configuration",
                  ],
                ],
              },
            },
            {
              "Action": [
                "appconfig:StartConfigurationSession",
                "appconfig:GetLatestConfiguration",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":appconfig:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":application/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "configApplicationId",
                        ],
                      },
                      "/environment/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "configEnvironmentId",
                        ],
                      },
                      "/configuration/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "nukeConfigConfigurationProfileId",
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":appconfig:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":application/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "configApplicationId",
                        ],
                      },
                      "/environment/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "configEnvironmentId",
                        ],
                      },
                      "/configuration/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "globalConfigConfigurationProfileId",
                        ],
                      },
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/InnovationSandbox-",
                    {
                      "Ref": "Namespace",
                    },
                    "-IntermediateRole",
                  ],
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IntermediateRole6D2F2036",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AccountCleanerCodeBuildCleanupProjectRoleDefaultPolicy2BBB17A0",
        "Roles": [
          {
            "Ref": "AccountCleanerCodeBuildCleanupProjectRole3FF40319",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AccountCleanerInitializeCleanupLambdaFunctionB9CA7E1B": {
      "DependsOn": [
        "AccountCleanerInitializeCleanupLambdaFunctionRoleDefaultPolicy1C72A534",
        "AccountCleanerInitializeCleanupLambdaFunctionRole59E22179",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Environment": {
          "Variables": {
            "ACCOUNT_TABLE_NAME": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "accountTable",
              ],
            },
            "APP_CONFIG_APPLICATION_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configApplicationId",
              ],
            },
            "APP_CONFIG_ENVIRONMENT_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configEnvironmentId",
              ],
            },
            "APP_CONFIG_PROFILE_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "globalConfigConfigurationProfileId",
              ],
            },
            "AWS_APPCONFIG_EXTENSION_HTTP_PORT": "2772",
            "AWS_APPCONFIG_EXTENSION_POLL_INTERVAL_SECONDS": "10m",
            "AWS_APPCONFIG_EXTENSION_PREFETCH_LIST": {
              "Fn::Join": [
                "",
                [
                  "/applications/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configApplicationId",
                    ],
                  },
                  "/environments/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configEnvironmentId",
                    ],
                  },
                  "/configurations/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "globalConfigConfigurationProfileId",
                    ],
                  },
                ],
              ],
            },
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "HUB_ACCOUNT_ID": {
              "Ref": "AWS::AccountId",
            },
            "IDC_ACCOUNT_ID": {
              "Ref": "IdcAccountId",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "ORG_MGT_ACCOUNT_ID": {
              "Ref": "OrgMgtAccountId",
            },
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-InitializeCleanupLambda-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
          {
            "Fn::FindInMap": [
              "AppConfigExtensionArnMap",
              {
                "Ref": "AWS::Region",
              },
              "arn",
            ],
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupCleanup485A102F",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "AccountCleanerInitializeCleanupLambdaFunctionRole59E22179",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "AccountCleanerInitializeCleanupLambdaFunctionRole59E22179": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AccountCleanerInitializeCleanupLambdaFunctionRoleDefaultPolicy1C72A534": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupCleanup485A102F",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/InnovationSandbox-",
                    {
                      "Ref": "Namespace",
                    },
                    "-IntermediateRole",
                  ],
                ],
              },
            },
            {
              "Action": [
                "appconfig:StartConfigurationSession",
                "appconfig:GetLatestConfiguration",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":appconfig:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":application/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "configApplicationId",
                        ],
                      },
                      "/environment/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "configEnvironmentId",
                        ],
                      },
                      "/configuration/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "nukeConfigConfigurationProfileId",
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":appconfig:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":application/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "configApplicationId",
                        ],
                      },
                      "/environment/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "configEnvironmentId",
                        ],
                      },
                      "/configuration/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "globalConfigConfigurationProfileId",
                        ],
                      },
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AccountCleanerInitializeCleanupLambdaFunctionRoleDefaultPolicy1C72A534",
        "Roles": [
          {
            "Ref": "AccountCleanerInitializeCleanupLambdaFunctionRole59E22179",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AccountCleanerInitializeCleanupLambdaIsbDbTableReadWriteBBFE995D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "accountTable",
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "accountTable",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncrypt*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":key/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "tableKmsKeyId",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoDBReadWriteAccess",
        "Roles": [
          {
            "Ref": "AccountCleanerInitializeCleanupLambdaFunctionRole59E22179",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AccountCleanerPrivateEcrRepoPolicy110E5F6B": {
      "Condition": "AccountCleanerUsePrivateEcrRepo2A0E64EA",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/",
                    {
                      "Fn::FindInMap": [
                        "Mapping",
                        "context",
                        "privateEcrRepo",
                        {
                          "DefaultValue": "",
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AccountCleanerPrivateEcrRepoPolicy110E5F6B",
        "Roles": [
          {
            "Ref": "AccountCleanerCodeBuildCleanupProjectRole3FF40319",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AccountCleanerStepFunctionAccountCleanupRule6AE39631": {
      "Properties": {
        "Description": "EventBus rule that triggers the ISB account cleanup process",
        "EventBusName": {
          "Ref": "ISBEventBusD5514129",
        },
        "EventPattern": {
          "detail-type": [
            "CleanAccountRequest",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "AccountCleanerStepFunctionStateMachineF32685E8",
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "AccountCleanerStepFunctionStateMachineEventsRole4FDC6DA2",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AccountCleanerStepFunctionCodeBuildStepPolicy8B6B0607": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:StartBuild",
                "codebuild:StopBuild",
                "codebuild:BatchGetBuilds",
                "codebuild:BatchGetReports",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AccountCleanerCodeBuildCleanupProject76064B7F",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "events:PutTargets",
                "events:PutRule",
                "events:DescribeRule",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":events:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":rule/StepFunctionsGetEventForCodeBuildStartBuildRule",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AccountCleanerStepFunctionCodeBuildStepPolicy8B6B0607",
        "Roles": [
          {
            "Ref": "AccountCleanerStepFunctionStateMachineRole7CC1A37A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AccountCleanerStepFunctionDescribeStateMachineExecutionPolicy96041704": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:DescribeExecution",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":states:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":execution:",
                    {
                      "Fn::GetAtt": [
                        "AccountCleanerStepFunctionStateMachineF32685E8",
                        "Name",
                      ],
                    },
                    ":*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AccountCleanerStepFunctionDescribeStateMachineExecutionPolicy96041704",
        "Roles": [
          {
            "Ref": "AccountCleanerInitializeCleanupLambdaFunctionRole59E22179",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AccountCleanerStepFunctionStateMachineEventsRole4FDC6DA2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AccountCleanerStepFunctionStateMachineEventsRoleDefaultPolicy1C377DCB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "AccountCleanerStepFunctionStateMachineF32685E8",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AccountCleanerStepFunctionStateMachineEventsRoleDefaultPolicy1C377DCB",
        "Roles": [
          {
            "Ref": "AccountCleanerStepFunctionStateMachineEventsRole4FDC6DA2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AccountCleanerStepFunctionStateMachineF32685E8": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AccountCleanerStepFunctionStateMachineRoleDefaultPolicy21807A48",
        "AccountCleanerStepFunctionStateMachineRole7CC1A37A",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"AddCodeBuildExecutionResultsObjectPass","States":{"AddCodeBuildExecutionResultsObjectPass":{"Type":"Pass","Parameters":{"input.$":"$.detail","executionResults":{"succeeded":0,"failed":0}},"Next":"InitializeCleanupLambdaInvoke"},"InitializeCleanupLambdaInvoke":{"Next":"SkipIfCurrentlyInCleanupChoice","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.Error","Next":"SendFailureEvent"}],"Type":"Task","ResultPath":"$.initializeCleanup","ResultSelector":{"payload.$":"$.Payload","status.$":"$.StatusCode"},"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "AccountCleanerInitializeCleanupLambdaFunctionB9CA7E1B",
                  "Arn",
                ],
              },
              "","Payload":{"accountId.$":"$.input.accountId","cleanupExecutionContext":{"stateMachineExecutionArn.$":"$$.Execution.Id","stateMachineExecutionStartTime.$":"$$.Execution.StartTime"}}}},"SkipIfCurrentlyInCleanupChoice":{"Type":"Choice","Choices":[{"Variable":"$.initializeCleanup.payload.cleanupAlreadyInProgress","BooleanEquals":true,"Next":"AccountCleanupSuccess"}],"Default":"StartCodeBuildCall"},"StartCodeBuildCall":{"Next":"AddSuccessfulExecutionPass","Type":"Task","Resource":"arn:aws:states:::codebuild:startBuild.sync","Parameters":{"ProjectName":"",
              {
                "Ref": "AccountCleanerCodeBuildCleanupProject76064B7F",
              },
              "","EnvironmentVariablesOverride":[{"Name":"STATE_MACHINE_EXECUTION_ID","Value.$":"$$.Execution.Id","Type":"PLAINTEXT"},{"Name":"CLEANUP_ACCOUNT_ID","Value.$":"$.input.accountId","Type":"PLAINTEXT"},{"Name":"APPCONFIG_APPLICATION_ID","Value":"",
              {
                "Fn::GetAtt": [
                  "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                  "configApplicationId",
                ],
              },
              "","Type":"PLAINTEXT"},{"Name":"APPCONFIG_ENVIRONMENT_ID","Value":"",
              {
                "Fn::GetAtt": [
                  "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                  "configEnvironmentId",
                ],
              },
              "","Type":"PLAINTEXT"},{"Name":"APPCONFIG_NUKE_CONFIG_CONFIGURATION_PROFILE_ID","Value":"",
              {
                "Fn::GetAtt": [
                  "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                  "nukeConfigConfigurationProfileId",
                ],
              },
              "","Type":"PLAINTEXT"}],"LogsConfigOverride":{"CloudWatchLogs":{"Status":"ENABLED","GroupName":"",
              {
                "Ref": "ISBLogGroupCleanup485A102F",
              },
              "","StreamName.$":"States.ArrayGetItem(States.StringSplit($$.Execution.Id, ':'), 7)"}}},"ResultSelector":{"status.$":"$.Build.BuildStatus"},"ResultPath":"$.codeBuild","Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.Error","Next":"AddFailedExecutionPass"}]},"FailureRerunWait":{"Type":"Wait","SecondsPath":"$.initializeCleanup.payload.globalConfig.cleanup.waitBeforeRetryFailedAttemptSeconds","Next":"StartCodeBuildCall"},"EnoughFailedExecutionsChoice":{"Type":"Choice","Choices":[{"Variable":"$.executionResults.failed","NumericLessThanPath":"$.initializeCleanup.payload.globalConfig.cleanup.numberOfFailedAttemptsToCancelCleanup","Next":"FailureRerunWait"}],"Default":"SendFailureEvent"},"AddFailedExecutionPass":{"Type":"Pass","Parameters":{"input.$":"$.input","initializeCleanup.$":"$.initializeCleanup","executionResults":{"succeeded":0,"failed.$":"States.MathAdd($.executionResults.failed, 1)"}},"Next":"EnoughFailedExecutionsChoice"},"SendFailureEvent":{"Next":"AccountCleanupFailed","Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::events:putEvents","Parameters":{"Entries":[{"Detail":{"accountId.$":"$.input.accountId","cleanupExecutionContext":{"stateMachineExecutionArn.$":"$$.Execution.Id","stateMachineExecutionStartTime.$":"$$.Execution.StartTime"}},"DetailType":"AccountCleanupFailed","EventBusName":"",
              {
                "Fn::GetAtt": [
                  "ISBEventBusD5514129",
                  "Arn",
                ],
              },
              "","Source":"account-cleaner"}]}},"AccountCleanupFailed":{"Type":"Fail"},"SuccessRerunWait":{"Type":"Wait","SecondsPath":"$.initializeCleanup.payload.globalConfig.cleanup.waitBeforeRerunSuccessfulAttemptSeconds","Next":"StartCodeBuildCall"},"AddSuccessfulExecutionPass":{"Type":"Pass","Parameters":{"input.$":"$.input","initializeCleanup.$":"$.initializeCleanup","executionResults":{"succeeded.$":"States.MathAdd($.executionResults.succeeded, 1)","failed.$":"$.executionResults.failed"}},"Next":"EnoughSuccessfulExecutionsChoice"},"EnoughSuccessfulExecutionsChoice":{"Type":"Choice","Choices":[{"Variable":"$.executionResults.succeeded","NumericGreaterThanEqualsPath":"$.initializeCleanup.payload.globalConfig.cleanup.numberOfSuccessfulAttemptsToFinishCleanup","Next":"SendSuccessEvent"}],"Default":"SuccessRerunWait"},"SendSuccessEvent":{"Next":"AccountCleanupSuccess","Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::events:putEvents","Parameters":{"Entries":[{"Detail":{"accountId.$":"$.input.accountId","cleanupExecutionContext":{"stateMachineExecutionArn.$":"$$.Execution.Id","stateMachineExecutionStartTime.$":"$$.Execution.StartTime"}},"DetailType":"AccountCleanupSucceeded","EventBusName":"",
              {
                "Fn::GetAtt": [
                  "ISBEventBusD5514129",
                  "Arn",
                ],
              },
              "","Source":"account-cleaner"}]}},"AccountCleanupSuccess":{"Type":"Succeed"}},"TimeoutSeconds":43200}",
            ],
          ],
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "ISBLogGroupE607F9A7",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ALL",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "AccountCleanerStepFunctionStateMachineRole7CC1A37A",
            "Arn",
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "AccountCleanerStepFunctionStateMachineRole7CC1A37A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AccountCleanerStepFunctionStateMachineRoleDefaultPolicy21807A48": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AccountCleanerInitializeCleanupLambdaFunctionB9CA7E1B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AccountCleanerInitializeCleanupLambdaFunctionB9CA7E1B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBEventBusD5514129",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AccountCleanerStepFunctionStateMachineRoleDefaultPolicy21807A48",
        "Roles": [
          {
            "Ref": "AccountCleanerStepFunctionStateMachineRole7CC1A37A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AccountDriftMonitoringFunction9E5A5246": {
      "DependsOn": [
        "AccountDriftMonitoringFunctionRoleDefaultPolicyC79E7191",
        "AccountDriftMonitoringFunctionRoleEEB1FC86",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "Scans the sandbox ous and accounts and checks if there is any drift with what is in the database",
        "Environment": {
          "Variables": {
            "ACCOUNT_TABLE_NAME": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "accountTable",
              ],
            },
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "INTERMEDIATE_ROLE_ARN": {
              "Fn::GetAtt": [
                "IntermediateRole6D2F2036",
                "Arn",
              ],
            },
            "ISB_EVENT_BUS": {
              "Ref": "ISBEventBusD5514129",
            },
            "ISB_NAMESPACE": {
              "Ref": "Namespace",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "ORG_MGT_ROLE_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "OrgMgtAccountId",
                  },
                  ":role/InnovationSandbox-",
                  {
                    "Ref": "Namespace",
                  },
                  "-OrgMgtRole",
                ],
              ],
            },
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "SANDBOX_OU_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "sandboxOuId",
              ],
            },
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-AccountDriftMonitoring-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupE607F9A7",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "ReservedConcurrentExecutions": 1,
        "Role": {
          "Fn::GetAtt": [
            "AccountDriftMonitoringFunctionRoleEEB1FC86",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "AccountDriftMonitoringFunctionRoleDefaultPolicyC79E7191": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupE607F9A7",
                  "Arn",
                ],
              },
            },
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBEventBusD5514129",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IntermediateRole6D2F2036",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AccountDriftMonitoringFunctionRoleDefaultPolicyC79E7191",
        "Roles": [
          {
            "Ref": "AccountDriftMonitoringFunctionRoleEEB1FC86",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AccountDriftMonitoringFunctionRoleEEB1FC86": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AccountDriftMonitoringIsbDbTableReadWrite266A9DFD": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "accountTable",
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "accountTable",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncrypt*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":key/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "tableKmsKeyId",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoDBReadWriteAccess",
        "Roles": [
          {
            "Ref": "AccountDriftMonitoringFunctionRoleEEB1FC86",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AccountDriftMonitoringLambdaInvokeRoleB92EB6A7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "scheduler.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "allows EventBridgeScheduler to invoke Innovation Sandbox's AccountDriftMonitoring lambda",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AccountDriftMonitoringLambdaInvokeRoleDefaultPolicy3A3B0917": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AccountDriftMonitoringFunction9E5A5246",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AccountDriftMonitoringFunction9E5A5246",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AccountDriftMonitoringLambdaInvokeRoleDefaultPolicy3A3B0917",
        "Roles": [
          {
            "Ref": "AccountDriftMonitoringLambdaInvokeRoleB92EB6A7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AccountDriftMonitoringScheduledEvent": {
      "Properties": {
        "Description": "triggers Drift Monitoring every 6 hours",
        "FlexibleTimeWindow": {
          "MaximumWindowInMinutes": 30,
          "Mode": "FLEXIBLE",
        },
        "ScheduleExpression": "rate(6 hour)",
        "Target": {
          "Arn": {
            "Fn::GetAtt": [
              "AccountDriftMonitoringFunction9E5A5246",
              "Arn",
            ],
          },
          "RetryPolicy": {
            "MaximumRetryAttempts": 10,
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "AccountDriftMonitoringLambdaInvokeRoleB92EB6A7",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Scheduler::Schedule",
    },
    "AccountLifeCycleEventsToSqsToLambdaAccountLifeCycleEventsDLQC8AC58DA": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ContentBasedDeduplication": true,
        "FifoQueue": true,
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbComputeStack45953B87",
            "Arn",
          ],
        },
        "QueueName": {
          "Fn::Join": [
            "",
            [
              "Isb-",
              {
                "Ref": "Namespace",
              },
              "-AccountLifeCycleEventsDLQ.fifo",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "AccountLifeCycleEventsToSqsToLambdaAccountLifeCycleEventsQueue2EC48316": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ContentBasedDeduplication": true,
        "FifoQueue": true,
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbComputeStack45953B87",
            "Arn",
          ],
        },
        "MessageRetentionPeriod": 14400,
        "QueueName": {
          "Fn::Join": [
            "",
            [
              "Isb-",
              {
                "Ref": "Namespace",
              },
              "-AccountLifeCycleEventsQueue.fifo",
            ],
          ],
        },
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "AccountLifeCycleEventsToSqsToLambdaAccountLifeCycleEventsDLQC8AC58DA",
              "Arn",
            ],
          },
          "maxReceiveCount": 3,
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "VisibilityTimeout": 120,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "AccountLifeCycleEventsToSqsToLambdaAccountLifeCycleEventsQueuePolicy7E294DCC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "AccountLifeCycleEventsToSqsToLambdaAccountLifeCycleEventsQueue2EC48316",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "AccountLifeCycleEventsToSqsToLambdaAccountLifeCycleEventsQueue2EC48316",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "AccountLifeCycleEventsToSqsToLambdaAccountLifeCycleEventsRule94BBF383": {
      "Properties": {
        "Description": "Triggers account life cycle manager lambda via SQS",
        "EventBusName": {
          "Ref": "ISBEventBusD5514129",
        },
        "EventPattern": {
          "detail-type": [
            "LeaseBudgetExceeded",
            "LeaseExpired",
            "AccountCleanupSucceeded",
            "AccountCleanupFailed",
            "AccountDriftDetected",
            "LeaseFreezingThresholdAlert",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AccountLifeCycleEventsToSqsToLambdaAccountLifeCycleEventsQueue2EC48316",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RetryPolicy": {
              "MaximumEventAgeInSeconds": 14400,
              "MaximumRetryAttempts": 3,
            },
            "SqsParameters": {
              "MessageGroupId": "AccountLifeCycleEvents",
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AccountsLambdaFunction47AFACD2": {
      "DependsOn": [
        "AccountsLambdaFunctionFunctionRoleDefaultPolicy067BE69C",
        "AccountsLambdaFunctionFunctionRole3A22EFEC",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "Lambda used as API GW method integration for account resources",
        "Environment": {
          "Variables": {
            "ACCOUNT_TABLE_NAME": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "accountTable",
              ],
            },
            "APP_CONFIG_APPLICATION_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configApplicationId",
              ],
            },
            "APP_CONFIG_ENVIRONMENT_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configEnvironmentId",
              ],
            },
            "APP_CONFIG_PROFILE_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "globalConfigConfigurationProfileId",
              ],
            },
            "AWS_APPCONFIG_EXTENSION_HTTP_PORT": "2772",
            "AWS_APPCONFIG_EXTENSION_POLL_INTERVAL_SECONDS": "10m",
            "AWS_APPCONFIG_EXTENSION_PREFETCH_LIST": {
              "Fn::Join": [
                "",
                [
                  "/applications/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configApplicationId",
                    ],
                  },
                  "/environments/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configEnvironmentId",
                    ],
                  },
                  "/configurations/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "globalConfigConfigurationProfileId",
                    ],
                  },
                ],
              ],
            },
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "HUB_ACCOUNT_ID": {
              "Ref": "AWS::AccountId",
            },
            "IDC_ACCOUNT_ID": {
              "Ref": "IdcAccountId",
            },
            "IDC_ROLE_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "IdcAccountId",
                  },
                  ":role/InnovationSandbox-",
                  {
                    "Ref": "Namespace",
                  },
                  "-IdcRole",
                ],
              ],
            },
            "IDENTITY_STORE_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "identityStoreId",
              ],
            },
            "INTERMEDIATE_ROLE_ARN": {
              "Fn::GetAtt": [
                "IntermediateRole6D2F2036",
                "Arn",
              ],
            },
            "ISB_EVENT_BUS": {
              "Ref": "ISBEventBusD5514129",
            },
            "ISB_NAMESPACE": {
              "Ref": "Namespace",
            },
            "LEASE_TABLE_NAME": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "leaseTable",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "ORG_MGT_ACCOUNT_ID": {
              "Ref": "OrgMgtAccountId",
            },
            "ORG_MGT_ROLE_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "OrgMgtAccountId",
                  },
                  ":role/InnovationSandbox-",
                  {
                    "Ref": "Namespace",
                  },
                  "-OrgMgtRole",
                ],
              ],
            },
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "SANDBOX_OU_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "sandboxOuId",
              ],
            },
            "SSO_INSTANCE_ARN": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "ssoInstanceArn",
              ],
            },
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-AccountsLambdaFunction-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
          {
            "Fn::FindInMap": [
              "AppConfigExtensionArnMap",
              {
                "Ref": "AWS::Region",
              },
              "arn",
            ],
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupE607F9A7",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "AccountsLambdaFunctionFunctionRole3A22EFEC",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "AccountsLambdaFunctionFunctionRole3A22EFEC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AccountsLambdaFunctionFunctionRoleDefaultPolicy067BE69C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupE607F9A7",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "appconfig:StartConfigurationSession",
                "appconfig:GetLatestConfiguration",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":appconfig:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":application/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "configApplicationId",
                      ],
                    },
                    "/environment/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "configEnvironmentId",
                      ],
                    },
                    "/configuration/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "globalConfigConfigurationProfileId",
                      ],
                    },
                  ],
                ],
              },
            },
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBEventBusD5514129",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IntermediateRole6D2F2036",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AccountsLambdaFunctionFunctionRoleDefaultPolicy067BE69C",
        "Roles": [
          {
            "Ref": "AccountsLambdaFunctionFunctionRole3A22EFEC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AccountsLambdaFunctionIsbDbTableReadWrite5A96FF7F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "accountTable",
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "accountTable",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "leaseTable",
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "leaseTable",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncrypt*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":key/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "tableKmsKeyId",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoDBReadWriteAccess",
        "Roles": [
          {
            "Ref": "AccountsLambdaFunctionFunctionRole3A22EFEC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AnonymizedMetricsLambdaInvokeRoleDefaultPolicyC9FABACF": {
      "Condition": "SendAnonymizedMetricsCondition",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AnonymizedMetricsReportingFunctionB13E720A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AnonymizedMetricsReportingFunctionB13E720A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AnonymizedMetricsLambdaInvokeRoleDefaultPolicyC9FABACF",
        "Roles": [
          {
            "Ref": "AnonymizedMetricsLambdaInvokeRoleF931E38F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AnonymizedMetricsLambdaInvokeRoleF931E38F": {
      "Condition": "SendAnonymizedMetricsCondition",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "scheduler.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "allows EventBridgeScheduler to invoke Innovation Sandbox's heartbeat metrics lamdba",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AnonymizedMetricsLogMetricsLogProcessorFunctionCC7E9605": {
      "Condition": "SendAnonymizedMetricsCondition",
      "DependsOn": [
        "AnonymizedMetricsLogMetricsLogProcessorFunctionRoleDefaultPolicy51A815C2",
        "AnonymizedMetricsLogMetricsLogProcessorFunctionRole755579AC",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Environment": {
          "Variables": {
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "METRICS_URL": "https://metrics.awssolutionsbuilder.com/generic",
            "METRICS_UUID": {
              "Fn::GetAtt": [
                "DeploymentUUIDLambdaFunctionIsbCustomResourceE707861E",
                "DeploymentUUID",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "SOLUTION_ID": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "solutionId",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "SOLUTION_VERSION": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "version",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-LogProcessor-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupE607F9A7",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "AnonymizedMetricsLogMetricsLogProcessorFunctionRole755579AC",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 300,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "AnonymizedMetricsLogMetricsLogProcessorFunctionRole755579AC": {
      "Condition": "SendAnonymizedMetricsCondition",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AnonymizedMetricsLogMetricsLogProcessorFunctionRoleDefaultPolicy51A815C2": {
      "Condition": "SendAnonymizedMetricsCondition",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupE607F9A7",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AnonymizedMetricsLogMetricsLogProcessorFunctionRoleDefaultPolicy51A815C2",
        "Roles": [
          {
            "Ref": "AnonymizedMetricsLogMetricsLogProcessorFunctionRole755579AC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AnonymizedMetricsLogMetricsLogSubscription74C86A18": {
      "Condition": "SendAnonymizedMetricsCondition",
      "DependsOn": [
        "AnonymizedMetricsLogMetricsLogSubscriptionCanInvokeLambda4E714CE8",
      ],
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "AnonymizedMetricsLogMetricsLogProcessorFunctionCC7E9605",
            "Arn",
          ],
        },
        "FilterPattern": "{ $.logDetailType = "*" }",
        "LogGroupName": {
          "Ref": "ISBLogGroupE607F9A7",
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "AnonymizedMetricsLogMetricsLogSubscriptionCanInvokeLambda4E714CE8": {
      "Condition": "SendAnonymizedMetricsCondition",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AnonymizedMetricsLogMetricsLogProcessorFunctionCC7E9605",
            "Arn",
          ],
        },
        "Principal": "logs.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ISBLogGroupE607F9A7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AnonymizedMetricsReportingFunctionB13E720A": {
      "Condition": "SendAnonymizedMetricsCondition",
      "DependsOn": [
        "AnonymizedMetricsReportingFunctionFunctionRoleDefaultPolicy1B30EFB0",
        "AnonymizedMetricsReportingFunctionFunctionRole3FADEEB2",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "Periodic heartbeat lambda for summarizing the solution deployment",
        "Environment": {
          "Variables": {
            "ACCOUNT_TABLE_NAME": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "accountTable",
              ],
            },
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "INTERMEDIATE_ROLE_ARN": {
              "Fn::GetAtt": [
                "IntermediateRole6D2F2036",
                "Arn",
              ],
            },
            "ISB_NAMESPACE": {
              "Ref": "Namespace",
            },
            "LEASE_TEMPLATE_TABLE_NAME": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "leaseTemplateTable",
              ],
            },
            "METRICS_URL": "https://metrics.awssolutionsbuilder.com/generic",
            "METRICS_UUID": {
              "Fn::GetAtt": [
                "DeploymentUUIDLambdaFunctionIsbCustomResourceE707861E",
                "DeploymentUUID",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "ORG_MGT_ROLE_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "OrgMgtAccountId",
                  },
                  ":role/InnovationSandbox-",
                  {
                    "Ref": "Namespace",
                  },
                  "-OrgMgtRole",
                ],
              ],
            },
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "SANDBOX_OU_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "sandboxOuId",
              ],
            },
            "SOLUTION_ID": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "solutionId",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "SOLUTION_VERSION": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "version",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-ReportingFunction-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupE607F9A7",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "ReservedConcurrentExecutions": 1,
        "Role": {
          "Fn::GetAtt": [
            "AnonymizedMetricsReportingFunctionFunctionRole3FADEEB2",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "AnonymizedMetricsReportingFunctionFunctionRole3FADEEB2": {
      "Condition": "SendAnonymizedMetricsCondition",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AnonymizedMetricsReportingFunctionFunctionRoleDefaultPolicy1B30EFB0": {
      "Condition": "SendAnonymizedMetricsCondition",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupE607F9A7",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IntermediateRole6D2F2036",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AnonymizedMetricsReportingFunctionFunctionRoleDefaultPolicy1B30EFB0",
        "Roles": [
          {
            "Ref": "AnonymizedMetricsReportingFunctionFunctionRole3FADEEB2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AnonymizedMetricsReportingFunctionIsbDbTableReadOnly5A24E3F5": {
      "Condition": "SendAnonymizedMetricsCondition",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchGetItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "leaseTemplateTable",
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "leaseTemplateTable",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchGetItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "accountTable",
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "accountTable",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncrypt*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":key/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "tableKmsKeyId",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoDBReadOnlyAccess",
        "Roles": [
          {
            "Ref": "AnonymizedMetricsReportingFunctionFunctionRole3FADEEB2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AnonymizedMetricsScheduledEventA5C9F868": {
      "Condition": "SendAnonymizedMetricsCondition",
      "Properties": {
        "Description": "triggers heartbeat metrics lambda to execute once per day",
        "FlexibleTimeWindow": {
          "MaximumWindowInMinutes": 60,
          "Mode": "FLEXIBLE",
        },
        "ScheduleExpression": "rate(1 day)",
        "Target": {
          "Arn": {
            "Fn::GetAtt": [
              "AnonymizedMetricsReportingFunctionB13E720A",
              "Arn",
            ],
          },
          "Input": "{"action":"gather-metrics"}",
          "RetryPolicy": {
            "MaximumRetryAttempts": 2,
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "AnonymizedMetricsLambdaInvokeRoleF931E38F",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Scheduler::Schedule",
    },
    "AuthorizerBD825682": {
      "Properties": {
        "AuthorizerResultTtlInSeconds": 300,
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "AuthorizerLambdaFunction01123EED",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":apigateway:",
              {
                "Fn::Select": [
                  3,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "AuthorizerLambdaFunction01123EED",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "AuthorizerLambdaFunction01123EED",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
        "IdentitySource": "method.request.header.Authorization,context.path,context.httpMethod",
        "Name": "IsbComputeStackAuthorizer8BD1F641",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
        "Type": "REQUEST",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "AuthorizerLambdaFunction01123EED": {
      "DependsOn": [
        "AuthorizerLambdaFunctionFunctionRoleDefaultPolicy7D84D874",
        "AuthorizerLambdaFunctionFunctionRole354E8B0D",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "Lambda function used for Innovation Sandbox on AWS API Authorization",
        "Environment": {
          "Variables": {
            "APP_CONFIG_APPLICATION_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configApplicationId",
              ],
            },
            "APP_CONFIG_ENVIRONMENT_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configEnvironmentId",
              ],
            },
            "APP_CONFIG_PROFILE_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "globalConfigConfigurationProfileId",
              ],
            },
            "AWS_APPCONFIG_EXTENSION_HTTP_PORT": "2772",
            "AWS_APPCONFIG_EXTENSION_POLL_INTERVAL_SECONDS": "10m",
            "AWS_APPCONFIG_EXTENSION_PREFETCH_LIST": {
              "Fn::Join": [
                "",
                [
                  "/applications/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configApplicationId",
                    ],
                  },
                  "/environments/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configEnvironmentId",
                    ],
                  },
                  "/configurations/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "globalConfigConfigurationProfileId",
                    ],
                  },
                ],
              ],
            },
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "JWT_SECRET_NAME": {
              "Fn::Join": [
                "",
                [
                  "/InnovationSandbox/",
                  {
                    "Ref": "Namespace",
                  },
                  "/Auth/JwtSecret",
                ],
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-AuthorizerLambdaFunction-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
          {
            "Fn::FindInMap": [
              "AppConfigExtensionArnMap",
              {
                "Ref": "AWS::Region",
              },
              "arn",
            ],
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupE607F9A7",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "AuthorizerLambdaFunctionFunctionRole354E8B0D",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuthorizerLambdaFunctionFunctionRole354E8B0D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuthorizerLambdaFunctionFunctionRoleDefaultPolicy7D84D874": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupE607F9A7",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "appconfig:StartConfigurationSession",
                "appconfig:GetLatestConfiguration",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":appconfig:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":application/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "configApplicationId",
                      ],
                    },
                    "/environment/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "configEnvironmentId",
                      ],
                    },
                    "/configuration/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "globalConfigConfigurationProfileId",
                      ],
                    },
                  ],
                ],
              },
            },
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": {
                "Ref": "JwtSecretB8834B39",
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IsbKmsKeyIsbComputeStack45953B87",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuthorizerLambdaFunctionFunctionRoleDefaultPolicy7D84D874",
        "Roles": [
          {
            "Ref": "AuthorizerLambdaFunctionFunctionRole354E8B0D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuthorizerLambdaFunctionIsbComputeStackAuthorizer8BD1F641PermissionsF0CE10A2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AuthorizerLambdaFunction01123EED",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/authorizers/",
              {
                "Ref": "AuthorizerBD825682",
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CloudFrontUiApiDeployIsbFrontEndAwsCliLayerA79739D4": {
      "Properties": {
        "Content": "Omitted to remove snapshot dependency on hash",
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "CloudFrontUiApiDeployIsbFrontEndCustomResource6D2B744F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DestinationBucketName": {
          "Ref": "CloudFrontUiApiIsbFrontEndBucket1A358E74",
        },
        "DistributionId": {
          "Ref": "CloudFrontUiApiIsbCloudFrontDistributionA7327667",
        },
        "DistributionPaths": [
          "/*",
        ],
        "OutputObjectKeys": true,
        "Prune": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          "mock-source-bucket",
        ],
        "SourceObjectKeys": "Omitted to remove snapshot dependency on hash",
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudFrontUiApiIsbApiCloudFrontResponseHeadersPolicy0C690633": {
      "Properties": {
        "ResponseHeadersPolicyConfig": {
          "CustomHeadersConfig": {
            "Items": [
              {
                "Header": "Cache-Control",
                "Override": true,
                "Value": "no-store, no-cache",
              },
            ],
          },
          "Name": "IsbComputeStackCloudFrontUiApiIsbApiCloudFrontResponseHeadersPolicy2A5EA897",
          "SecurityHeadersConfig": {
            "ContentTypeOptions": {
              "Override": true,
            },
          },
        },
      },
      "Type": "AWS::CloudFront::ResponseHeadersPolicy",
    },
    "CloudFrontUiApiIsbCloudFrontDistributionA7327667": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CLOUDFRONT_MINIMUM_PROTOCOL_VERSION_RULE",
          ],
        },
      },
      "Properties": {
        "DistributionConfig": {
          "CacheBehaviors": [
            {
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
              "Compress": true,
              "FunctionAssociations": [
                {
                  "EventType": "viewer-request",
                  "FunctionARN": {
                    "Fn::GetAtt": [
                      "CloudFrontUiApiIsbPathRewriteCloudFrontFunction646416CD",
                      "FunctionARN",
                    ],
                  },
                },
              ],
              "OriginRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
              "PathPattern": "/api/*",
              "ResponseHeadersPolicyId": {
                "Ref": "CloudFrontUiApiIsbApiCloudFrontResponseHeadersPolicy0C690633",
              },
              "TargetOriginId": "IsbComputeStackCloudFrontUiApiIsbCloudFrontDistributionOrigin26AD5EECD",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "Comment": "ISB CloudFront Distribution",
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE",
            ],
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "FunctionAssociations": [
              {
                "EventType": "viewer-request",
                "FunctionARN": {
                  "Fn::GetAtt": [
                    "CloudFrontUiApiIsbS3OriginPathRedirectCloudFrontFunctionDB601A75",
                    "FunctionARN",
                  ],
                },
              },
            ],
            "ResponseHeadersPolicyId": {
              "Ref": "CloudFrontUiApiIsbCloudFrontResponseHeadersPolicy524822A1",
            },
            "TargetOriginId": "S3Origin",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": {
            "Bucket": {
              "Fn::GetAtt": [
                "CloudFrontUiApiIsbFrontEndAccessLogsBucketB8ACDB31",
                "RegionalDomainName",
              ],
            },
            "IncludeCookies": true,
            "Prefix": "isb-fe-logs/",
          },
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "CloudFrontUiApiIsbFrontEndBucket1A358E74",
                  "RegionalDomainName",
                ],
              },
              "Id": "S3Origin",
              "OriginAccessControlId": {
                "Fn::GetAtt": [
                  "CloudFrontUiApiIsbCloudFrontDistributionOac0A271AA8",
                  "Id",
                ],
              },
              "S3OriginConfig": {
                "OriginAccessIdentity": "",
              },
            },
            {
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": [
                  "TLSv1.2",
                ],
              },
              "DomainName": {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "https://",
                            {
                              "Ref": "IsbRestApi377E2CC6",
                            },
                            ".execute-api.",
                            {
                              "Ref": "AWS::Region",
                            },
                            ".",
                            {
                              "Ref": "AWS::URLSuffix",
                            },
                            "/",
                            {
                              "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
                            },
                            "/",
                          ],
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "IsbComputeStackCloudFrontUiApiIsbCloudFrontDistributionOrigin26AD5EECD",
              "OriginPath": {
                "Fn::Join": [
                  "",
                  [
                    "/",
                    {
                      "Fn::Select": [
                        3,
                        {
                          "Fn::Split": [
                            "/",
                            {
                              "Fn::Join": [
                                "",
                                [
                                  "https://",
                                  {
                                    "Ref": "IsbRestApi377E2CC6",
                                  },
                                  ".execute-api.",
                                  {
                                    "Ref": "AWS::Region",
                                  },
                                  ".",
                                  {
                                    "Ref": "AWS::URLSuffix",
                                  },
                                  "/",
                                  {
                                    "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
                                  },
                                  "/",
                                ],
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "PriceClass": "PriceClass_All",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "CloudFrontUiApiIsbCloudFrontDistributionOac0A271AA8": {
      "Properties": {
        "OriginAccessControlConfig": {
          "Name": "IsbCloudFrontDistributionOac",
          "OriginAccessControlOriginType": "s3",
          "SigningBehavior": "always",
          "SigningProtocol": "sigv4",
        },
      },
      "Type": "AWS::CloudFront::OriginAccessControl",
    },
    "CloudFrontUiApiIsbCloudFrontResponseHeadersPolicy524822A1": {
      "Properties": {
        "ResponseHeadersPolicyConfig": {
          "CustomHeadersConfig": {
            "Items": [
              {
                "Header": "Cache-Control",
                "Override": true,
                "Value": "no-store, no-cache",
              },
            ],
          },
          "Name": "IsbComputeStackCloudFrontUiApiIsbCloudFrontResponseHeadersPolicy91EFE132",
          "SecurityHeadersConfig": {
            "ContentSecurityPolicy": {
              "ContentSecurityPolicy": "upgrade-insecure-requests; default-src 'none'; object-src 'none'; script-src 'self'; style-src 'self'; img-src 'self' data:; font-src 'self' data:; connect-src 'self'; manifest-src 'self'; frame-ancestors 'none'; base-uri 'none';",
              "Override": true,
            },
            "ContentTypeOptions": {
              "Override": true,
            },
            "FrameOptions": {
              "FrameOption": "DENY",
              "Override": true,
            },
            "ReferrerPolicy": {
              "Override": true,
              "ReferrerPolicy": "no-referrer",
            },
            "StrictTransportSecurity": {
              "AccessControlMaxAgeSec": 46656000,
              "IncludeSubdomains": true,
              "Override": true,
            },
            "XSSProtection": {
              "ModeBlock": true,
              "Override": true,
              "Protection": true,
            },
          },
        },
      },
      "Type": "AWS::CloudFront::ResponseHeadersPolicy",
    },
    "CloudFrontUiApiIsbFrontEndAccessLogsBucketB8ACDB31": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "S3_BUCKET_LOGGING_ENABLED",
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "IsbKmsKeyIsbComputeStack45953B87",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "ExpirationInDays": {
                "Fn::FindInMap": [
                  "Mapping",
                  "context",
                  "s3LogsGlacierRetentionInDays",
                  {
                    "DefaultValue": "",
                  },
                ],
              },
              "Status": "Enabled",
              "Transitions": [
                {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": {
                    "Fn::FindInMap": [
                      "Mapping",
                      "context",
                      "s3LogsArchiveRetentionInDays",
                      {
                        "DefaultValue": "",
                      },
                    ],
                  },
                },
              ],
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudFrontUiApiIsbFrontEndAccessLogsBucketPolicyC5EC85B6": {
      "Properties": {
        "Bucket": {
          "Ref": "CloudFrontUiApiIsbFrontEndAccessLogsBucketB8ACDB31",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CloudFrontUiApiIsbFrontEndAccessLogsBucketB8ACDB31",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CloudFrontUiApiIsbFrontEndAccessLogsBucketB8ACDB31",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CloudFrontUiApiIsbFrontEndBucket1A358E74": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "S3_BUCKET_LOGGING_ENABLED",
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "IsbKmsKeyIsbComputeStack45953B87",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:cr-owned:cb2488a3",
            "Value": "true",
          },
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudFrontUiApiIsbFrontEndBucketPolicyC6425170": {
      "Properties": {
        "Bucket": {
          "Ref": "CloudFrontUiApiIsbFrontEndBucket1A358E74",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CloudFrontUiApiIsbFrontEndBucket1A358E74",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CloudFrontUiApiIsbFrontEndBucket1A358E74",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:GetObject",
              "Condition": {
                "StringEquals": {
                  "AWS:SourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":cloudfront::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":distribution/",
                        {
                          "Ref": "CloudFrontUiApiIsbCloudFrontDistributionA7327667",
                        },
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudfront.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "CloudFrontUiApiIsbFrontEndBucket1A358E74",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:GetObject",
              "Condition": {
                "StringEquals": {
                  "AWS:SourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:cloudfront::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":distribution/",
                        {
                          "Ref": "CloudFrontUiApiIsbCloudFrontDistributionA7327667",
                        },
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudfront.amazonaws.com",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "CloudFrontUiApiIsbFrontEndBucket1A358E74",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CloudFrontUiApiIsbPathRewriteCloudFrontFunction646416CD": {
      "Properties": {
        "AutoPublish": true,
        "FunctionCode": "
          function handler (event) {
            const request = event.request;
            const uri = request.uri;
            const cfPrefix = "/api"
            if (uri.startsWith(cfPrefix)) {
              request.uri = uri.replace(cfPrefix, "");
            }
            return request;
          }
      ",
        "FunctionConfig": {
          "Comment": "IsbPathRewriteCloudFrontFunction",
          "Runtime": "cloudfront-js-2.0",
        },
        "Name": "IsbPathRewriteCloudFrontFunction",
      },
      "Type": "AWS::CloudFront::Function",
    },
    "CloudFrontUiApiIsbS3OriginPathRedirectCloudFrontFunctionDB601A75": {
      "Properties": {
        "AutoPublish": true,
        "FunctionCode": "
          function handler(event) {
            const request = event.request;
            const hasType = request.uri.split(/\\#|\\?/)[0].split(".").length >= 2;
            if (hasType) return request;
            request.uri = "/index.html";
            return request;
          }
      ",
        "FunctionConfig": {
          "Comment": "IsbS3OriginPathRedirectCloudFrontFunction",
          "Runtime": "cloudfront-js-2.0",
        },
        "Name": "IsbS3OriginPathRedirectCloudFrontFunction",
      },
      "Type": "AWS::CloudFront::Function",
    },
    "ConfigurationsLambdaFunctionBD1B5393": {
      "DependsOn": [
        "ConfigurationsLambdaFunctionFunctionRoleDefaultPolicy2216B975",
        "ConfigurationsLambdaFunctionFunctionRole3EA8ADFC",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "Lambda used as API GW method integration for configurations resources",
        "Environment": {
          "Variables": {
            "APP_CONFIG_APPLICATION_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configApplicationId",
              ],
            },
            "APP_CONFIG_ENVIRONMENT_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configEnvironmentId",
              ],
            },
            "APP_CONFIG_PROFILE_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "globalConfigConfigurationProfileId",
              ],
            },
            "AWS_APPCONFIG_EXTENSION_HTTP_PORT": "2772",
            "AWS_APPCONFIG_EXTENSION_POLL_INTERVAL_SECONDS": "10m",
            "AWS_APPCONFIG_EXTENSION_PREFETCH_LIST": {
              "Fn::Join": [
                "",
                [
                  "/applications/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configApplicationId",
                    ],
                  },
                  "/environments/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configEnvironmentId",
                    ],
                  },
                  "/configurations/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "globalConfigConfigurationProfileId",
                    ],
                  },
                ],
              ],
            },
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "ISB_MANAGED_REGIONS": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "isbManagedRegions",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-ConfigurationsLambdaFunction-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
          {
            "Fn::FindInMap": [
              "AppConfigExtensionArnMap",
              {
                "Ref": "AWS::Region",
              },
              "arn",
            ],
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupE607F9A7",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "ConfigurationsLambdaFunctionFunctionRole3EA8ADFC",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ConfigurationsLambdaFunctionFunctionRole3EA8ADFC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ConfigurationsLambdaFunctionFunctionRoleDefaultPolicy2216B975": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupE607F9A7",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "appconfig:StartConfigurationSession",
                "appconfig:GetLatestConfiguration",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":appconfig:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":application/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "configApplicationId",
                      ],
                    },
                    "/environment/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "configEnvironmentId",
                      ],
                    },
                    "/configuration/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "globalConfigConfigurationProfileId",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ConfigurationsLambdaFunctionFunctionRoleDefaultPolicy2216B975",
        "Roles": [
          {
            "Ref": "ConfigurationsLambdaFunctionFunctionRole3EA8ADFC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CostReportingLambdaFunction2AD931B1": {
      "DependsOn": [
        "CostReportingLambdaFunctionRoleDefaultPolicy62FE1881",
        "CostReportingLambdaFunctionRole7410FFF1",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "Scans the accounts and reports / logs aggregated monthly cost",
        "Environment": {
          "Variables": {
            "ACCOUNT_TABLE_NAME": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "accountTable",
              ],
            },
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "HUB_ACCOUNT_ID": {
              "Ref": "AWS::AccountId",
            },
            "IDC_ACCOUNT_ID": {
              "Ref": "IdcAccountId",
            },
            "INTERMEDIATE_ROLE_ARN": {
              "Fn::GetAtt": [
                "IntermediateRole6D2F2036",
                "Arn",
              ],
            },
            "ISB_NAMESPACE": {
              "Ref": "Namespace",
            },
            "ISB_TAG_NAME": "aws-solutions:isb-id",
            "ISB_TAG_VALUE": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "ORG_MGT_ACCOUNT_ID": {
              "Ref": "OrgMgtAccountId",
            },
            "ORG_MGT_ROLE_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "OrgMgtAccountId",
                  },
                  ":role/InnovationSandbox-",
                  {
                    "Ref": "Namespace",
                  },
                  "-OrgMgtRole",
                ],
              ],
            },
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-CostReportingLambda-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupE607F9A7",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "ReservedConcurrentExecutions": 1,
        "Role": {
          "Fn::GetAtt": [
            "CostReportingLambdaFunctionRole7410FFF1",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "CostReportingLambdaFunctionRole7410FFF1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CostReportingLambdaFunctionRoleDefaultPolicy62FE1881": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupE607F9A7",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IntermediateRole6D2F2036",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CostReportingLambdaFunctionRoleDefaultPolicy62FE1881",
        "Roles": [
          {
            "Ref": "CostReportingLambdaFunctionRole7410FFF1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CostReportingLambdaInvokeRole508E505A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "scheduler.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "allows EventBridgeScheduler to invoke Innovation Sandbox's CostMonitoring lambda",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CostReportingLambdaInvokeRoleDefaultPolicy98A4092D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CostReportingLambdaFunction2AD931B1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CostReportingLambdaFunction2AD931B1",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CostReportingLambdaInvokeRoleDefaultPolicy98A4092D",
        "Roles": [
          {
            "Ref": "CostReportingLambdaInvokeRole508E505A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CostReportingLambdaIsbDbTableReadOnlyADD8E406": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchGetItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "accountTable",
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "accountTable",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncrypt*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":key/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "tableKmsKeyId",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoDBReadOnlyAccess",
        "Roles": [
          {
            "Ref": "CostReportingLambdaFunctionRole7410FFF1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CostReportingScheduledEvent": {
      "Properties": {
        "Description": "triggers Cost Monitoring on the forth day of every month",
        "FlexibleTimeWindow": {
          "MaximumWindowInMinutes": 360,
          "Mode": "FLEXIBLE",
        },
        "ScheduleExpression": "cron(25 1 4 * ? *)",
        "Target": {
          "Arn": {
            "Fn::GetAtt": [
              "CostReportingLambdaFunction2AD931B1",
              "Arn",
            ],
          },
          "RetryPolicy": {
            "MaximumRetryAttempts": 5,
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "CostReportingLambdaInvokeRole508E505A",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Scheduler::Schedule",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Code": "Omitted to remove snapshot dependency on hash",
        "Environment": {
          "Variables": {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "CloudFrontUiApiDeployIsbFrontEndAwsCliLayerA79739D4",
          },
        ],
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "ISBLogGroupCustomResources63629E09",
          },
        },
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CloudFrontUiApiIsbFrontEndBucket1A358E74",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CloudFrontUiApiIsbFrontEndBucket1A358E74",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IsbKmsKeyIsbComputeStack45953B87",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "cloudfront:GetInvalidation",
                "cloudfront:CreateInvalidation",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DLQ581697C4": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbComputeStack45953B87",
            "Arn",
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "DeploymentUUIDLambdaFunction297287F6": {
      "DependsOn": [
        "DeploymentUUIDLambdaFunctionFunctionRoleDefaultPolicy7D6AE82D",
        "DeploymentUUIDLambdaFunctionFunctionRoleDB238E11",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "Custom resource lambda provider that generates a UUID on stack creation",
        "Environment": {
          "Variables": {
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "NODE_OPTIONS": "--enable-source-maps",
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-LambdaFunction-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupCustomResources63629E09",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "DeploymentUUIDLambdaFunctionFunctionRoleDB238E11",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeploymentUUIDLambdaFunctionFunctionRoleDB238E11": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeploymentUUIDLambdaFunctionFunctionRoleDefaultPolicy7D6AE82D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupCustomResources63629E09",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeploymentUUIDLambdaFunctionFunctionRoleDefaultPolicy7D6AE82D",
        "Roles": [
          {
            "Ref": "DeploymentUUIDLambdaFunctionFunctionRoleDB238E11",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeploymentUUIDLambdaFunctionIsbCustomResourceE707861E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "DeploymentUUIDLambdaFunctionIsbProviderframeworkonEvent42333667",
            "Arn",
          ],
        },
      },
      "Type": "Custom::DeploymentUUID",
      "UpdateReplacePolicy": "Delete",
    },
    "DeploymentUUIDLambdaFunctionIsbProviderframeworkonEvent42333667": {
      "DependsOn": [
        "DeploymentUUIDLambdaFunctionIsbProviderframeworkonEventServiceRoleDefaultPolicy20766167",
        "DeploymentUUIDLambdaFunctionIsbProviderframeworkonEventServiceRole78CDE25E",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "AWS CDK resource provider framework - onEvent (IsbComputeStack/DeploymentUUID/LambdaFunction/IsbProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "DeploymentUUIDLambdaFunction297287F6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "ISBLogGroupCustomResources63629E09",
          },
        },
        "Role": {
          "Fn::GetAtt": [
            "DeploymentUUIDLambdaFunctionIsbProviderframeworkonEventServiceRole78CDE25E",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeploymentUUIDLambdaFunctionIsbProviderframeworkonEventServiceRole78CDE25E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeploymentUUIDLambdaFunctionIsbProviderframeworkonEventServiceRoleDefaultPolicy20766167": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DeploymentUUIDLambdaFunction297287F6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DeploymentUUIDLambdaFunction297287F6",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DeploymentUUIDLambdaFunction297287F6",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeploymentUUIDLambdaFunctionIsbProviderframeworkonEventServiceRoleDefaultPolicy20766167",
        "Roles": [
          {
            "Ref": "DeploymentUUIDLambdaFunctionIsbProviderframeworkonEventServiceRole78CDE25E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EmailEventsToLambdaA7766172": {
      "Properties": {
        "Description": "Triggers email notification lambda",
        "EventBusName": {
          "Ref": "ISBEventBusD5514129",
        },
        "EventPattern": {
          "detail-type": [
            "LeaseRequested",
            "LeaseApproved",
            "LeaseDenied",
            "LeaseTerminated",
            "LeaseFrozen",
            "AccountCleanupFailed",
            "AccountDriftDetected",
            "LeaseBudgetThresholdAlert",
            "LeaseDurationThresholdAlert",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "EmailNotificationFunction35F940BB",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RetryPolicy": {
              "MaximumEventAgeInSeconds": 14400,
              "MaximumRetryAttempts": 3,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "EmailEventsToLambdaAllowEventRuleIsbComputeStackEmailNotificationFunctionAB7FDA983793E205": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "EmailNotificationFunction35F940BB",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "EmailEventsToLambdaA7766172",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EmailNotificationFunction35F940BB": {
      "DependsOn": [
        "EmailNotificationFunctionRoleDefaultPolicyA04611F2",
        "EmailNotificationFunctionRoleB4E00EDD",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "consumes email notification messages and sends emails",
        "Environment": {
          "Variables": {
            "APP_CONFIG_APPLICATION_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configApplicationId",
              ],
            },
            "APP_CONFIG_ENVIRONMENT_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configEnvironmentId",
              ],
            },
            "APP_CONFIG_PROFILE_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "globalConfigConfigurationProfileId",
              ],
            },
            "AWS_APPCONFIG_EXTENSION_HTTP_PORT": "2772",
            "AWS_APPCONFIG_EXTENSION_POLL_INTERVAL_SECONDS": "10m",
            "AWS_APPCONFIG_EXTENSION_PREFETCH_LIST": {
              "Fn::Join": [
                "",
                [
                  "/applications/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configApplicationId",
                    ],
                  },
                  "/environments/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configEnvironmentId",
                    ],
                  },
                  "/configurations/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "globalConfigConfigurationProfileId",
                    ],
                  },
                ],
              ],
            },
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "IDC_ROLE_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "IdcAccountId",
                  },
                  ":role/InnovationSandbox-",
                  {
                    "Ref": "Namespace",
                  },
                  "-IdcRole",
                ],
              ],
            },
            "IDENTITY_STORE_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "identityStoreId",
              ],
            },
            "INTERMEDIATE_ROLE_ARN": {
              "Fn::GetAtt": [
                "IntermediateRole6D2F2036",
                "Arn",
              ],
            },
            "ISB_EVENT_BUS": {
              "Ref": "ISBEventBusD5514129",
            },
            "ISB_NAMESPACE": {
              "Ref": "Namespace",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "SSO_INSTANCE_ARN": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "ssoInstanceArn",
              ],
            },
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-EmailNotification-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
          {
            "Fn::FindInMap": [
              "AppConfigExtensionArnMap",
              {
                "Ref": "AWS::Region",
              },
              "arn",
            ],
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupE607F9A7",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "EmailNotificationFunctionRoleB4E00EDD",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 180,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "EmailNotificationFunctionAllowEventBridgeToTriggerLambda09EFF830": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "EmailNotificationFunction35F940BB",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ISBEventBusD5514129",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "EmailNotificationFunctionRoleB4E00EDD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EmailNotificationFunctionRoleDefaultPolicyA04611F2": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupE607F9A7",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IntermediateRole6D2F2036",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "appconfig:StartConfigurationSession",
                "appconfig:GetLatestConfiguration",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":appconfig:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":application/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "configApplicationId",
                      ],
                    },
                    "/environment/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "configEnvironmentId",
                      ],
                    },
                    "/configuration/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "globalConfigConfigurationProfileId",
                      ],
                    },
                  ],
                ],
              },
            },
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IsbKmsKeyIsbComputeStack45953B87",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EmailNotificationFunctionRoleDefaultPolicyA04611F2",
        "Roles": [
          {
            "Ref": "EmailNotificationFunctionRoleB4E00EDD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EmailNotificationSendPolicyEB2714FC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ses:SendEmail",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EmailNotificationSendPolicyEB2714FC",
        "Roles": [
          {
            "Ref": "EmailNotificationFunctionRoleB4E00EDD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ISBEventBusD5514129": {
      "Properties": {
        "DeadLetterConfig": {
          "Arn": {
            "Fn::GetAtt": [
              "ISBEventBusDLQCBA480AD",
              "Arn",
            ],
          },
        },
        "Description": "core event bus for all ISB activity",
        "KmsKeyIdentifier": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbComputeStack45953B87",
            "Arn",
          ],
        },
        "Name": "IsbComputeStackISBEventBusA43FE423",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::EventBus",
    },
    "ISBEventBusDLQCBA480AD": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbComputeStack45953B87",
            "Arn",
          ],
        },
        "QueueName": {
          "Fn::Join": [
            "",
            [
              "ISB-",
              {
                "Ref": "Namespace",
              },
              "-ISBEventBus-DLQ",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "ISBEventBusLogging37337846": {
      "Properties": {
        "Description": "logs all events that get sent to the ISB event bus",
        "EventBusName": {
          "Ref": "ISBEventBusD5514129",
        },
        "EventPattern": {
          "source": [
            {
              "prefix": "",
            },
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ISBLogGroupE607F9A7",
                "Arn",
              ],
            },
            "DeadLetterConfig": {
              "Arn": {
                "Fn::GetAtt": [
                  "DLQ581697C4",
                  "Arn",
                ],
              },
            },
            "Id": "Target0",
            "InputTransformer": {
              "InputPathsMap": {
                "detail-type": "$.detail-type",
                "time": "$.time",
              },
              "InputTemplate": "{"message":"ISBEventBus received <detail-type> event","timestamp":<time>}",
            },
            "RetryPolicy": {
              "MaximumRetryAttempts": 20,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ISBLogGroupCleanup485A102F": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbComputeStack45953B87",
            "Arn",
          ],
        },
        "RetentionInDays": {
          "Fn::FindInMap": [
            "Mapping",
            "context",
            "cloudWatchLogRetentionInDays",
            {
              "DefaultValue": "",
            },
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "ISBLogGroupCustomResources63629E09": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbComputeStack45953B87",
            "Arn",
          ],
        },
        "RetentionInDays": {
          "Fn::FindInMap": [
            "Mapping",
            "context",
            "cloudWatchLogRetentionInDays",
            {
              "DefaultValue": "",
            },
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "ISBLogGroupE607F9A7": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
          ],
        },
      },
      "Properties": {
        "KmsKeyId": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbComputeStack45953B87",
            "Arn",
          ],
        },
        "RetentionInDays": {
          "Fn::FindInMap": [
            "Mapping",
            "context",
            "cloudWatchLogRetentionInDays",
            {
              "DefaultValue": "",
            },
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "ISBLogGroupPolicyResourcePolicy395D72DA": {
      "Properties": {
        "PolicyDocument": {
          "Fn::Join": [
            "",
            [
              "{"Statement":[{"Action":["logs:CreateLogStream","logs:PutLogEvents"],"Effect":"Allow","Principal":{"Service":["events.amazonaws.com","delivery.logs.amazonaws.com"]},"Resource":"",
              {
                "Fn::GetAtt": [
                  "ISBLogGroupE607F9A7",
                  "Arn",
                ],
              },
              ""}],"Version":"2012-10-17"}",
            ],
          ],
        },
        "PolicyName": "IsbComputeStackISBLogGroupPolicy0941D1C8",
      },
      "Type": "AWS::Logs::ResourcePolicy",
    },
    "IdpCertC53FAE82": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "IAM Identity Center Certificate of the ISB SAML 2.0 custom app",
        "KmsKeyId": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbComputeStack45953B87",
            "Arn",
          ],
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              "/InnovationSandbox/",
              {
                "Ref": "Namespace",
              },
              "/Auth/IdpCert",
            ],
          ],
        },
        "SecretString": "Please paste the IAM Identity Center Certificate of the Innovation Sandbox SAML 2.0 custom application here",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "IntermediateRole6D2F2036": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CFN_NO_EXPLICIT_RESOURCE_NAMES",
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ForAnyValue:StringEquals": {
                  "aws:PrincipalArn": [
                    {
                      "Fn::GetAtt": [
                        "LeaseMonitoringFunctionRole46C50E2F",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "SandboxAccountLifecycleManagementFunctionRole6469637D",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "AccountDriftMonitoringFunctionRoleEEB1FC86",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "EmailNotificationFunctionRoleB4E00EDD",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "AccountCleanerCodeBuildCleanupProjectRole3FF40319",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "SsoHandlerFunctionRoleA9C67752",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "LeasesLambdaFunctionFunctionRole8C813149",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "AccountsLambdaFunctionFunctionRole3A22EFEC",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "AnonymizedMetricsReportingFunctionFunctionRole3FADEEB2",
                        "Arn",
                      ],
                    },
                    {
                      "Fn::GetAtt": [
                        "CostReportingLambdaFunctionRole7410FFF1",
                        "Arn",
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": {
          "Fn::Join": [
            "",
            [
              "InnovationSandbox-",
              {
                "Ref": "Namespace",
              },
              "-IntermediateRole",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IntermediateRoleDefaultPolicy7308C44F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    {
                      "Ref": "IdcAccountId",
                    },
                    ":role/InnovationSandbox-",
                    {
                      "Ref": "Namespace",
                    },
                    "-IdcRole",
                  ],
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    {
                      "Ref": "OrgMgtAccountId",
                    },
                    ":role/InnovationSandbox-",
                    {
                      "Ref": "Namespace",
                    },
                    "-OrgMgtRole",
                  ],
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::*:role/InnovationSandbox-",
                    {
                      "Ref": "Namespace",
                    },
                    "-SandboxAccountRole",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntermediateRoleDefaultPolicy7308C44F",
        "Roles": [
          {
            "Ref": "IntermediateRole6D2F2036",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IsbApplicationInsightsIsbTaggedApplication81994B95": {
      "Properties": {
        "AutoConfigurationEnabled": true,
        "CWEMonitorEnabled": true,
        "LogPatternSets": [
          {
            "LogPatterns": [
              {
                "Pattern": "Invalid Records Found",
                "PatternName": "DataValidationWarning",
                "Rank": 1,
              },
            ],
            "PatternSetName": "DataValidationWarning",
          },
          {
            "LogPatterns": [
              {
                "Pattern": "Failed to send email",
                "PatternName": "EmailSendingError",
                "Rank": 3,
              },
            ],
            "PatternSetName": "EmailSendingError",
          },
          {
            "LogPatterns": [
              {
                "Pattern": "Failed to send email",
                "PatternName": "AccountDrift",
                "Rank": 2,
              },
            ],
            "PatternSetName": "AccountDrift",
          },
        ],
        "OpsCenterEnabled": false,
        "ResourceGroupName": "IsbTaggedResourceGroup",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::ApplicationInsights::Application",
    },
    "IsbApplicationInsightsIsbTaggedResourceGroupAB8DC40C": {
      "Properties": {
        "Name": "IsbTaggedResourceGroup",
        "ResourceQuery": {
          "Query": {
            "ResourceTypeFilters": [
              "AWS::AllSupported",
            ],
            "TagFilters": [
              {
                "Key": "aws-solutions:isb-id",
                "Values": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "Namespace",
                        },
                        "_isb",
                      ],
                    ],
                  },
                ],
              },
            ],
          },
          "Type": "TAG_FILTERS_1_0",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::ResourceGroups::Group",
    },
    "IsbKmsKeyIsbComputeStack45953B87": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "Encryption Key for Innovation Sandbox: IsbComputeStack",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "logs.amazonaws.com",
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:GenerateDataKey",
                "kms:DescribeKey",
              ],
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                  "aws:SourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":events:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":event-bus/IsbComputeStackISBEventBusA43FE423",
                      ],
                    ],
                  },
                  "kms:EncryptionContext:aws:events:event-bus:arn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":events:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":event-bus/IsbComputeStackISBEventBusA43FE423",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "sqs.amazonaws.com",
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": {
                    "Fn::Join": [
                      "",
                      [
                        "secretsmanager.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:DescribeKey",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": {
                    "Fn::Join": [
                      "",
                      [
                        "secretsmanager.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": {
                    "Fn::Join": [
                      "",
                      [
                        "secretsmanager.",
                        {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "JwtSecretRotatorFunctionRole64A92119",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": "kms:Decrypt",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":cloudfront::",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":distribution/*",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudfront.amazonaws.com",
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:GenerateDataKey*",
              ],
              "Condition": {
                "StringEquals": {
                  "AWS:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "delivery.logs.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "IsbKmsKeyIsbComputeStackAlias632C9B8D": {
      "Properties": {
        "AliasName": {
          "Fn::Join": [
            "",
            [
              "alias/AwsSolutions/InnovationSandbox/",
              {
                "Ref": "Namespace",
              },
              "/IsbComputeStack",
            ],
          ],
        },
        "TargetKeyId": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbComputeStack45953B87",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "IsbRestApi377E2CC6": {
      "Properties": {
        "Description": "Innovation Sandbox on AWS Rest API",
        "Name": "IsbRestApi",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "IsbRestApiAccountF2A31F36": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "IsbRestApi377E2CC6",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "IsbRestApiCloudWatchRole3E2A3B92",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "IsbRestApiCloudWatchRole3E2A3B92": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "IsbRestApiDeployment120FC0531029e7851b48398ae81d2e8ee6a537de": {
      "DependsOn": [
        "IsbRestApiaccountsawsAccountIdejectPOST8D3E80E9",
        "IsbRestApiaccountsawsAccountIdeject6D451D8A",
        "IsbRestApiaccountsawsAccountIdGETA3567A33",
        "IsbRestApiaccountsawsAccountId279CF7F2",
        "IsbRestApiaccountsawsAccountIdretryCleanupPOST8F8AF552",
        "IsbRestApiaccountsawsAccountIdretryCleanup5F96B82E",
        "IsbRestApiaccountsGET9C185DB2",
        "IsbRestApiaccountsPOST13FEF3B9",
        "IsbRestApiaccounts69CD8364",
        "IsbRestApiaccountsunregisteredGET1A7AE469",
        "IsbRestApiaccountsunregistered0069F65F",
        "IsbRestApiauthactionGET60DF4D62",
        "IsbRestApiauthactionOPTIONSA6DC7412",
        "IsbRestApiauthactionPOST28128E1C",
        "IsbRestApiauthaction909DADD2",
        "IsbRestApiauthE905B564",
        "IsbRestApiconfigurationsGETCB095983",
        "IsbRestApiconfigurationsPOSTD70E362B",
        "IsbRestApiconfigurations6FE57EA4",
        "IsbRestApileasesleaseIdfreezePOSTDE894D78",
        "IsbRestApileasesleaseIdfreeze3A28784A",
        "IsbRestApileasesleaseIdGETFC53DF30",
        "IsbRestApileasesleaseIdPATCHAB95D5E9",
        "IsbRestApileasesleaseId9851F99B",
        "IsbRestApileasesleaseIdreviewPOST03D6AD94",
        "IsbRestApileasesleaseIdreview53E1F41F",
        "IsbRestApileasesleaseIdterminatePOSTD029AED7",
        "IsbRestApileasesleaseIdterminate0B5F429B",
        "IsbRestApileasesGET2040EBB6",
        "IsbRestApileasesPOST0BA078F5",
        "IsbRestApileases603F143D",
        "IsbRestApileaseTemplatesleaseTemplateNameDELETEC19BA76D",
        "IsbRestApileaseTemplatesleaseTemplateNameGETABE25277",
        "IsbRestApileaseTemplatesleaseTemplateNamePUTA18EDFBF",
        "IsbRestApileaseTemplatesleaseTemplateName6CF1F9DC",
        "IsbRestApileaseTemplatesGETD139D035",
        "IsbRestApileaseTemplatesPOST61718B66",
        "IsbRestApileaseTemplates87AB84C6",
      ],
      "Properties": {
        "Description": "Innovation Sandbox on AWS Rest API",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "IsbRestApiDeploymentStageprod7DDD9304": {
      "DependsOn": [
        "IsbRestApiAccountF2A31F36",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "API_GW_CACHE_ENABLED_AND_ENCRYPTED",
          ],
        },
      },
      "Properties": {
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "ISBLogGroupE607F9A7",
              "Arn",
            ],
          },
          "Format": "$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] "$context.httpMethod $context.resourcePath $context.protocol" $context.status $context.responseLength $context.requestId",
        },
        "DeploymentId": {
          "Ref": "IsbRestApiDeployment120FC0531029e7851b48398ae81d2e8ee6a537de",
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "ResourcePath": "/*",
            "ThrottlingBurstLimit": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "apiThrottlingBurstLimit",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "ThrottlingRateLimit": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "apiThrottlingRateLimit",
                {
                  "DefaultValue": "",
                },
              ],
            },
          },
        ],
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
        "StageName": "prod",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "IsbRestApiIPSetBE387BC1": {
      "Properties": {
        "Addresses": {
          "Ref": "AllowListedIPRanges",
        },
        "IPAddressVersion": "IPV4",
        "Scope": "REGIONAL",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::WAFv2::IPSet",
    },
    "IsbRestApiWebAcl64B96E8A": {
      "Properties": {
        "CustomResponseBodies": {
          "TooManyRequests": {
            "Content": "{"message":"Too many requests"}",
            "ContentType": "APPLICATION_JSON",
          },
        },
        "DefaultAction": {
          "Allow": {},
        },
        "Rules": [
          {
            "Action": {
              "Block": {},
            },
            "Name": "IsbAllowListRule",
            "Priority": 0,
            "Statement": {
              "NotStatement": {
                "Statement": {
                  "IPSetReferenceStatement": {
                    "Arn": {
                      "Fn::GetAtt": [
                        "IsbRestApiIPSetBE387BC1",
                        "Arn",
                      ],
                    },
                  },
                },
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "IsbRateLimitRuleMetric",
              "SampledRequestsEnabled": true,
            },
          },
          {
            "Action": {
              "Block": {
                "CustomResponse": {
                  "CustomResponseBodyKey": "TooManyRequests",
                  "ResponseCode": 429,
                },
              },
            },
            "Name": "IsbRateLimitRule",
            "Priority": 1,
            "Statement": {
              "RateBasedStatement": {
                "AggregateKeyType": "FORWARDED_IP",
                "EvaluationWindowSec": 60,
                "ForwardedIPConfig": {
                  "FallbackBehavior": "MATCH",
                  "HeaderName": "X-Forwarded-For",
                },
                "Limit": 200,
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "IsbRateLimitRuleMetric",
              "SampledRequestsEnabled": true,
            },
          },
          {
            "Name": "AWSManagedRulesCommonRuleSet",
            "OverrideAction": {
              "None": {},
            },
            "Priority": 2,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "ExcludedRules": [
                  {
                    "Name": "SizeRestrictions_BODY",
                  },
                  {
                    "Name": "CrossSiteScripting_BODY",
                  },
                ],
                "Name": "AWSManagedRulesCommonRuleSet",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesCommonRuleSetMetric",
              "SampledRequestsEnabled": true,
            },
          },
          {
            "Name": "AWSManagedRulesAmazonIpReputationList",
            "OverrideAction": {
              "None": {},
            },
            "Priority": 3,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAmazonIpReputationList",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesAmazonIpReputationListMetric",
              "SampledRequestsEnabled": true,
            },
          },
          {
            "Name": "AWSManagedRulesAnonymousIpList",
            "OverrideAction": {
              "None": {},
            },
            "Priority": 4,
            "Statement": {
              "ManagedRuleGroupStatement": {
                "Name": "AWSManagedRulesAnonymousIpList",
                "VendorName": "AWS",
              },
            },
            "VisibilityConfig": {
              "CloudWatchMetricsEnabled": true,
              "MetricName": "AWSManagedRulesAnonymousIpListMetric",
              "SampledRequestsEnabled": true,
            },
          },
        ],
        "Scope": "REGIONAL",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "VisibilityConfig": {
          "CloudWatchMetricsEnabled": true,
          "MetricName": "IsbWebAclMetric",
          "SampledRequestsEnabled": true,
        },
      },
      "Type": "AWS::WAFv2::WebACL",
    },
    "IsbRestApiWebAclAssociation67F677D7": {
      "Properties": {
        "ResourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region",
              },
              "::/restapis/",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/stages/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
            ],
          ],
        },
        "WebACLArn": {
          "Fn::GetAtt": [
            "IsbRestApiWebAcl64B96E8A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::WAFv2::WebACLAssociation",
    },
    "IsbRestApiaccounts69CD8364": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "IsbRestApi377E2CC6",
            "RootResourceId",
          ],
        },
        "PathPart": "accounts",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "IsbRestApiaccountsGET9C185DB2": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AccountsLambdaFunction47AFACD2",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApiaccounts69CD8364",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApiaccountsGETApiPermissionIsbComputeStackIsbRestApiAC643E2AGETaccounts933130D2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AccountsLambdaFunction47AFACD2",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/GET/accounts",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiaccountsGETApiPermissionTestIsbComputeStackIsbRestApiAC643E2AGETaccounts7F26219F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AccountsLambdaFunction47AFACD2",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/GET/accounts",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiaccountsPOST13FEF3B9": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AccountsLambdaFunction47AFACD2",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApiaccounts69CD8364",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApiaccountsPOSTApiPermissionIsbComputeStackIsbRestApiAC643E2APOSTaccounts0DEADD3D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AccountsLambdaFunction47AFACD2",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/POST/accounts",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiaccountsPOSTApiPermissionTestIsbComputeStackIsbRestApiAC643E2APOSTaccountsEFF13A45": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AccountsLambdaFunction47AFACD2",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/POST/accounts",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiaccountsawsAccountId279CF7F2": {
      "Properties": {
        "ParentId": {
          "Ref": "IsbRestApiaccounts69CD8364",
        },
        "PathPart": "{awsAccountId}",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "IsbRestApiaccountsawsAccountIdGETA3567A33": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AccountsLambdaFunction47AFACD2",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApiaccountsawsAccountId279CF7F2",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApiaccountsawsAccountIdGETApiPermissionIsbComputeStackIsbRestApiAC643E2AGETaccountsawsAccountIdE6F78474": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AccountsLambdaFunction47AFACD2",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/GET/accounts/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiaccountsawsAccountIdGETApiPermissionTestIsbComputeStackIsbRestApiAC643E2AGETaccountsawsAccountIdF40F3AAA": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AccountsLambdaFunction47AFACD2",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/GET/accounts/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiaccountsawsAccountIdeject6D451D8A": {
      "Properties": {
        "ParentId": {
          "Ref": "IsbRestApiaccountsawsAccountId279CF7F2",
        },
        "PathPart": "eject",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "IsbRestApiaccountsawsAccountIdejectPOST8D3E80E9": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AccountsLambdaFunction47AFACD2",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApiaccountsawsAccountIdeject6D451D8A",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApiaccountsawsAccountIdejectPOSTApiPermissionIsbComputeStackIsbRestApiAC643E2APOSTaccountsawsAccountIdejectD5715073": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AccountsLambdaFunction47AFACD2",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/POST/accounts/*/eject",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiaccountsawsAccountIdejectPOSTApiPermissionTestIsbComputeStackIsbRestApiAC643E2APOSTaccountsawsAccountIdejectB28C2694": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AccountsLambdaFunction47AFACD2",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/POST/accounts/*/eject",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiaccountsawsAccountIdretryCleanup5F96B82E": {
      "Properties": {
        "ParentId": {
          "Ref": "IsbRestApiaccountsawsAccountId279CF7F2",
        },
        "PathPart": "retryCleanup",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "IsbRestApiaccountsawsAccountIdretryCleanupPOST8F8AF552": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AccountsLambdaFunction47AFACD2",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApiaccountsawsAccountIdretryCleanup5F96B82E",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApiaccountsawsAccountIdretryCleanupPOSTApiPermissionIsbComputeStackIsbRestApiAC643E2APOSTaccountsawsAccountIdretryCleanup3553B1D0": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AccountsLambdaFunction47AFACD2",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/POST/accounts/*/retryCleanup",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiaccountsawsAccountIdretryCleanupPOSTApiPermissionTestIsbComputeStackIsbRestApiAC643E2APOSTaccountsawsAccountIdretryCleanupC76724E6": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AccountsLambdaFunction47AFACD2",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/POST/accounts/*/retryCleanup",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiaccountsunregistered0069F65F": {
      "Properties": {
        "ParentId": {
          "Ref": "IsbRestApiaccounts69CD8364",
        },
        "PathPart": "unregistered",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "IsbRestApiaccountsunregisteredGET1A7AE469": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AccountsLambdaFunction47AFACD2",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApiaccountsunregistered0069F65F",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApiaccountsunregisteredGETApiPermissionIsbComputeStackIsbRestApiAC643E2AGETaccountsunregistered51771FE0": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AccountsLambdaFunction47AFACD2",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/GET/accounts/unregistered",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiaccountsunregisteredGETApiPermissionTestIsbComputeStackIsbRestApiAC643E2AGETaccountsunregistered8A7F88CC": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AccountsLambdaFunction47AFACD2",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/GET/accounts/unregistered",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiauthE905B564": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "IsbRestApi377E2CC6",
            "RootResourceId",
          ],
        },
        "PathPart": "auth",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "IsbRestApiauthaction909DADD2": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "API_GW_METHOD_AUTHORIZATION_TYPE_RULE",
          ],
        },
      },
      "Properties": {
        "ParentId": {
          "Ref": "IsbRestApiauthE905B564",
        },
        "PathPart": "{action+}",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "IsbRestApiauthactionGET60DF4D62": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "API_GW_METHOD_AUTHORIZATION_TYPE_RULE",
          ],
        },
      },
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SsoHandlerFunction8FE0A4A7",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApiauthaction909DADD2",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApiauthactionGETApiPermissionIsbComputeStackIsbRestApiAC643E2AGETauthactionE9E4584B": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SsoHandlerFunction8FE0A4A7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/GET/auth/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiauthactionGETApiPermissionTestIsbComputeStackIsbRestApiAC643E2AGETauthaction118885D0": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SsoHandlerFunction8FE0A4A7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/GET/auth/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiauthactionOPTIONSA6DC7412": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "API_GW_METHOD_AUTHORIZATION_TYPE_RULE",
          ],
        },
      },
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SsoHandlerFunction8FE0A4A7",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApiauthaction909DADD2",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApiauthactionOPTIONSApiPermissionIsbComputeStackIsbRestApiAC643E2AOPTIONSauthaction4D0D7EF2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SsoHandlerFunction8FE0A4A7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/OPTIONS/auth/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiauthactionOPTIONSApiPermissionTestIsbComputeStackIsbRestApiAC643E2AOPTIONSauthactionDAC4BCDE": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SsoHandlerFunction8FE0A4A7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/OPTIONS/auth/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiauthactionPOST28128E1C": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "API_GW_METHOD_AUTHORIZATION_TYPE_RULE",
          ],
        },
      },
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SsoHandlerFunction8FE0A4A7",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApiauthaction909DADD2",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApiauthactionPOSTApiPermissionIsbComputeStackIsbRestApiAC643E2APOSTauthactionBB8B6A98": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SsoHandlerFunction8FE0A4A7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/POST/auth/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiauthactionPOSTApiPermissionTestIsbComputeStackIsbRestApiAC643E2APOSTauthaction067D069A": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SsoHandlerFunction8FE0A4A7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/POST/auth/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiconfigurations6FE57EA4": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "IsbRestApi377E2CC6",
            "RootResourceId",
          ],
        },
        "PathPart": "configurations",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "IsbRestApiconfigurationsGETApiPermissionIsbComputeStackIsbRestApiAC643E2AGETconfigurationsEAE5E978": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ConfigurationsLambdaFunctionBD1B5393",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/GET/configurations",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiconfigurationsGETApiPermissionTestIsbComputeStackIsbRestApiAC643E2AGETconfigurationsE67D1266": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ConfigurationsLambdaFunctionBD1B5393",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/GET/configurations",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiconfigurationsGETCB095983": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ConfigurationsLambdaFunctionBD1B5393",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApiconfigurations6FE57EA4",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApiconfigurationsPOSTApiPermissionIsbComputeStackIsbRestApiAC643E2APOSTconfigurations1DA4A8D2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ConfigurationsLambdaFunctionBD1B5393",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/POST/configurations",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiconfigurationsPOSTApiPermissionTestIsbComputeStackIsbRestApiAC643E2APOSTconfigurations470DE1D9": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ConfigurationsLambdaFunctionBD1B5393",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/POST/configurations",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApiconfigurationsPOSTD70E362B": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ConfigurationsLambdaFunctionBD1B5393",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApiconfigurations6FE57EA4",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApileaseTemplates87AB84C6": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "IsbRestApi377E2CC6",
            "RootResourceId",
          ],
        },
        "PathPart": "leaseTemplates",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "IsbRestApileaseTemplatesGETApiPermissionIsbComputeStackIsbRestApiAC643E2AGETleaseTemplates6E487CB9": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeaseTemplatesLambdaFunction2965B8D5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/GET/leaseTemplates",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileaseTemplatesGETApiPermissionTestIsbComputeStackIsbRestApiAC643E2AGETleaseTemplates9B622B90": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeaseTemplatesLambdaFunction2965B8D5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/GET/leaseTemplates",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileaseTemplatesGETD139D035": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LeaseTemplatesLambdaFunction2965B8D5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApileaseTemplates87AB84C6",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApileaseTemplatesPOST61718B66": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LeaseTemplatesLambdaFunction2965B8D5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApileaseTemplates87AB84C6",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApileaseTemplatesPOSTApiPermissionIsbComputeStackIsbRestApiAC643E2APOSTleaseTemplates49C137EF": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeaseTemplatesLambdaFunction2965B8D5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/POST/leaseTemplates",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileaseTemplatesPOSTApiPermissionTestIsbComputeStackIsbRestApiAC643E2APOSTleaseTemplates698288BC": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeaseTemplatesLambdaFunction2965B8D5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/POST/leaseTemplates",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileaseTemplatesleaseTemplateName6CF1F9DC": {
      "Properties": {
        "ParentId": {
          "Ref": "IsbRestApileaseTemplates87AB84C6",
        },
        "PathPart": "{leaseTemplateName}",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "IsbRestApileaseTemplatesleaseTemplateNameDELETEApiPermissionIsbComputeStackIsbRestApiAC643E2ADELETEleaseTemplatesleaseTemplateName59234EC4": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeaseTemplatesLambdaFunction2965B8D5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/DELETE/leaseTemplates/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileaseTemplatesleaseTemplateNameDELETEApiPermissionTestIsbComputeStackIsbRestApiAC643E2ADELETEleaseTemplatesleaseTemplateName73BD2E37": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeaseTemplatesLambdaFunction2965B8D5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/DELETE/leaseTemplates/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileaseTemplatesleaseTemplateNameDELETEC19BA76D": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "DELETE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LeaseTemplatesLambdaFunction2965B8D5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApileaseTemplatesleaseTemplateName6CF1F9DC",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApileaseTemplatesleaseTemplateNameGETABE25277": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LeaseTemplatesLambdaFunction2965B8D5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApileaseTemplatesleaseTemplateName6CF1F9DC",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApileaseTemplatesleaseTemplateNameGETApiPermissionIsbComputeStackIsbRestApiAC643E2AGETleaseTemplatesleaseTemplateName66441C5D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeaseTemplatesLambdaFunction2965B8D5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/GET/leaseTemplates/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileaseTemplatesleaseTemplateNameGETApiPermissionTestIsbComputeStackIsbRestApiAC643E2AGETleaseTemplatesleaseTemplateName1E1C4256": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeaseTemplatesLambdaFunction2965B8D5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/GET/leaseTemplates/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileaseTemplatesleaseTemplateNamePUTA18EDFBF": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "PUT",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LeaseTemplatesLambdaFunction2965B8D5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApileaseTemplatesleaseTemplateName6CF1F9DC",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApileaseTemplatesleaseTemplateNamePUTApiPermissionIsbComputeStackIsbRestApiAC643E2APUTleaseTemplatesleaseTemplateNameA99B3EED": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeaseTemplatesLambdaFunction2965B8D5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/PUT/leaseTemplates/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileaseTemplatesleaseTemplateNamePUTApiPermissionTestIsbComputeStackIsbRestApiAC643E2APUTleaseTemplatesleaseTemplateName91018EB2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeaseTemplatesLambdaFunction2965B8D5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/PUT/leaseTemplates/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileases603F143D": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "IsbRestApi377E2CC6",
            "RootResourceId",
          ],
        },
        "PathPart": "leases",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "IsbRestApileasesGET2040EBB6": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LeasesLambdaFunction6133D88B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApileases603F143D",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApileasesGETApiPermissionIsbComputeStackIsbRestApiAC643E2AGETleases514DBCDA": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeasesLambdaFunction6133D88B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/GET/leases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileasesGETApiPermissionTestIsbComputeStackIsbRestApiAC643E2AGETleases2341B0B4": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeasesLambdaFunction6133D88B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/GET/leases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileasesPOST0BA078F5": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LeasesLambdaFunction6133D88B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApileases603F143D",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApileasesPOSTApiPermissionIsbComputeStackIsbRestApiAC643E2APOSTleases5A808BCD": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeasesLambdaFunction6133D88B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/POST/leases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileasesPOSTApiPermissionTestIsbComputeStackIsbRestApiAC643E2APOSTleases812FE298": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeasesLambdaFunction6133D88B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/POST/leases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileasesleaseId9851F99B": {
      "Properties": {
        "ParentId": {
          "Ref": "IsbRestApileases603F143D",
        },
        "PathPart": "{leaseId}",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "IsbRestApileasesleaseIdGETApiPermissionIsbComputeStackIsbRestApiAC643E2AGETleasesleaseIdBCC21CA2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeasesLambdaFunction6133D88B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/GET/leases/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileasesleaseIdGETApiPermissionTestIsbComputeStackIsbRestApiAC643E2AGETleasesleaseId6AB8989F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeasesLambdaFunction6133D88B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/GET/leases/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileasesleaseIdGETFC53DF30": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LeasesLambdaFunction6133D88B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApileasesleaseId9851F99B",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApileasesleaseIdPATCHAB95D5E9": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "PATCH",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LeasesLambdaFunction6133D88B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApileasesleaseId9851F99B",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApileasesleaseIdPATCHApiPermissionIsbComputeStackIsbRestApiAC643E2APATCHleasesleaseIdCF555185": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeasesLambdaFunction6133D88B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/PATCH/leases/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileasesleaseIdPATCHApiPermissionTestIsbComputeStackIsbRestApiAC643E2APATCHleasesleaseIdDD1D8CE3": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeasesLambdaFunction6133D88B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/PATCH/leases/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileasesleaseIdfreeze3A28784A": {
      "Properties": {
        "ParentId": {
          "Ref": "IsbRestApileasesleaseId9851F99B",
        },
        "PathPart": "freeze",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "IsbRestApileasesleaseIdfreezePOSTApiPermissionIsbComputeStackIsbRestApiAC643E2APOSTleasesleaseIdfreeze261731D8": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeasesLambdaFunction6133D88B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/POST/leases/*/freeze",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileasesleaseIdfreezePOSTApiPermissionTestIsbComputeStackIsbRestApiAC643E2APOSTleasesleaseIdfreeze1F50E6DC": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeasesLambdaFunction6133D88B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/POST/leases/*/freeze",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileasesleaseIdfreezePOSTDE894D78": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LeasesLambdaFunction6133D88B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApileasesleaseIdfreeze3A28784A",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApileasesleaseIdreview53E1F41F": {
      "Properties": {
        "ParentId": {
          "Ref": "IsbRestApileasesleaseId9851F99B",
        },
        "PathPart": "review",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "IsbRestApileasesleaseIdreviewPOST03D6AD94": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LeasesLambdaFunction6133D88B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApileasesleaseIdreview53E1F41F",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbRestApileasesleaseIdreviewPOSTApiPermissionIsbComputeStackIsbRestApiAC643E2APOSTleasesleaseIdreview49AD78AC": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeasesLambdaFunction6133D88B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/POST/leases/*/review",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileasesleaseIdreviewPOSTApiPermissionTestIsbComputeStackIsbRestApiAC643E2APOSTleasesleaseIdreview4B7DBADA": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeasesLambdaFunction6133D88B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/POST/leases/*/review",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileasesleaseIdterminate0B5F429B": {
      "Properties": {
        "ParentId": {
          "Ref": "IsbRestApileasesleaseId9851F99B",
        },
        "PathPart": "terminate",
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "IsbRestApileasesleaseIdterminatePOSTApiPermissionIsbComputeStackIsbRestApiAC643E2APOSTleasesleaseIdterminate1537EFCA": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeasesLambdaFunction6133D88B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/",
              {
                "Ref": "IsbRestApiDeploymentStageprod7DDD9304",
              },
              "/POST/leases/*/terminate",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileasesleaseIdterminatePOSTApiPermissionTestIsbComputeStackIsbRestApiAC643E2APOSTleasesleaseIdterminate0FC2482A": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LeasesLambdaFunction6133D88B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "IsbRestApi377E2CC6",
              },
              "/test-invoke-stage/POST/leases/*/terminate",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IsbRestApileasesleaseIdterminatePOSTD029AED7": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthorizerBD825682",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LeasesLambdaFunction6133D88B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "IsbRestApileasesleaseIdterminate0B5F429B",
        },
        "RestApiId": {
          "Ref": "IsbRestApi377E2CC6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445": {
      "Properties": {
        "CompatibleArchitectures": [
          "arm64",
        ],
        "CompatibleRuntimes": [
          "nodejs22.x",
        ],
        "Content": "Omitted to remove snapshot dependency on hash",
        "Description": "Common lib for Innovation Sandbox on AWS",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878": {
      "Properties": {
        "CompatibleArchitectures": [
          "arm64",
        ],
        "CompatibleRuntimes": [
          "nodejs22.x",
        ],
        "Content": "Omitted to remove snapshot dependency on hash",
        "Description": "Third party runtime dependencies for Innovation Sandbox on AWS",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "IsbSpokeConfigJsonParamResolverParseJsonConfigurationFunctionCE168970": {
      "DependsOn": [
        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationFunctionRoleDefaultPolicy5140CE0C",
        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationFunctionRoleAD0AD111",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "Parses configuration passed in JSON format",
        "Environment": {
          "Variables": {
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "NODE_OPTIONS": "--enable-source-maps",
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-ParseJsonConfiguration-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupCustomResources63629E09",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IsbSpokeConfigJsonParamResolverParseJsonConfigurationFunctionRoleAD0AD111",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "IsbSpokeConfigJsonParamResolverParseJsonConfigurationFunctionRoleAD0AD111": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IsbSpokeConfigJsonParamResolverParseJsonConfigurationFunctionRoleDefaultPolicy5140CE0C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupCustomResources63629E09",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IsbSpokeConfigJsonParamResolverParseJsonConfigurationFunctionRoleDefaultPolicy5140CE0C",
        "Roles": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverParseJsonConfigurationFunctionRoleAD0AD111",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbProviderframeworkonEventD19E887B",
            "Arn",
          ],
        },
        "accountPoolConfigParamArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ssm:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "OrgMgtAccountId",
              },
              ":parameter/InnovationSandbox_",
              {
                "Ref": "Namespace",
              },
              "_AccountPool_Configuration",
            ],
          ],
        },
        "dataConfigParamArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ssm:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":parameter/InnovationSandbox_",
              {
                "Ref": "Namespace",
              },
              "_Data_Configuration",
            ],
          ],
        },
        "forceUpdate": "Omitted to remove snapshot dependency on generated auto incrementing id",
        "idcConfigParamArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ssm:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "IdcAccountId",
              },
              ":parameter/InnovationSandbox_",
              {
                "Ref": "Namespace",
              },
              "_Idc_Configuration",
            ],
          ],
        },
        "namespace": {
          "Ref": "Namespace",
        },
      },
      "Type": "Custom::ParseJsonConfiguration",
      "UpdateReplacePolicy": "Delete",
    },
    "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbProviderframeworkonEventD19E887B": {
      "DependsOn": [
        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbProviderframeworkonEventServiceRoleDefaultPolicy550E8662",
        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbProviderframeworkonEventServiceRoleAE0FBDD1",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "AWS CDK resource provider framework - onEvent (IsbComputeStack/IsbSpokeConfigJsonParamResolver/ParseJsonConfiguration/IsbProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationFunctionCE168970",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "ISBLogGroupCustomResources63629E09",
          },
        },
        "Role": {
          "Fn::GetAtt": [
            "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbProviderframeworkonEventServiceRoleAE0FBDD1",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbProviderframeworkonEventServiceRoleAE0FBDD1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbProviderframeworkonEventServiceRoleDefaultPolicy550E8662": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "IsbSpokeConfigJsonParamResolverParseJsonConfigurationFunctionCE168970",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationFunctionCE168970",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IsbSpokeConfigJsonParamResolverParseJsonConfigurationFunctionCE168970",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbProviderframeworkonEventServiceRoleDefaultPolicy550E8662",
        "Roles": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbProviderframeworkonEventServiceRoleAE0FBDD1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "JwtSecretB8834B39": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "The secret for JWT used by Innovation Sandbox",
        "GenerateSecretString": {
          "PasswordLength": 32,
        },
        "KmsKeyId": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbComputeStack45953B87",
            "Arn",
          ],
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              "/InnovationSandbox/",
              {
                "Ref": "Namespace",
              },
              "/Auth/JwtSecret",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "JwtSecretPolicy4DC9D3C1": {
      "Properties": {
        "ResourcePolicy": {
          "Statement": [
            {
              "Action": "secretsmanager:DeleteSecret",
              "Effect": "Deny",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "SecretId": {
          "Ref": "JwtSecretB8834B39",
        },
      },
      "Type": "AWS::SecretsManager::ResourcePolicy",
    },
    "JwtSecretRotationScheduleDAD24282": {
      "DependsOn": [
        "JwtSecretRotatorFunctionInvokeN0a2GKfZP0JmDqDEVhhu6A0TUv3NyNbk4YMFKNcD8557503",
      ],
      "Properties": {
        "RotateImmediatelyOnUpdate": true,
        "RotationLambdaARN": {
          "Fn::GetAtt": [
            "JwtSecretRotatorFunction8299D159",
            "Arn",
          ],
        },
        "RotationRules": {
          "ScheduleExpression": "rate(30 days)",
        },
        "SecretId": {
          "Ref": "JwtSecretB8834B39",
        },
      },
      "Type": "AWS::SecretsManager::RotationSchedule",
    },
    "JwtSecretRotatorFunction8299D159": {
      "DependsOn": [
        "JwtSecretRotatorFunctionRoleDefaultPolicy23443270",
        "JwtSecretRotatorFunctionRole64A92119",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "Rotates the Isb Jwt Secret",
        "Environment": {
          "Variables": {
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "NODE_OPTIONS": "--enable-source-maps",
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-JwtSecretRotator-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupE607F9A7",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "ReservedConcurrentExecutions": 1,
        "Role": {
          "Fn::GetAtt": [
            "JwtSecretRotatorFunctionRole64A92119",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "JwtSecretRotatorFunctionInvokeN0a2GKfZP0JmDqDEVhhu6A0TUv3NyNbk4YMFKNcD8557503": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "JwtSecretRotatorFunction8299D159",
            "Arn",
          ],
        },
        "Principal": "secretsmanager.amazonaws.com",
      },
      "Type": "AWS::Lambda::Permission",
    },
    "JwtSecretRotatorFunctionRole64A92119": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "JwtSecretRotatorFunctionRoleDefaultPolicy23443270": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupE607F9A7",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetSecretValue",
                "secretsmanager:PutSecretValue",
                "secretsmanager:UpdateSecretVersionStage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "JwtSecretB8834B39",
              },
            },
            {
              "Action": "secretsmanager:GetRandomPassword",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "JwtSecretRotatorFunctionRoleDefaultPolicy23443270",
        "Roles": [
          {
            "Ref": "JwtSecretRotatorFunctionRole64A92119",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LambdaInvokeRole0342EAD8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "scheduler.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "allows EventBridgeScheduler to invoke Innovation Sandbox's LeaseMonitoring lambda",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaInvokeRoleDefaultPolicyDE53A8A0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LeaseMonitoringFunctionA656342F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "LeaseMonitoringFunctionA656342F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaInvokeRoleDefaultPolicyDE53A8A0",
        "Roles": [
          {
            "Ref": "LambdaInvokeRole0342EAD8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LeaseMonitoringFunctionA656342F": {
      "DependsOn": [
        "LeaseMonitoringFunctionRoleDefaultPolicy81F212C0",
        "LeaseMonitoringFunctionRole46C50E2F",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "Scans active leases periodically to trigger events when alerts or actions need to be taken",
        "Environment": {
          "Variables": {
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "INTERMEDIATE_ROLE_ARN": {
              "Fn::GetAtt": [
                "IntermediateRole6D2F2036",
                "Arn",
              ],
            },
            "ISB_EVENT_BUS": {
              "Ref": "ISBEventBusD5514129",
            },
            "ISB_NAMESPACE": {
              "Ref": "Namespace",
            },
            "LEASE_TABLE_NAME": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "leaseTable",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "ORG_MGT_ROLE_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "OrgMgtAccountId",
                  },
                  ":role/InnovationSandbox-",
                  {
                    "Ref": "Namespace",
                  },
                  "-OrgMgtRole",
                ],
              ],
            },
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-LeaseMonitoring-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupE607F9A7",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "ReservedConcurrentExecutions": 1,
        "Role": {
          "Fn::GetAtt": [
            "LeaseMonitoringFunctionRole46C50E2F",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "LeaseMonitoringFunctionRole46C50E2F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LeaseMonitoringFunctionRoleDefaultPolicy81F212C0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupE607F9A7",
                  "Arn",
                ],
              },
            },
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBEventBusD5514129",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IntermediateRole6D2F2036",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LeaseMonitoringFunctionRoleDefaultPolicy81F212C0",
        "Roles": [
          {
            "Ref": "LeaseMonitoringFunctionRole46C50E2F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LeaseMonitoringIsbDbTableReadWriteD3C69FFE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "leaseTable",
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "leaseTable",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncrypt*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":key/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "tableKmsKeyId",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoDBReadWriteAccess",
        "Roles": [
          {
            "Ref": "LeaseMonitoringFunctionRole46C50E2F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LeaseMonitoringScheduledEvent": {
      "Properties": {
        "Description": "triggers LeaseMonitoring every hour",
        "FlexibleTimeWindow": {
          "MaximumWindowInMinutes": 5,
          "Mode": "FLEXIBLE",
        },
        "ScheduleExpression": "rate(1 hour)",
        "Target": {
          "Arn": {
            "Fn::GetAtt": [
              "LeaseMonitoringFunctionA656342F",
              "Arn",
            ],
          },
          "RetryPolicy": {
            "MaximumRetryAttempts": 20,
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "LambdaInvokeRole0342EAD8",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Scheduler::Schedule",
    },
    "LeaseTemplatesLambdaFunction2965B8D5": {
      "DependsOn": [
        "LeaseTemplatesLambdaFunctionFunctionRoleDefaultPolicy67EAD3ED",
        "LeaseTemplatesLambdaFunctionFunctionRoleC7543D26",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "Lambda used as API GW method integration for lease-templates resources",
        "Environment": {
          "Variables": {
            "APP_CONFIG_APPLICATION_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configApplicationId",
              ],
            },
            "APP_CONFIG_ENVIRONMENT_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configEnvironmentId",
              ],
            },
            "APP_CONFIG_PROFILE_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "globalConfigConfigurationProfileId",
              ],
            },
            "AWS_APPCONFIG_EXTENSION_HTTP_PORT": "2772",
            "AWS_APPCONFIG_EXTENSION_POLL_INTERVAL_SECONDS": "10m",
            "AWS_APPCONFIG_EXTENSION_PREFETCH_LIST": {
              "Fn::Join": [
                "",
                [
                  "/applications/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configApplicationId",
                    ],
                  },
                  "/environments/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configEnvironmentId",
                    ],
                  },
                  "/configurations/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "globalConfigConfigurationProfileId",
                    ],
                  },
                ],
              ],
            },
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "LEASE_TEMPLATE_TABLE_NAME": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "leaseTemplateTable",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-LeaseTemplatesLambdaFunction-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
          {
            "Fn::FindInMap": [
              "AppConfigExtensionArnMap",
              {
                "Ref": "AWS::Region",
              },
              "arn",
            ],
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupE607F9A7",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "LeaseTemplatesLambdaFunctionFunctionRoleC7543D26",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "LeaseTemplatesLambdaFunctionFunctionRoleC7543D26": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LeaseTemplatesLambdaFunctionFunctionRoleDefaultPolicy67EAD3ED": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupE607F9A7",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "appconfig:StartConfigurationSession",
                "appconfig:GetLatestConfiguration",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":appconfig:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":application/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "configApplicationId",
                      ],
                    },
                    "/environment/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "configEnvironmentId",
                      ],
                    },
                    "/configuration/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "globalConfigConfigurationProfileId",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LeaseTemplatesLambdaFunctionFunctionRoleDefaultPolicy67EAD3ED",
        "Roles": [
          {
            "Ref": "LeaseTemplatesLambdaFunctionFunctionRoleC7543D26",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LeaseTemplatesLambdaFunctionIsbDbTableReadWriteE2959C86": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "leaseTemplateTable",
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "leaseTemplateTable",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncrypt*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":key/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "tableKmsKeyId",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoDBReadWriteAccess",
        "Roles": [
          {
            "Ref": "LeaseTemplatesLambdaFunctionFunctionRoleC7543D26",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LeasesLambdaFunction6133D88B": {
      "DependsOn": [
        "LeasesLambdaFunctionFunctionRoleDefaultPolicy3E670257",
        "LeasesLambdaFunctionFunctionRole8C813149",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "Lambda used as API GW method integration for leases resources",
        "Environment": {
          "Variables": {
            "ACCOUNT_TABLE_NAME": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "accountTable",
              ],
            },
            "APP_CONFIG_APPLICATION_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configApplicationId",
              ],
            },
            "APP_CONFIG_ENVIRONMENT_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configEnvironmentId",
              ],
            },
            "APP_CONFIG_PROFILE_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "globalConfigConfigurationProfileId",
              ],
            },
            "AWS_APPCONFIG_EXTENSION_HTTP_PORT": "2772",
            "AWS_APPCONFIG_EXTENSION_POLL_INTERVAL_SECONDS": "10m",
            "AWS_APPCONFIG_EXTENSION_PREFETCH_LIST": {
              "Fn::Join": [
                "",
                [
                  "/applications/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configApplicationId",
                    ],
                  },
                  "/environments/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configEnvironmentId",
                    ],
                  },
                  "/configurations/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "globalConfigConfigurationProfileId",
                    ],
                  },
                ],
              ],
            },
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "IDC_ROLE_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "IdcAccountId",
                  },
                  ":role/InnovationSandbox-",
                  {
                    "Ref": "Namespace",
                  },
                  "-IdcRole",
                ],
              ],
            },
            "IDENTITY_STORE_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "identityStoreId",
              ],
            },
            "INTERMEDIATE_ROLE_ARN": {
              "Fn::GetAtt": [
                "IntermediateRole6D2F2036",
                "Arn",
              ],
            },
            "ISB_EVENT_BUS": {
              "Ref": "ISBEventBusD5514129",
            },
            "ISB_NAMESPACE": {
              "Ref": "Namespace",
            },
            "LEASE_TABLE_NAME": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "leaseTable",
              ],
            },
            "LEASE_TEMPLATE_TABLE_NAME": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "leaseTemplateTable",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "ORG_MGT_ROLE_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "OrgMgtAccountId",
                  },
                  ":role/InnovationSandbox-",
                  {
                    "Ref": "Namespace",
                  },
                  "-OrgMgtRole",
                ],
              ],
            },
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "SANDBOX_OU_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "sandboxOuId",
              ],
            },
            "SSO_INSTANCE_ARN": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "ssoInstanceArn",
              ],
            },
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-LeasesLambdaFunction-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
          {
            "Fn::FindInMap": [
              "AppConfigExtensionArnMap",
              {
                "Ref": "AWS::Region",
              },
              "arn",
            ],
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupE607F9A7",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "LeasesLambdaFunctionFunctionRole8C813149",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "LeasesLambdaFunctionFunctionRole8C813149": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LeasesLambdaFunctionFunctionRoleDefaultPolicy3E670257": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupE607F9A7",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "appconfig:StartConfigurationSession",
                "appconfig:GetLatestConfiguration",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":appconfig:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":application/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "configApplicationId",
                      ],
                    },
                    "/environment/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "configEnvironmentId",
                      ],
                    },
                    "/configuration/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "globalConfigConfigurationProfileId",
                      ],
                    },
                  ],
                ],
              },
            },
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBEventBusD5514129",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IntermediateRole6D2F2036",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LeasesLambdaFunctionFunctionRoleDefaultPolicy3E670257",
        "Roles": [
          {
            "Ref": "LeasesLambdaFunctionFunctionRole8C813149",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LeasesLambdaFunctionIsbDbTableReadWrite68C6437B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "leaseTable",
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "leaseTable",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "leaseTemplateTable",
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "leaseTemplateTable",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "accountTable",
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "accountTable",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncrypt*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":key/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "tableKmsKeyId",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoDBReadWriteAccess",
        "Roles": [
          {
            "Ref": "LeasesLambdaFunctionFunctionRole8C813149",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LogArchivingFunction69A8FEEA": {
      "DependsOn": [
        "LogArchivingFunctionRoleDefaultPolicyD95F3E8A",
        "LogArchivingFunctionRole93CCD436",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "Archives ISB logs every 7 days",
        "Environment": {
          "Variables": {
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "DESTINATION_BUCKET_NAME": {
              "Ref": "LogArchivingIsbLogsArchiveC37D082C",
            },
            "DESTINATION_PREFIX": "isb-archive",
            "EXPORT_PERIOD_DAYS": "7",
            "ISB_NAMESPACE": {
              "Ref": "Namespace",
            },
            "LOG_GROUP_NAME": {
              "Ref": "ISBLogGroupE607F9A7",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-LogArchiving-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupE607F9A7",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "ReservedConcurrentExecutions": 1,
        "Role": {
          "Fn::GetAtt": [
            "LogArchivingFunctionRole93CCD436",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogArchivingFunctionRole93CCD436": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogArchivingFunctionRoleDefaultPolicyD95F3E8A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupE607F9A7",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LogArchivingIsbLogsArchiveC37D082C",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "LogArchivingIsbLogsArchiveC37D082C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IsbKmsKeyIsbComputeStack45953B87",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:CreateExportTask",
                "logs:DescribeExportTasks",
                "logs:DescribeLogStreams",
                "logs:ReadLogGroup",
                "logs:ReadLogStream",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ISBLogGroupE607F9A7",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ISBLogGroupE607F9A7",
                          "Arn",
                        ],
                      },
                      ":log-stream/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IsbKmsKeyIsbComputeStack45953B87",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogArchivingFunctionRoleDefaultPolicyD95F3E8A",
        "Roles": [
          {
            "Ref": "LogArchivingFunctionRole93CCD436",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LogArchivingIsbLogsArchiveC37D082C": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "S3_BUCKET_LOGGING_ENABLED",
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "IsbKmsKeyIsbComputeStack45953B87",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "ExpirationInDays": {
                "Fn::FindInMap": [
                  "Mapping",
                  "context",
                  "s3LogsGlacierRetentionInDays",
                  {
                    "DefaultValue": "",
                  },
                ],
              },
              "Status": "Enabled",
              "Transitions": [
                {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": {
                    "Fn::FindInMap": [
                      "Mapping",
                      "context",
                      "s3LogsArchiveRetentionInDays",
                      {
                        "DefaultValue": "",
                      },
                    ],
                  },
                },
              ],
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "LogArchivingIsbLogsArchivePolicyDB21B3FF": {
      "Properties": {
        "Bucket": {
          "Ref": "LogArchivingIsbLogsArchiveC37D082C",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LogArchivingIsbLogsArchiveC37D082C",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "LogArchivingIsbLogsArchiveC37D082C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:GetBucketAcl",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "logs.",
                      {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
              "Resource": {
                "Fn::GetAtt": [
                  "LogArchivingIsbLogsArchiveC37D082C",
                  "Arn",
                ],
              },
              "Sid": "S3BucketReadPermissions",
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
                "StringEquals": {
                  "aws:SourceAccount": {
                    "Ref": "AWS::AccountId",
                  },
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "logs.",
                      {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "LogArchivingIsbLogsArchiveC37D082C",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "S3ObjectWritePermissions",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "LogArchivingLambdaInvokeRoleB96CEF22": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "scheduler.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Allows EventBridgeScheduler to invoke Innovation Sandbox's Log Archiving lambda",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogArchivingLambdaInvokeRoleDefaultPolicyD9530B5E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LogArchivingFunction69A8FEEA",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "LogArchivingFunction69A8FEEA",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogArchivingLambdaInvokeRoleDefaultPolicyD9530B5E",
        "Roles": [
          {
            "Ref": "LogArchivingLambdaInvokeRoleB96CEF22",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LogArchivingScheduledEvent": {
      "Properties": {
        "Description": "Invokes Log Archiving 7 days",
        "FlexibleTimeWindow": {
          "MaximumWindowInMinutes": 240,
          "Mode": "FLEXIBLE",
        },
        "ScheduleExpression": "rate(7 days)",
        "Target": {
          "Arn": {
            "Fn::GetAtt": [
              "LogArchivingFunction69A8FEEA",
              "Arn",
            ],
          },
          "RetryPolicy": {
            "MaximumRetryAttempts": 3,
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "LogArchivingLambdaInvokeRoleB96CEF22",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Scheduler::Schedule",
    },
    "LogInsightsQueriesAccountCleanupLogsBCC2CA19": {
      "Properties": {
        "LogGroupNames": [
          {
            "Ref": "ISBLogGroupCleanup485A102F",
          },
        ],
        "Name": {
          "Fn::Join": [
            "",
            [
              "ISB-",
              {
                "Ref": "Namespace",
              },
              "/AccountCleanupLogs",
            ],
          ],
        },
        "QueryString": "# Innovation Sandbox Account Cleanup Logs
# View all logs from the account cleanup process for a given state machine execution id.
# Results show resource deletion failures that occurred and aws nuke summary logs.
# Remember to set the time range for this log query in the widget above
fields @timestamp, type as resourceType, owner as region, name, msg
# Replace /PasteStateMachineExecutionIdHere/ with the account cleanup state machine execution id for the account under investigation.
| filter @logStream like /PasteStateMachineExecutionIdHere/
| filter # Comment out this filter to see all logs from the state machine execution.
  component = "libnuke"
   or state = "failed"
| sort @timestamp desc
| sort time desc",
      },
      "Type": "AWS::Logs::QueryDefinition",
    },
    "LogInsightsQueriesErrorsLogsC86921EA": {
      "Properties": {
        "LogGroupNames": [
          {
            "Ref": "ISBLogGroupE607F9A7",
          },
        ],
        "Name": {
          "Fn::Join": [
            "",
            [
              "ISB-",
              {
                "Ref": "Namespace",
              },
              "/ErrorLogs",
            ],
          ],
        },
        "QueryString": "# Innovation Sandbox Errors Query
# View all errors and warnings that have been raised by the core operational
# components of Innovation Sandbox
# Remember to set the time range for this log query in the widget above
fields @timestamp, @message, message.errorMessage
| filter level = 'ERROR' or level = "WARN"
| filter message != 'Lambda invocation event'
| sort @timestamp desc
| display @timestamp, level, concat(message, message.errorMessage, errorMessage) as msg",
      },
      "Type": "AWS::Logs::QueryDefinition",
    },
    "LogInsightsQueriesLogQuery845977A8": {
      "Properties": {
        "LogGroupNames": [
          {
            "Ref": "ISBLogGroupE607F9A7",
          },
        ],
        "Name": {
          "Fn::Join": [
            "",
            [
              "ISB-",
              {
                "Ref": "Namespace",
              },
              "/LogQuery",
            ],
          ],
        },
        "QueryString": "# Innovation Sandbox Log Query
# Remember to set the time range for this log query in the widget above
fields @timestamp, @message
# Replace /PasteReferenceIDHere/ with a reference ID such as an AWS Account ID,
# Lease UUID, user email address, or other unique identifier
| filter @message like /PasteReferenceIDHere/
| filter isPresent(message) or isPresent(errorMessage) or isPresent(message.errorMessage)
| filter level != 'DEBUG'
| filter message != 'Lambda invocation event'
| sort @timestamp desc
| display @timestamp, concat(message, message.errorMessage, errorMessage) as msg",
      },
      "Type": "AWS::Logs::QueryDefinition",
    },
    "SandboxAccountLifecycleManagementFunction475E871B": {
      "DependsOn": [
        "SandboxAccountLifecycleManagementFunctionRoleDefaultPolicyF3EBEB9E",
        "SandboxAccountLifecycleManagementFunctionRole6469637D",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "responds to lease events and determines what further actions should be taken",
        "Environment": {
          "Variables": {
            "ACCOUNT_TABLE_NAME": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "accountTable",
              ],
            },
            "APP_CONFIG_APPLICATION_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configApplicationId",
              ],
            },
            "APP_CONFIG_ENVIRONMENT_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configEnvironmentId",
              ],
            },
            "APP_CONFIG_PROFILE_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "globalConfigConfigurationProfileId",
              ],
            },
            "AWS_APPCONFIG_EXTENSION_HTTP_PORT": "2772",
            "AWS_APPCONFIG_EXTENSION_POLL_INTERVAL_SECONDS": "10m",
            "AWS_APPCONFIG_EXTENSION_PREFETCH_LIST": {
              "Fn::Join": [
                "",
                [
                  "/applications/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configApplicationId",
                    ],
                  },
                  "/environments/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configEnvironmentId",
                    ],
                  },
                  "/configurations/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "globalConfigConfigurationProfileId",
                    ],
                  },
                ],
              ],
            },
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "IDC_ROLE_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "IdcAccountId",
                  },
                  ":role/InnovationSandbox-",
                  {
                    "Ref": "Namespace",
                  },
                  "-IdcRole",
                ],
              ],
            },
            "IDENTITY_STORE_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "identityStoreId",
              ],
            },
            "INTERMEDIATE_ROLE_ARN": {
              "Fn::GetAtt": [
                "IntermediateRole6D2F2036",
                "Arn",
              ],
            },
            "ISB_EVENT_BUS": {
              "Ref": "ISBEventBusD5514129",
            },
            "ISB_NAMESPACE": {
              "Ref": "Namespace",
            },
            "LEASE_TABLE_NAME": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "leaseTable",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "ORG_MGT_ROLE_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "OrgMgtAccountId",
                  },
                  ":role/InnovationSandbox-",
                  {
                    "Ref": "Namespace",
                  },
                  "-OrgMgtRole",
                ],
              ],
            },
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "innovation-sandbox",
            "SANDBOX_OU_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "sandboxOuId",
              ],
            },
            "SSO_INSTANCE_ARN": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "ssoInstanceArn",
              ],
            },
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-SandboxAccountLifecycleManagement-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
          {
            "Fn::FindInMap": [
              "AppConfigExtensionArnMap",
              {
                "Ref": "AWS::Region",
              },
              "arn",
            ],
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupE607F9A7",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "ReservedConcurrentExecutions": 1,
        "Role": {
          "Fn::GetAtt": [
            "SandboxAccountLifecycleManagementFunctionRole6469637D",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "SandboxAccountLifecycleManagementFunctionRole6469637D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SandboxAccountLifecycleManagementFunctionRoleDefaultPolicyF3EBEB9E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupE607F9A7",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "appconfig:StartConfigurationSession",
                "appconfig:GetLatestConfiguration",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":appconfig:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":application/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "configApplicationId",
                      ],
                    },
                    "/environment/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "configEnvironmentId",
                      ],
                    },
                    "/configuration/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "globalConfigConfigurationProfileId",
                      ],
                    },
                  ],
                ],
              },
            },
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBEventBusD5514129",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IntermediateRole6D2F2036",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AccountLifeCycleEventsToSqsToLambdaAccountLifeCycleEventsQueue2EC48316",
                  "Arn",
                ],
              },
            },
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IsbKmsKeyIsbComputeStack45953B87",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SandboxAccountLifecycleManagementFunctionRoleDefaultPolicyF3EBEB9E",
        "Roles": [
          {
            "Ref": "SandboxAccountLifecycleManagementFunctionRole6469637D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SandboxAccountLifecycleManagementFunctionSqsEventSourceIsbComputeStackAccountLifeCycleEventsToSqsToLambdaAccountLifeCycleEventsQueueD5CAD2BBC4C5261F": {
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "AccountLifeCycleEventsToSqsToLambdaAccountLifeCycleEventsQueue2EC48316",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "SandboxAccountLifecycleManagementFunction475E871B",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "SandboxAccountLifecycleManagementIsbDbTableReadWrite7C76B3D4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "leaseTable",
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "leaseTable",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "accountTable",
                        ],
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":dynamodb:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Fn::GetAtt": [
                          "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                          "accountTable",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ReEncrypt*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":key/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "tableKmsKeyId",
                      ],
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoDBReadWriteAccess",
        "Roles": [
          {
            "Ref": "SandboxAccountLifecycleManagementFunctionRole6469637D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SharedParamReaderSsmReadPolicy435E9A92": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "IdcAccountId",
                      },
                      ":parameter/InnovationSandbox_",
                      {
                        "Ref": "Namespace",
                      },
                      "_Idc_Configuration",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "OrgMgtAccountId",
                      },
                      ":parameter/InnovationSandbox_",
                      {
                        "Ref": "Namespace",
                      },
                      "_AccountPool_Configuration",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter/InnovationSandbox_",
                      {
                        "Ref": "Namespace",
                      },
                      "_Data_Configuration",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SharedParamReaderSsmReadPolicy435E9A92",
        "Roles": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverParseJsonConfigurationFunctionRoleAD0AD111",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SsoHandlerFunction8FE0A4A7": {
      "DependsOn": [
        "SsoHandlerFunctionRoleDefaultPolicyD29168B4",
        "SsoHandlerFunctionRoleA9C67752",
      ],
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "LAMBDA_INSIDE_VPC",
            "LAMBDA_CONCURRENCY_CHECK",
          ],
        },
      },
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": "Omitted to remove snapshot dependency on hash",
        "Description": "Handles SSO operations",
        "Environment": {
          "Variables": {
            "APP_CONFIG_APPLICATION_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configApplicationId",
              ],
            },
            "APP_CONFIG_ENVIRONMENT_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "configEnvironmentId",
              ],
            },
            "APP_CONFIG_PROFILE_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "globalConfigConfigurationProfileId",
              ],
            },
            "AWS_APPCONFIG_EXTENSION_HTTP_PORT": "2772",
            "AWS_APPCONFIG_EXTENSION_POLL_INTERVAL_SECONDS": "10m",
            "AWS_APPCONFIG_EXTENSION_PREFETCH_LIST": {
              "Fn::Join": [
                "",
                [
                  "/applications/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configApplicationId",
                    ],
                  },
                  "/environments/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "configEnvironmentId",
                    ],
                  },
                  "/configurations/",
                  {
                    "Fn::GetAtt": [
                      "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                      "globalConfigConfigurationProfileId",
                    ],
                  },
                ],
              ],
            },
            "AWS_XRAY_CONTEXT_MISSING": "IGNORE_ERROR",
            "IDC_ROLE_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":iam::",
                  {
                    "Ref": "IdcAccountId",
                  },
                  ":role/InnovationSandbox-",
                  {
                    "Ref": "Namespace",
                  },
                  "-IdcRole",
                ],
              ],
            },
            "IDENTITY_STORE_ID": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "identityStoreId",
              ],
            },
            "IDP_CERT_SECRET_NAME": {
              "Fn::Join": [
                "",
                [
                  "/InnovationSandbox/",
                  {
                    "Ref": "Namespace",
                  },
                  "/Auth/IdpCert",
                ],
              ],
            },
            "INTERMEDIATE_ROLE_ARN": {
              "Fn::GetAtt": [
                "IntermediateRole6D2F2036",
                "Arn",
              ],
            },
            "ISB_NAMESPACE": {
              "Ref": "Namespace",
            },
            "JWT_SECRET_NAME": {
              "Fn::Join": [
                "",
                [
                  "/InnovationSandbox/",
                  {
                    "Ref": "Namespace",
                  },
                  "/Auth/JwtSecret",
                ],
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "POWERTOOLS_LOG_LEVEL": {
              "Fn::FindInMap": [
                "Mapping",
                "context",
                "logLevel",
                {
                  "DefaultValue": "",
                },
              ],
            },
            "POWERTOOLS_SERVICE_NAME": "SsoHandler",
            "SSO_INSTANCE_ARN": {
              "Fn::GetAtt": [
                "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                "ssoInstanceArn",
              ],
            },
            "USER_AGENT_EXTRA": "AwsSolution/SO0284/v1.0.0",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "ISB-SsoHandler-",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackDependenciesLayerVersion5B4AA878",
          },
          {
            "Ref": "IsbSpokeConfigJsonParamResolverISBLambdaLayerIsbComputeStackCommonLayerVersion27C21445",
          },
          {
            "Fn::FindInMap": [
              "AppConfigExtensionArnMap",
              {
                "Ref": "AWS::Region",
              },
              "arn",
            ],
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "ISBLogGroupE607F9A7",
          },
          "SystemLogLevel": "INFO",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "SsoHandlerFunctionRoleA9C67752",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "SsoHandlerFunctionRoleA9C67752": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SsoHandlerFunctionRoleDefaultPolicyD29168B4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ISBLogGroupE607F9A7",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "appconfig:StartConfigurationSession",
                "appconfig:GetLatestConfiguration",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":appconfig:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":application/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "configApplicationId",
                      ],
                    },
                    "/environment/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "configEnvironmentId",
                      ],
                    },
                    "/configuration/",
                    {
                      "Fn::GetAtt": [
                        "IsbSpokeConfigJsonParamResolverParseJsonConfigurationIsbCustomResource57F98B57",
                        "globalConfigConfigurationProfileId",
                      ],
                    },
                  ],
                ],
              },
            },
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": [
                {
                  "Ref": "JwtSecretB8834B39",
                },
                {
                  "Ref": "IdpCertC53FAE82",
                },
              ],
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IsbKmsKeyIsbComputeStack45953B87",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "IntermediateRole6D2F2036",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SsoHandlerFunctionRoleDefaultPolicyD29168B4",
        "Roles": [
          {
            "Ref": "SsoHandlerFunctionRoleA9C67752",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
  "Transform": [
    "AWS::LanguageExtensions",
  ],
}
`;

exports[`IsbDataStack Snapshot > matches the snapshot 1`] = `
{
  "Mappings": {
    "Mapping": {
      "context": {
        "apiThrottlingBurstLimit": 200,
        "apiThrottlingRateLimit": 100,
        "cloudWatchLogRetentionInDays": 90,
        "deploymentMode": "prod",
        "logLevel": "INFO",
        "publicEcrRegistry": "public.ecr.aws/aws-solutions",
        "publicEcrTag": "v1.0.0",
        "s3LogsArchiveRetentionInDays": 365,
        "s3LogsGlacierRetentionInDays": 2555,
        "sendAnonymizedUsageMetrics": "true",
        "solutionId": "SO0284",
        "solutionName": "innovation-sandbox-on-aws",
        "version": "v1.0.0",
      },
    },
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Data Stack Configuration",
          },
          "Parameters": [
            "Namespace",
          ],
        },
      ],
      "ParameterLabels": {
        "Namespace": {
          "default": "Namespace",
        },
      },
    },
  },
  "Outputs": {
    "ConfigApplicationId": {
      "Export": {
        "Name": "IsbDataStack-ConfigApplicationId",
      },
      "Value": {
        "Ref": "ConfigApplication1A42FDD2",
      },
    },
    "ConfigDeploymentStrategyId": {
      "Export": {
        "Name": "IsbDataStack-ConfigDeploymentStrategyId",
      },
      "Value": {
        "Ref": "ConfigDeploymentStrategy6B5E2A35",
      },
    },
    "ConfigEnvironmentId": {
      "Export": {
        "Name": "IsbDataStack-ConfigEnvironmentId",
      },
      "Value": {
        "Ref": "ConfigEnvironment6C769E19",
      },
    },
    "GlobalConfigConfigurationProfileId": {
      "Export": {
        "Name": "IsbDataStack-GlobalConfigConfigurationProfileId",
      },
      "Value": {
        "Ref": "ConfigGlobalConfigHostedConfigurationConfigurationProfileB3D05932",
      },
    },
    "LeaseTable": {
      "Export": {
        "Name": "IsbDataStack-LeaseTable",
      },
      "Value": {
        "Ref": "LeaseTable473C6DF2",
      },
    },
    "LeaseTemplateTable": {
      "Export": {
        "Name": "IsbDataStack-LeaseTemplateTable",
      },
      "Value": {
        "Ref": "LeaseTemplateTable5128F8F4",
      },
    },
    "NukeConfigConfigurationProfileId": {
      "Export": {
        "Name": "IsbDataStack-NukeConfigConfigurationProfileId",
      },
      "Value": {
        "Ref": "ConfigNukeConfigHostedConfigurationConfigurationProfileEC3A0164",
      },
    },
    "SandboxAccountTable": {
      "Export": {
        "Name": "IsbDataStack-SandboxAccountTable",
      },
      "Value": {
        "Ref": "SandboxAccountTableEFB9C069",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "Namespace": {
      "AllowedPattern": "^[0-9a-zA-Z]{3,8}$",
      "Default": "myisb",
      "Description": "The namespace for this deployment of Innovation Sandbox (must be the same for all member stacks). Alphanumeric characters of length between 3 and 8",
      "Type": "String",
    },
  },
  "Resources": {
    "ConfigApplication1A42FDD2": {
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "AppConfig Application for Innovation Sandbox on AWS - ",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Name": "IsbDataStack-Config-Application-A6D66B1C",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::AppConfig::Application",
    },
    "ConfigDeploymentStrategy6B5E2A35": {
      "Properties": {
        "DeploymentDurationInMinutes": 0,
        "Description": {
          "Fn::Join": [
            "",
            [
              "AppConfig DeploymentStrategy for Innovation Sandbox on AWS - ",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "FinalBakeTimeInMinutes": 0,
        "GrowthFactor": 100,
        "Name": "IsbDataStack-Config-DeploymentStrategy-962DD280",
        "ReplicateTo": "NONE",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::AppConfig::DeploymentStrategy",
    },
    "ConfigEnvironment6C769E19": {
      "Properties": {
        "ApplicationId": {
          "Ref": "ConfigApplication1A42FDD2",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "AppConfig Environment for Innovation Sandbox on AWS - ",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "Name": "IsbDataStack-Config-Environment-3A320AEC",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::AppConfig::Environment",
    },
    "ConfigGlobalConfigHostedConfigurationConfigurationProfileB3D05932": {
      "Properties": {
        "ApplicationId": {
          "Ref": "ConfigApplication1A42FDD2",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "GlobalConfig AppConfig HostedConfiguration for Innovation Sandbox on AWS - ",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "LocationUri": "hosted",
        "Name": "IsbDataStack-Config-GlobalConfigHostedConfiguration-74548BD0",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::AppConfig::ConfigurationProfile",
    },
    "ConfigGlobalConfigHostedConfigurationD68D5E86": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "ApplicationId": {
          "Ref": "ConfigApplication1A42FDD2",
        },
        "ConfigurationProfileId": {
          "Ref": "ConfigGlobalConfigHostedConfigurationConfigurationProfileB3D05932",
        },
        "Content": "# Flag to enable maintenance mode
maintenanceMode: true

# Terms of Service that will be displayed to users when requesting a lease.
termsOfService: |
  Users, who use a leased AWS account for their sandbox experiments, should NOT,

  * Attempt to access data that they are not authorized to use or access.
  * Use content for a sandbox use case that has not been approved by an admin.
  * Perform any unauthorized changes or store unapproved company data within the leased AWS account.
  * Provide static passwords, such as default or actual passwords.
  * Change or modify quotas/limits out of band for accounts.
  * Transfer data or software to any person or organization not authorized to use the leased AWS account.
  * Use any material or information from the leased AWS accounts, including images, logos, or photographs in any manner that violates copyright, trademark, or intellectual property laws.

# global controls on leases
#   requireMaxBudget   - Flag that determines whether or not LeaseTemplates must be created with a maximum budget
#   maxBudget          - The maximum value (in dollars) that can be set for a LeaseTemplate budget, if requireMaxBudget is false this configuration is ignored
#   requireMaxDuration - Flag that determines whether or not LeaseTemplates must be created with a maximum duration
#   maxDurationHours   - The maximum duration (in hours) that can be set for a LeaseTemplate duration, if requireMaxDuration is false this configuration is ignored
#   maxLeasesPerUser   - The maximum number of concurrent active leases/lease requests that a single user can have
#   ttl                - The number of days an expired lease record will remain in the database before it is permanently deleted (records may take up to 48 hours to be deleted)
leases:
  requireMaxBudget: true
  maxBudget: 50 # in dollars
  requireMaxDuration: true
  maxDurationHours: 168 # 7 days
  maxLeasesPerUser: 3
  ttl: 30 # in days

# Account Cleanup controls
#   numberOfFailedAttemptsToCancelCleanup     - The number of total failed AWS Nuke attempts required before an account fails cleanup and is sent to quarantine
#   waitBeforeRetryFailedAttemptSeconds       - The delay between failed attempts of failed AWS Nuke executions
#   numberOfSuccessfulAttemptsToFinishCleanup - The number of total successful AWS Nuke attempts required before an account succeeds cleanup and is sent to available
#   waitBeforeRerunSuccessfulAttemptSeconds   - The delay between successful attempts of AWS Nuke executions
cleanup:
  numberOfFailedAttemptsToCancelCleanup: 3
  waitBeforeRetryFailedAttemptSeconds: 5
  numberOfSuccessfulAttemptsToFinishCleanup: 2
  waitBeforeRerunSuccessfulAttemptSeconds: 30

# Authentication Configuration
# idpSignInUrl              - The value of "IAM Identity Center sign-in URL"
# idpSignOutUrl             - The value of "IAM Identity Center sign-out URL"
# idpAudience               - The audience identifier set in the creation of the IAM Identity Center custom application
# webAppUrl                 - The cloud front distribution URL or the URL of your custom domain
# awsAccessPortalUrl        - The value of "AWS access portal URL".
# sessionDurationInMinutes  - The length of time (in minutes) that a user's session should remain valid before requiring re-authentication
auth:
  idpSignInUrl: ""
  idpSignOutUrl: ""
  idpAudience: ""
  webAppUrl: ""
  awsAccessPortalUrl: ""
  sessionDurationInMinutes: 60

# Email Notification controls
#   emailFrom - The email address to use in the "from" field of all email notifications
notification:
  emailFrom: ""
",
        "ContentType": "application/x-yaml",
        "Description": {
          "Fn::Join": [
            "",
            [
              "GlobalConfig AppConfig HostedConfiguration for Innovation Sandbox on AWS - ",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
      },
      "Type": "AWS::AppConfig::HostedConfigurationVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ConfigGlobalConfigHostedConfigurationDeployment317E92A586F7E": {
      "Properties": {
        "ApplicationId": {
          "Ref": "ConfigApplication1A42FDD2",
        },
        "ConfigurationProfileId": {
          "Ref": "ConfigGlobalConfigHostedConfigurationConfigurationProfileB3D05932",
        },
        "ConfigurationVersion": {
          "Ref": "ConfigGlobalConfigHostedConfigurationD68D5E86",
        },
        "DeploymentStrategyId": {
          "Ref": "ConfigDeploymentStrategy6B5E2A35",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "GlobalConfig AppConfig HostedConfiguration for Innovation Sandbox on AWS - ",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "EnvironmentId": {
          "Ref": "ConfigEnvironment6C769E19",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::AppConfig::Deployment",
    },
    "ConfigNukeConfigHostedConfiguration997D7FAE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "ApplicationId": {
          "Ref": "ConfigApplication1A42FDD2",
        },
        "ConfigurationProfileId": {
          "Ref": "ConfigNukeConfigHostedConfigurationConfigurationProfileEC3A0164",
        },
        "Content": "regions:
  - global # further AWS regions will be added dynamically from CleanupConfig
bypass-alias-check-accounts:
  - "%CLEANUP_ACCOUNT_ID%"
settings:
  CloudFormationStack:
    DisableDeletionProtection: true
    CreateRoleToDeleteStack: true
  CognitoUserPool:
    DisableDeletionProtection: true
  DSQLCluster:
    DisableDeletionProtection: true
  DynamoDBTable:
    DisableDeletionProtection: true
  EC2Image:
    IncludeDisabled: true
    IncludeDeprecated: true
    DisableDeregistrationProtection: true
  EC2Instance:
    DisableStopProtection: true
    DisableDeletionProtection: true
  ELBv2:
    DisableDeletionProtection: true
  LightsailInstance:
    ForceDeleteAddOns: true
  NeptuneCluster:
    DisableDeletionProtection: true
  NeptuneInstance:
    DisableClusterDeletionProtection: true
    DisableDeletionProtection: true
  NeptuneGraph:
    DisableDeletionProtection: true
  QLDBLedger:
    DisableDeletionProtection: true
  QuickSightSubscription:
    DisableTerminationProtection: true
  RDSInstance:
    DisableDeletionProtection: true
  S3Bucket:
    BypassGovernanceRetention: true
    RemoveObjectLegalHold: true
resource-types:
  excludes:
    - S3Object # Let the S3Bucket delete all Objects instead of individual objects (optimization)
    - ConfigServiceConfigurationRecorder
    - ConfigServiceDeliveryChannel
blocklist:
  - "%HUB_ACCOUNT_ID%" # placeholder HUB_ACCOUNT_ID will be dynamically replaced during CodeBuild execution
accounts:
  "%CLEANUP_ACCOUNT_ID%": # placeholder CLEANUP_ACCOUNT_ID will be dynamically replaced during CodeBuild execution
    filters:
      CloudFormationStack:
        - type: glob
          value: StackSet-Isb-* # protects sandbox account stack set instance from being deleted
      CloudTrailTrail:
        - type: glob
          value: aws-controltower-*
        - type: exact
          value: all-org-cloud-trail
      CloudWatchEventsRule:
        - property: Name
          type: glob
          value: aws-controltower-*
        - property: Name
          type: contains
          value: AWSControlTower
      IAMRole:
        - type: exact
          value: "%CLEANUP_ROLE_NAME%" # placeholder CLEANUP_ROLE_NAME will be dynamically replaced during CodeBuild executio
        - type: exact
          value: OrganizationAccountAccessRole
        - type: glob
          value: stacksets-exec-*
        - type: glob
          value: AWSReservedSSO_*
        - type: contains
          value: AWSControlTower
        - type: glob
          value: aws-controltower-*
      IAMRolePolicy:
        - property: "role:RoleName"
          type: exact
          value: "%CLEANUP_ROLE_NAME%" # placeholder CLEANUP_ROLE_NAME will be dynamically replaced during CodeBuild execution
        - property: "role:RoleName"
          type: exact
          value: OrganizationAccountAccessRole
        - property: "role:RoleName"
          type: glob
          value: stacksets-exec-*
        - type: glob
          value: AWSReservedSSO_*
        - property: "role:RoleName"
          type: contains
          value: AWSControlTower
        - property: "role:RoleName"
          type: glob
          value: aws-controltower-*
      IAMRolePolicyAttachment:
        - property: RoleName
          type: exact
          value: "%CLEANUP_ROLE_NAME%" # placeholder CLEANUP_ROLE_NAME will be dynamically replaced during CodeBuild execution
        - property: RoleName
          type: exact
          value: OrganizationAccountAccessRole
        - property: RoleName
          type: glob
          value: stacksets-exec-*
        - type: glob
          value: AWSReservedSSO_*
        - property: RoleName
          type: contains
          value: AWSControlTower
        - property: RoleName
          type: glob
          value: aws-controltower-*
      IAMSAMLProvider:
        - type: contains
          value: AWSSSO
      LambdaFunction:
        - type: glob
          value: aws-controltower-*
      CloudWatchLogsLogGroup:
        - type: contains
          value: aws-controltower
      OSPackage:
        - type: glob
          value: pkg-*
        - type: glob
          value: G*
      SNSSubscription:
        - property: "ARN"
          type: contains
          value: "aws-controltower"
      SNSTopic:
        - type: glob
          value: aws-controltower-*
",
        "ContentType": "application/x-yaml",
        "Description": {
          "Fn::Join": [
            "",
            [
              "NukeConfig AppConfig HostedConfiguration for Innovation Sandbox on AWS - ",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
      },
      "Type": "AWS::AppConfig::HostedConfigurationVersion",
      "UpdateReplacePolicy": "Retain",
    },
    "ConfigNukeConfigHostedConfigurationConfigurationProfileEC3A0164": {
      "Properties": {
        "ApplicationId": {
          "Ref": "ConfigApplication1A42FDD2",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "NukeConfig AppConfig HostedConfiguration for Innovation Sandbox on AWS - ",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "LocationUri": "hosted",
        "Name": "IsbDataStack-Config-NukeConfigHostedConfiguration-E4A1CA34",
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::AppConfig::ConfigurationProfile",
    },
    "ConfigNukeConfigHostedConfigurationDeployment317E9BF4F85A4": {
      "DependsOn": [
        "ConfigGlobalConfigHostedConfigurationDeployment317E92A586F7E",
      ],
      "Properties": {
        "ApplicationId": {
          "Ref": "ConfigApplication1A42FDD2",
        },
        "ConfigurationProfileId": {
          "Ref": "ConfigNukeConfigHostedConfigurationConfigurationProfileEC3A0164",
        },
        "ConfigurationVersion": {
          "Ref": "ConfigNukeConfigHostedConfiguration997D7FAE",
        },
        "DeploymentStrategyId": {
          "Ref": "ConfigDeploymentStrategy6B5E2A35",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "NukeConfig AppConfig HostedConfiguration for Innovation Sandbox on AWS - ",
              {
                "Ref": "Namespace",
              },
            ],
          ],
        },
        "EnvironmentId": {
          "Ref": "ConfigEnvironment6C769E19",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::AppConfig::Deployment",
    },
    "DataConfiguration459A4DE7": {
      "Properties": {
        "Description": "The configuration of the data stack of Innovation Sandbox",
        "Name": {
          "Fn::Join": [
            "",
            [
              "InnovationSandbox_",
              {
                "Ref": "Namespace",
              },
              "_Data_Configuration",
            ],
          ],
        },
        "Tags": {
          "aws-solutions:isb-id": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "Namespace",
                },
                "_isb",
              ],
            ],
          },
        },
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              "{"configApplicationId":"",
              {
                "Ref": "ConfigApplication1A42FDD2",
              },
              "","configEnvironmentId":"",
              {
                "Ref": "ConfigEnvironment6C769E19",
              },
              "","globalConfigConfigurationProfileId":"",
              {
                "Ref": "ConfigGlobalConfigHostedConfigurationConfigurationProfileB3D05932",
              },
              "","nukeConfigConfigurationProfileId":"",
              {
                "Ref": "ConfigNukeConfigHostedConfigurationConfigurationProfileEC3A0164",
              },
              "","accountTable":"",
              {
                "Ref": "SandboxAccountTableEFB9C069",
              },
              "","leaseTemplateTable":"",
              {
                "Ref": "LeaseTemplateTable5128F8F4",
              },
              "","leaseTable":"",
              {
                "Ref": "LeaseTable473C6DF2",
              },
              "","tableKmsKeyId":"",
              {
                "Ref": "IsbKmsKeyIsbDataStackFBC2D6AE",
              },
              "","solutionVersion":"",
              {
                "Fn::FindInMap": [
                  "Mapping",
                  "context",
                  "version",
                  {
                    "DefaultValue": "",
                  },
                ],
              },
              "","supportedSchemas":"[\\"1\\"]"}",
            ],
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "IsbKmsKeyIsbDataStackAliasDAFEFC55": {
      "Properties": {
        "AliasName": {
          "Fn::Join": [
            "",
            [
              "alias/AwsSolutions/InnovationSandbox/",
              {
                "Ref": "Namespace",
              },
              "/IsbDataStack",
            ],
          ],
        },
        "TargetKeyId": {
          "Fn::GetAtt": [
            "IsbKmsKeyIsbDataStackFBC2D6AE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "IsbKmsKeyIsbDataStackFBC2D6AE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "Encryption Key for Innovation Sandbox: IsbDataStack",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "LeaseTable473C6DF2": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "userEmail",
            "AttributeType": "S",
          },
          {
            "AttributeName": "uuid",
            "AttributeType": "S",
          },
          {
            "AttributeName": "status",
            "AttributeType": "S",
          },
          {
            "AttributeName": "originalLeaseTemplateUuid",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "DeletionProtectionEnabled": true,
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "StatusIndex",
            "KeySchema": [
              {
                "AttributeName": "status",
                "KeyType": "HASH",
              },
              {
                "AttributeName": "originalLeaseTemplateUuid",
                "KeyType": "RANGE",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "userEmail",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "uuid",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": {
          "KMSMasterKeyId": {
            "Fn::GetAtt": [
              "IsbKmsKeyIsbDataStackFBC2D6AE",
              "Arn",
            ],
          },
          "SSEEnabled": true,
          "SSEType": "KMS",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
        "TimeToLiveSpecification": {
          "AttributeName": "ttl",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "LeaseTemplateTable5128F8F4": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "uuid",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "DeletionProtectionEnabled": true,
        "KeySchema": [
          {
            "AttributeName": "uuid",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": {
          "KMSMasterKeyId": {
            "Fn::GetAtt": [
              "IsbKmsKeyIsbDataStackFBC2D6AE",
              "Arn",
            ],
          },
          "SSEEnabled": true,
          "SSEType": "KMS",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "SandboxAccountTableEFB9C069": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "awsAccountId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "DeletionProtectionEnabled": true,
        "KeySchema": [
          {
            "AttributeName": "awsAccountId",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": {
          "KMSMasterKeyId": {
            "Fn::GetAtt": [
              "IsbKmsKeyIsbDataStackFBC2D6AE",
              "Arn",
            ],
          },
          "SSEEnabled": true,
          "SSEType": "KMS",
        },
        "Tags": [
          {
            "Key": "aws-solutions:isb-id",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Namespace",
                  },
                  "_isb",
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
  "Transform": "AWS::LanguageExtensions",
}
`;

exports[`SandboxAccountStack Snapshot > matches the snapshot 1`] = `
{
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [],
      "ParameterLabels": {
        "HubAccountId": {
          "default": "Hub Account Id",
        },
        "Namespace": {
          "default": "Namespace",
        },
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "HubAccountId": {
      "AllowedPattern": "^[0-9]{12}$",
      "Description": "The AWS Account Id where the Innovation Sandbox hub application is (to be) deployed",
      "Type": "String",
    },
    "Namespace": {
      "AllowedPattern": "^[0-9a-zA-Z]{3,8}$",
      "Default": "myisb",
      "Description": "The namespace for this deployment of Innovation Sandbox (must be the same for all member stacks). Alphanumeric characters of length between 3 and 8",
      "Type": "String",
    },
  },
  "Resources": {
    "SandboxAccountRole39551795": {
      "Metadata": {
        "guard": {
          "SuppressedRules": [
            "CFN_NO_EXPLICIT_RESOURCE_NAMES",
            "IAM_NO_INLINE_POLICY_CHECK",
            "IAM_POLICYDOCUMENT_NO_WILDCARD_RESOURCE",
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ArnEquals": {
                  "aws:PrincipalArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        {
                          "Ref": "HubAccountId",
                        },
                        ":role/InnovationSandbox-",
                        {
                          "Ref": "Namespace",
                        },
                        "-IntermediateRole",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "HubAccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role to be assumed when operating on sandbox accounts",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "*",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "SandboxAccountAdministration",
          },
        ],
        "RoleName": {
          "Fn::Join": [
            "",
            [
              "InnovationSandbox-",
              {
                "Ref": "Namespace",
              },
              "-SandboxAccountRole",
            ],
          ],
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
